{
	"id": "165b3f938ffc854a7d68504bc9053ff6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.3",
	"solcLongVersion": "0.6.3+commit.8dda9521",
	"input": {
		"language": "Solidity",
		"sources": {
			"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol": {
				"content": "pragma solidity ^0.6.0;\n\nimport \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\";\n\ncontract BEP20UpgradeableProxy is TransparentUpgradeableProxy {\n\n    constructor(address logic, address admin, bytes memory data) TransparentUpgradeableProxy(logic, admin, data) public {\n\n    }\n\n}"
			},
			"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./UpgradeableProxy.sol\";\n\n/**\n * @dev This contract implements a proxy that is upgradeable by an admin.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches one of the admin functions exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n * \"admin cannot fallback to proxy target\".\n *\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n * to sudden errors when trying to call a function from the proxy implementation.\n *\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n */\ncontract TransparentUpgradeableProxy is UpgradeableProxy {\n    /**\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n     * optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}.\n     */\n    constructor(address _logic, address admin_, bytes memory _data) public payable UpgradeableProxy(_logic, _data) {\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1));\n        _setAdmin(admin_);\n    }\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 private constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _admin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function admin() external ifAdmin returns (address admin_) {\n        admin_ = _admin();\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function implementation() external ifAdmin returns (address implementation_) {\n        implementation_ = _implementation();\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\n     */\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\n        require(newAdmin != address(0), \"TransparentUpgradeableProxy: new admin is the zero address\");\n        emit AdminChanged(_admin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\n     */\n    function upgradeTo(address newImplementation) external virtual ifAdmin {\n        _upgradeTo(newImplementation);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n     * proxied contract.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\n     */\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {\n        _upgradeTo(newImplementation);\n        Address.functionDelegateCall(newImplementation, data);\n    }\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _admin() internal view virtual returns (address adm) {\n        bytes32 slot = _ADMIN_SLOT;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            adm := sload(slot)\n        }\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        bytes32 slot = _ADMIN_SLOT;\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            sstore(slot, newAdmin)\n        }\n    }\n\n    /**\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\n     */\n    function _beforeFallback() internal virtual override {\n        require(msg.sender != _admin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\");\n        super._beforeFallback();\n    }\n}\n"
			},
			"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./Proxy.sol\";\nimport \"../utils/Address.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n *\n * Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\n * {TransparentUpgradeableProxy}.\n */\ncontract UpgradeableProxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) public payable {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        _setImplementation(_logic);\n        if(_data.length > 0) {\n            Address.functionDelegateCall(_logic, _data);\n        }\n    }\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 private constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        bytes32 slot = _IMPLEMENTATION_SLOT;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            impl := sload(slot)\n        }\n    }\n\n    /**\n     * @dev Upgrades the proxy to a new implementation.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal virtual {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"UpgradeableProxy: new implementation is not a contract\");\n\n        bytes32 slot = _IMPLEMENTATION_SLOT;\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            sstore(slot, newImplementation)\n        }\n    }\n}\n"
			},
			"openzeppelin-solidity/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"openzeppelin-solidity/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internall call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 { revert(0, returndatasize()) }\n            default { return(0, returndatasize()) }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internall call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback () external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive () external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overriden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol": {
				"BEP20UpgradeableProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "logic",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "admin_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "implementation_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {
							"admin()": {
								"details": "Returns the current admin.     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
							},
							"changeAdmin(address)": {
								"details": "Changes the admin of the proxy.     * Emits an {AdminChanged} event.     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
							},
							"implementation()": {
								"details": "Returns the current implementation.     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
							},
							"upgradeTo(address)": {
								"details": "Upgrade the implementation of the proxy.     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract.     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":106:302  contract BEP20UpgradeableProxy is TransparentUpgradeableProxy {... */\n  mstore(0x40, 0x80)\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":175:299  constructor(address logic, address admin, bytes memory data) TransparentUpgradeableProxy(logic, admin, data) public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":175:299  constructor(address logic, address admin, bytes memory data) TransparentUpgradeableProxy(logic, admin, data) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x60\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_2:\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":175:299  constructor(address logic, address admin, bytes memory data) TransparentUpgradeableProxy(logic, admin, data) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":175:299  constructor(address logic, address admin, bytes memory data) TransparentUpgradeableProxy(logic, admin, data) public {... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":175:299  constructor(address logic, address admin, bytes memory data) TransparentUpgradeableProxy(logic, admin, data) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":264:269  logic */\n  dup3\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":271:276  admin */\n  dup3\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":278:282  data */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1930:1936  _logic */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1938:1943  _data */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1184:1185  1 */\n  0x01\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1139:1180  keccak256(\"eip1967.proxy.implementation\") */\n  mload(0x40)\n  dup1\n  dup1\n  0x656970313936372e70726f78792e696d706c656d656e746174696f6e00000000\n  dup2\n  mstore\n  pop\n  0x1c\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1131:1181  uint256(keccak256(\"eip1967.proxy.implementation\")) */\n  0x00\n  shr\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1131:1185  uint256(keccak256(\"eip1967.proxy.implementation\")) - 1 */\n  sub\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1123:1186  bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1) */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1727:1793  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1099:1119  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1099:1186  _IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1) */\n  eq\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1092:1187  assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1)) */\n  tag_14\n  jumpi\n  invalid\ntag_14:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1197:1223  _setImplementation(_logic) */\n  tag_15\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1216:1222  _logic */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1197:1215  _setImplementation */\n  shl(0x20, tag_16)\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1197:1223  _setImplementation(_logic) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1251:1252  0 */\n  0x00\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1236:1241  _data */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1236:1248  _data.length */\n  mload\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1236:1252  _data.length > 0 */\n  gt\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1233:1322  if(_data.length > 0) {... */\n  iszero\n  tag_17\n  jumpi\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1268:1311  Address.functionDelegateCall(_logic, _data) */\n  tag_18\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1297:1303  _logic */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1305:1310  _data */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1268:1296  Address.functionDelegateCall */\n  or(tag_0_57, shl(0x20, tag_19))\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1268:1311  Address.functionDelegateCall(_logic, _data) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1233:1322  if(_data.length > 0) {... */\ntag_17:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1019:1328  constructor(address _logic, bytes memory _data) public payable {... */\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2029:2030  1 */\n  0x01\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1993:2025  keccak256(\"eip1967.proxy.admin\") */\n  mload(0x40)\n  dup1\n  dup1\n  0x656970313936372e70726f78792e61646d696e00000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x13\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1985:2026  uint256(keccak256(\"eip1967.proxy.admin\")) */\n  0x00\n  shr\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1985:2030  uint256(keccak256(\"eip1967.proxy.admin\")) - 1 */\n  sub\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1977:2031  bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1) */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2443:2509  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1962:1973  _ADMIN_SLOT */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1962:2031  _ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1) */\n  eq\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1955:2032  assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1)) */\n  tag_21\n  jumpi\n  invalid\ntag_21:\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2042:2059  _setAdmin(admin_) */\n  tag_22\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2052:2058  admin_ */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2042:2051  _setAdmin */\n  shl(0x20, tag_23)\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2042:2059  _setAdmin(admin_) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1834:2066  constructor(address _logic, address admin_, bytes memory _data) public payable UpgradeableProxy(_logic, _data) {... */\n  pop\n  pop\n  pop\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":175:299  constructor(address logic, address admin, bytes memory data) TransparentUpgradeableProxy(logic, admin, data) public {... */\n  pop\n  pop\n  pop\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":106:302  contract BEP20UpgradeableProxy is TransparentUpgradeableProxy {... */\n  jump(tag_25)\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2492:2852  function _setImplementation(address newImplementation) private {... */\ntag_16:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2610  Address.isContract(newImplementation) */\n  tag_27\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2592:2609  newImplementation */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2591  Address.isContract */\n  or(tag_0_104, shl(0x20, tag_28))\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2610  Address.isContract(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2565:2669  require(Address.isContract(newImplementation), \"UpgradeableProxy: new implementation is not a contract\") */\n  tag_29\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x36\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877\n  0x36\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_29:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2680:2692  bytes32 slot */\n  0x00\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1727:1793  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2695:2715  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2680:2715  bytes32 slot = _IMPLEMENTATION_SLOT */\n  swap1\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2818:2835  newImplementation */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2812:2816  slot */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2805:2836  sstore(slot, newImplementation) */\n  sstore\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2791:2846  {... */\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6284:6482  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_19:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6367:6379  bytes memory */\n  0x60\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_31\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6419:6425  target */\n  dup4\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6427:6431  data */\n  dup4\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n  0x27\n  swap2\n  codecopy\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6418  functionDelegateCall */\n  shl(0x20, tag_32)\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6391:6475  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap1\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6284:6482  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5594:5803  function _setAdmin(address newAdmin) private {... */\ntag_23:\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5649:5661  bytes32 slot */\n  0x00\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2443:2509  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5664:5675  _ADMIN_SLOT */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5649:5675  bytes32 slot = _ADMIN_SLOT */\n  swap1\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5778:5786  newAdmin */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5772:5776  slot */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5765:5787  sstore(slot, newAdmin) */\n  sstore\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5751:5797  {... */\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\ntag_28:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":786:790  bool */\n  0x00\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":989:1001  uint256 size */\n  dup1\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1098:1105  account */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n  extcodesize\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1078:1106  size := extcodesize(account) */\n  swap1\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1131:1132  0 */\n  0x00\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1128  size */\n  dup2\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1132  size > 0 */\n  gt\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1117:1132  return size > 0 */\n  swap2\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6668:7085  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\ntag_32:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6779:6791  bytes memory */\n  0x60\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6829  isContract(target) */\n  tag_36\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6822:6828  target */\n  dup5\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6821  isContract */\n  shl(0x20, tag_28)\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6829  isContract(target) */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6803:6872  require(isContract(target), \"Address: delegate call to non-contract\") */\n  tag_37\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x26\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520\n  0x26\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_37:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6943:6955  bool success */\n  0x00\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6957:6980  bytes memory returndata */\n  0x60\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:6990  target */\n  dup6\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7003  target.delegatecall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7004:7008  data */\n  dup6\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7009  target.delegatecall(data) */\n  mload(0x40)\n  dup1\n  dup3\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":36:189   */\ntag_38:\n    /* \"--CODEGEN--\":66:68   */\n  0x20\n    /* \"--CODEGEN--\":61:64   */\n  dup4\n    /* \"--CODEGEN--\":58:69   */\n  lt\n    /* \"--CODEGEN--\":36:189   */\n  tag_40\n  jumpi\n    /* \"--CODEGEN--\":182:185   */\n  dup1\n    /* \"--CODEGEN--\":176:186   */\n  mload\n    /* \"--CODEGEN--\":171:174   */\n  dup3\n    /* \"--CODEGEN--\":164:187   */\n  mstore\n    /* \"--CODEGEN--\":98:100   */\n  0x20\n    /* \"--CODEGEN--\":93:96   */\n  dup3\n    /* \"--CODEGEN--\":89:101   */\n  add\n    /* \"--CODEGEN--\":82:101   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:125   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup2\n    /* \"--CODEGEN--\":114:126   */\n  add\n    /* \"--CODEGEN--\":107:126   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":148:150   */\n  0x20\n    /* \"--CODEGEN--\":143:146   */\n  dup4\n    /* \"--CODEGEN--\":139:151   */\n  sub\n    /* \"--CODEGEN--\":132:151   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":36:189   */\n  jump(tag_38)\ntag_40:\n    /* \"--CODEGEN--\":274:275   */\n  0x01\n    /* \"--CODEGEN--\":267:270   */\n  dup4\n    /* \"--CODEGEN--\":263:265   */\n  0x20\n    /* \"--CODEGEN--\":259:271   */\n  sub\n    /* \"--CODEGEN--\":254:257   */\n  0x0100\n    /* \"--CODEGEN--\":250:272   */\n  exp\n    /* \"--CODEGEN--\":246:276   */\n  sub\n    /* \"--CODEGEN--\":315:319   */\n  dup1\n    /* \"--CODEGEN--\":311:320   */\n  not\n    /* \"--CODEGEN--\":305:308   */\n  dup3\n    /* \"--CODEGEN--\":299:309   */\n  mload\n    /* \"--CODEGEN--\":295:321   */\n  and\n    /* \"--CODEGEN--\":356:360   */\n  dup2\n    /* \"--CODEGEN--\":350:353   */\n  dup5\n    /* \"--CODEGEN--\":344:354   */\n  mload\n    /* \"--CODEGEN--\":340:361   */\n  and\n    /* \"--CODEGEN--\":389:396   */\n  dup1\n    /* \"--CODEGEN--\":380:387   */\n  dup3\n    /* \"--CODEGEN--\":377:397   */\n  or\n    /* \"--CODEGEN--\":372:375   */\n  dup6\n    /* \"--CODEGEN--\":365:398   */\n  mstore\n    /* \"--CODEGEN--\":3:402   */\n  pop\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7009  target.delegatecall(data) */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  add\n  swap2\n  pop\n  pop\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n    /* \"--CODEGEN--\":12:13   */\n  dup1\n    /* \"--CODEGEN--\":19:20   */\n  0x00\n    /* \"--CODEGEN--\":14:41   */\n  dup2\n  eq\n  tag_43\n  jumpi\n    /* \"--CODEGEN--\":67:71   */\n  0x40\n    /* \"--CODEGEN--\":61:72   */\n  mload\n    /* \"--CODEGEN--\":56:72   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":134:138   */\n  0x1f\n    /* \"--CODEGEN--\":130:139   */\n  not\n    /* \"--CODEGEN--\":123:127   */\n  0x3f\n    /* \"--CODEGEN--\":105:121   */\n  returndatasize\n    /* \"--CODEGEN--\":101:128   */\n  add\n    /* \"--CODEGEN--\":97:140   */\n  and\n    /* \"--CODEGEN--\":94:95   */\n  dup3\n    /* \"--CODEGEN--\":90:141   */\n  add\n    /* \"--CODEGEN--\":84:88   */\n  0x40\n    /* \"--CODEGEN--\":77:142   */\n  mstore\n    /* \"--CODEGEN--\":157:173   */\n  returndatasize\n    /* \"--CODEGEN--\":154:155   */\n  dup3\n    /* \"--CODEGEN--\":147:174   */\n  mstore\n    /* \"--CODEGEN--\":211:227   */\n  returndatasize\n    /* \"--CODEGEN--\":208:209   */\n  0x00\n    /* \"--CODEGEN--\":201:205   */\n  0x20\n    /* \"--CODEGEN--\":198:199   */\n  dup5\n    /* \"--CODEGEN--\":194:206   */\n  add\n    /* \"--CODEGEN--\":179:228   */\n  returndatacopy\n    /* \"--CODEGEN--\":5:233   */\n  jump(tag_42)\n    /* \"--CODEGEN--\":14:41   */\ntag_43:\n    /* \"--CODEGEN--\":32:36   */\n  0x60\n    /* \"--CODEGEN--\":27:36   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":5:233   */\ntag_42:\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6942:7009  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7078  _verifyCallResult(success, returndata, errorMessage) */\n  tag_44\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7044:7051  success */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7053:7063  returndata */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7065:7077  errorMessage */\n  dup7\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7043  _verifyCallResult */\n  shl(0x20, tag_45)\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7078  _verifyCallResult(success, returndata, errorMessage) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7019:7078  return _verifyCallResult(success, returndata, errorMessage) */\n  swap3\n  pop\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6668:7085  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\ntag_45:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7206:7218  bytes memory */\n  0x60\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7234:7241  success */\n  dup4\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n  iszero\n  tag_47\n  jumpi\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7264:7274  returndata */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7257:7274  return returndata */\n  swap1\n  pop\n  jump(tag_46)\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7230:7810  if (success) {... */\ntag_47:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7395:7396  0 */\n  0x00\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7385  returndata */\n  dup4\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7392  returndata.length */\n  mload\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n  gt\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7633:7643  returndata */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n  mload\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7693:7708  returndata_size */\n  dup1\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7680:7690  returndata */\n  dup5\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7676:7678  32 */\n  0x20\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n  add\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7582:7727  {... */\ntag_49:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7772:7784  errorMessage */\n  dup2\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_51:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_53\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_51)\ntag_53:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_54\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_54:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\ntag_46:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":106:302  contract BEP20UpgradeableProxy is TransparentUpgradeableProxy {... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\ndata_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877 5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374\ndata_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520 416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374\n\nsub_0: assembly {\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":106:302  contract BEP20UpgradeableProxy is TransparentUpgradeableProxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8f283970\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2843:2854  _fallback() */\n      tag_10\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2843:2852  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2843:2854  _fallback() */\n      jump\t// in\n    tag_10:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":106:302  contract BEP20UpgradeableProxy is TransparentUpgradeableProxy {... */\n      stop\n    tag_2:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2619:2630  _fallback() */\n      tag_14\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2619:2628  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2619:2630  _fallback() */\n      jump\t// in\n    tag_14:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":106:302  contract BEP20UpgradeableProxy is TransparentUpgradeableProxy {... */\n      stop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4521:4638  function upgradeTo(address newImplementation) external virtual ifAdmin {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4521:4638  function upgradeTo(address newImplementation) external virtual ifAdmin {... */\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_17:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4521:4638  function upgradeTo(address newImplementation) external virtual ifAdmin {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_20:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:25   */\n      dup2\n        /* \"--CODEGEN--\":11:39   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_21:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_22:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_23:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_24\n      jump\t// in\n    tag_19:\n      stop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3777:3906  function implementation() external ifAdmin returns (address implementation_) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3777:3906  function implementation() external ifAdmin returns (address implementation_) {... */\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4111:4361  function changeAdmin(address newAdmin) external virtual ifAdmin {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_28:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4111:4361  function changeAdmin(address newAdmin) external virtual ifAdmin {... */\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_30:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4111:4361  function changeAdmin(address newAdmin) external virtual ifAdmin {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3224:3317  function admin() external ifAdmin returns (address admin_) {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3224:3317  function admin() external ifAdmin returns (address admin_) {... */\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2265:2375  function _fallback() internal virtual {... */\n    tag_11:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2313:2330  _beforeFallback() */\n      tag_36\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2313:2328  _beforeFallback */\n      tag_37\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2313:2330  _beforeFallback() */\n      jump\t// in\n    tag_36:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2340:2368  _delegate(_implementation()) */\n      tag_38\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2350:2367  _implementation() */\n      tag_39\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2350:2365  _implementation */\n      tag_40\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2350:2367  _implementation() */\n      jump\t// in\n    tag_39:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2340:2349  _delegate */\n      tag_41\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2340:2368  _delegate(_implementation()) */\n      jump\t// in\n    tag_38:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2265:2375  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4521:4638  function upgradeTo(address newImplementation) external virtual ifAdmin {... */\n    tag_18:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      tag_43\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2704  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      jump\t// in\n    tag_43:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2694  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      iszero\n      tag_45\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4602:4631  _upgradeTo(newImplementation) */\n      tag_47\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4613:4630  newImplementation */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4602:4612  _upgradeTo */\n      tag_48\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4602:4631  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_47:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      jump(tag_49)\n    tag_45:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      tag_50\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2763  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      jump\t// in\n    tag_50:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n    tag_49:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4521:4638  function upgradeTo(address newImplementation) external virtual ifAdmin {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n    tag_24:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      tag_52\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2704  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      jump\t// in\n    tag_52:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2694  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      iszero\n      tag_53\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5131:5160  _upgradeTo(newImplementation) */\n      tag_55\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5142:5159  newImplementation */\n      dup4\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5131:5141  _upgradeTo */\n      tag_48\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5131:5160  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_55:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5170:5223  Address.functionDelegateCall(newImplementation, data) */\n      tag_56\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5199:5216  newImplementation */\n      dup4\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5218:5222  data */\n      dup4\n      dup4\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5170:5223  Address.functionDelegateCall(newImplementation, data) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5170:5223  Address.functionDelegateCall(newImplementation, data) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5170:5198  Address.functionDelegateCall */\n      tag_57\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5170:5223  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_56:\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      jump(tag_58)\n    tag_53:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      tag_59\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2763  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      jump\t// in\n    tag_59:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n    tag_58:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3777:3906  function implementation() external ifAdmin returns (address implementation_) {... */\n    tag_27:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3829:3852  address implementation_ */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      tag_61\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2704  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      jump\t// in\n    tag_61:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2694  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      iszero\n      tag_62\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3882:3899  _implementation() */\n      tag_64\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3882:3897  _implementation */\n      tag_40\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3882:3899  _implementation() */\n      jump\t// in\n    tag_64:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3864:3899  implementation_ = _implementation() */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      jump(tag_65)\n    tag_62:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      tag_66\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2763  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      jump\t// in\n    tag_66:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n    tag_65:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3777:3906  function implementation() external ifAdmin returns (address implementation_) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4111:4361  function changeAdmin(address newAdmin) external virtual ifAdmin {... */\n    tag_31:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      tag_68\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2704  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      jump\t// in\n    tag_68:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2694  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      iszero\n      tag_69\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4213:4214  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4193:4215  newAdmin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4193:4201  newAdmin */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4193:4215  newAdmin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4185:4278  require(newAdmin != address(0), \"TransparentUpgradeableProxy: new admin is the zero address\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6b8c7de7d8992cce1e1093ee65cc3fbbb636cdcec8111cd0ef596adac25e6858\n      0x3a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4293:4325  AdminChanged(_admin(), newAdmin) */\n      0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4306:4314  _admin() */\n      tag_72\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4306:4312  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4306:4314  _admin() */\n      jump\t// in\n    tag_72:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4316:4324  newAdmin */\n      dup3\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4293:4325  AdminChanged(_admin(), newAdmin) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4335:4354  _setAdmin(newAdmin) */\n      tag_73\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4345:4353  newAdmin */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4335:4344  _setAdmin */\n      tag_74\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4335:4354  _setAdmin(newAdmin) */\n      jump\t// in\n    tag_73:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      jump(tag_75)\n    tag_69:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      tag_76\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2763  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      jump\t// in\n    tag_76:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n    tag_75:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4111:4361  function changeAdmin(address newAdmin) external virtual ifAdmin {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3224:3317  function admin() external ifAdmin returns (address admin_) {... */\n    tag_34:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3267:3281  address admin_ */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      tag_78\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2704  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      jump\t// in\n    tag_78:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2694  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3302:3310  _admin() */\n      tag_81\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3302:3308  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3302:3310  _admin() */\n      jump\t// in\n    tag_81:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3293:3310  admin_ = _admin() */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      jump(tag_82)\n    tag_79:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      tag_83\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2763  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      jump\t// in\n    tag_83:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n    tag_82:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3224:3317  function admin() external ifAdmin returns (address admin_) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5924:6128  function _beforeFallback() internal virtual override {... */\n    tag_37:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":6009:6017  _admin() */\n      tag_85\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":6009:6015  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":6009:6017  _admin() */\n      jump\t// in\n    tag_85:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5995:6017  msg.sender != _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5995:6005  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5995:6017  msg.sender != _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5987:6088  require(msg.sender != _admin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x42\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d\n      0x42\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":6098:6121  super._beforeFallback() */\n      tag_87\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":6098:6119  super._beforeFallback */\n      tag_88\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":6098:6121  super._beforeFallback() */\n      jump\t// in\n    tag_87:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5924:6128  function _beforeFallback() internal virtual override {... */\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1872:2122  function _implementation() internal view virtual override returns (address impl) {... */\n    tag_40:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1939:1951  address impl */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1963:1975  bytes32 slot */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1727:1793  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1978:1998  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1963:1998  bytes32 slot = _IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2101:2105  slot */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2095:2106  sload(slot) */\n      sload\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2087:2106  impl := sload(slot) */\n      swap2\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2073:2116  {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":891:1786  function _delegate(address implementation) internal virtual {... */\n    tag_41:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1285:1299  calldatasize() */\n      calldatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1282:1283  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1279:1280  0 */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1266:1300  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1499:1500  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1496:1497  0 */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1480:1494  calldatasize() */\n      calldatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1477:1478  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1461:1475  implementation */\n      dup5\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1454:1459  gas() */\n      gas\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1441:1501  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1575:1591  returndatasize() */\n      returndatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1572:1573  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1569:1570  0 */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1554:1592  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1613:1619  result */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1685:1686  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1680:1718  case 0 { revert(0, returndatasize()) } */\n      dup2\n      eq\n      tag_92\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1751:1767  returndatasize() */\n      returndatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1748:1749  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1741:1768  return(0, returndatasize()) */\n      return\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1680:1718  case 0 { revert(0, returndatasize()) } */\n    tag_92:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1699:1715  returndatasize() */\n      returndatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1696:1697  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1689:1716  revert(0, returndatasize()) */\n      revert\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5291:5512  function _admin() internal view virtual returns (address adm) {... */\n    tag_44:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5340:5351  address adm */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5363:5375  bytes32 slot */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2443:2509  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5378:5389  _ADMIN_SLOT */\n      0x00\n      shl\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5363:5389  bytes32 slot = _ADMIN_SLOT */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5491:5495  slot */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5485:5496  sload(slot) */\n      sload\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5478:5496  adm := sload(slot) */\n      swap2\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5464:5506  {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2241:2401  function _upgradeTo(address newImplementation) internal virtual {... */\n    tag_48:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2315:2352  _setImplementation(newImplementation) */\n      tag_95\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2334:2351  newImplementation */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2315:2333  _setImplementation */\n      tag_96\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2315:2352  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_95:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2376:2393  newImplementation */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2367:2394  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2241:2401  function _upgradeTo(address newImplementation) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6284:6482  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_57:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6367:6379  bytes memory */\n      0x60\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_98\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6419:6425  target */\n      dup4\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6427:6431  data */\n      dup4\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6418  functionDelegateCall */\n      tag_99\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_98:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6391:6475  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6284:6482  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5594:5803  function _setAdmin(address newAdmin) private {... */\n    tag_74:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5649:5661  bytes32 slot */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2443:2509  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5664:5675  _ADMIN_SLOT */\n      0x00\n      shl\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5649:5675  bytes32 slot = _ADMIN_SLOT */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5778:5786  newAdmin */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5772:5776  slot */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5765:5787  sstore(slot, newAdmin) */\n      sstore\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5751:5797  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":3142:3193  function _beforeFallback() internal virtual {... */\n    tag_88:\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2492:2852  function _setImplementation(address newImplementation) private {... */\n    tag_96:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2610  Address.isContract(newImplementation) */\n      tag_103\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2592:2609  newImplementation */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2591  Address.isContract */\n      tag_104\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2610  Address.isContract(newImplementation) */\n      jump\t// in\n    tag_103:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2565:2669  require(Address.isContract(newImplementation), \"UpgradeableProxy: new implementation is not a contract\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2680:2692  bytes32 slot */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1727:1793  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2695:2715  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2680:2715  bytes32 slot = _IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2818:2835  newImplementation */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2812:2816  slot */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2805:2836  sstore(slot, newImplementation) */\n      sstore\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2791:2846  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6668:7085  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_99:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6779:6791  bytes memory */\n      0x60\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6829  isContract(target) */\n      tag_107\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6822:6828  target */\n      dup5\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6821  isContract */\n      tag_104\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6829  isContract(target) */\n      jump\t// in\n    tag_107:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6803:6872  require(isContract(target), \"Address: delegate call to non-contract\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6943:6955  bool success */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6957:6980  bytes memory returndata */\n      0x60\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:6990  target */\n      dup6\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7003  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7004:7008  data */\n      dup6\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7009  target.delegatecall(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_109:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_111\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_109)\n    tag_111:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7009  target.delegatecall(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_114\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_113)\n        /* \"--CODEGEN--\":14:41   */\n    tag_114:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_113:\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6942:7009  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7078  _verifyCallResult(success, returndata, errorMessage) */\n      tag_115\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7044:7051  success */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7053:7063  returndata */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7065:7077  errorMessage */\n      dup7\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7043  _verifyCallResult */\n      tag_116\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7078  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_115:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7019:7078  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6668:7085  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_104:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":786:790  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":989:1001  uint256 size */\n      dup1\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1098:1105  account */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1078:1106  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1131:1132  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1128  size */\n      dup2\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      gt\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1117:1132  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_116:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7257:7274  return returndata */\n      swap1\n      pop\n      jump(tag_118)\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_119:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7395:7396  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7385  returndata */\n      dup4\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      mload\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      gt\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_121:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_123:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_125\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_123)\n    tag_125:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_126:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_118:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_6b8c7de7d8992cce1e1093ee65cc3fbbb636cdcec8111cd0ef596adac25e6858 5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f2061646472657373\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n    data_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877 5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374\n    data_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520 416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374\n    data_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d 5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574\n\n    auxdata: 0xa2646970667358221220f0234b455948968d723a6882a5b759d6bac206980a9baa6e471fe7da5114fdeb64736f6c63430006030033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1122 CODESIZE SUB DUP1 PUSH3 0x1122 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0xA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xD7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xBA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x105 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP3 DUP3 DUP3 DUP3 DUP2 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x656970313936372E70726F78792E696D706C656D656E746174696F6E00000000 DUP2 MSTORE POP PUSH1 0x1C ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SHR SUB PUSH1 0x0 SHL PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL EQ PUSH3 0x17C JUMPI INVALID JUMPDEST PUSH3 0x18D DUP3 PUSH3 0x23B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH3 0x1B1 JUMPI PUSH3 0x1AF DUP3 DUP3 PUSH3 0x2D7 PUSH1 0x20 SHL PUSH3 0x6FB OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x656970313936372E70726F78792E61646D696E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x13 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SHR SUB PUSH1 0x0 SHL PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL EQ PUSH3 0x21E JUMPI INVALID JUMPDEST PUSH3 0x22F DUP3 PUSH3 0x30D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP PUSH3 0x566 JUMP JUMPDEST PUSH3 0x251 DUP2 PUSH3 0x33C PUSH1 0x20 SHL PUSH3 0x915 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x10C6 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x305 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x109F PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x34F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x362 DUP5 PUSH3 0x33C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x10FC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0x40A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH3 0x3E5 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x46C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x471 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH3 0x489 DUP3 DUP3 DUP7 PUSH3 0x494 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x4A6 JUMPI DUP3 SWAP1 POP PUSH3 0x55F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH3 0x4BA JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x523 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x506 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x551 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB29 DUP1 PUSH3 0x576 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1F9 JUMPI PUSH2 0x5D JUMP JUMPDEST CALLDATASIZE PUSH2 0x5D JUMPI PUSH2 0x5B PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x65 PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x2BF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x268 PUSH2 0x263 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x272 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2AE DUP2 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x250 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x357 JUMPI PUSH2 0x303 DUP4 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x351 DUP4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x6FB JUMP JUMPDEST POP PUSH2 0x360 JUMP JUMPDEST PUSH2 0x35F PUSH2 0x250 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3B1 JUMPI PUSH2 0x3AA PUSH2 0x624 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0x250 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3C5 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9F5 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x4A7 PUSH2 0x67B JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x525 DUP2 PUSH2 0x728 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x250 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x540 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x582 JUMPI PUSH2 0x57B PUSH2 0x67B JUMP JUMPDEST SWAP1 POP PUSH2 0x58B JUMP JUMPDEST PUSH2 0x58A PUSH2 0x250 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x596 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x42 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAB2 PUSH1 0x42 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x622 PUSH2 0x757 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x676 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6B5 DUP2 PUSH2 0x759 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x720 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA2F PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x7E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x762 DUP2 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA56 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7F1 DUP5 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA8C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x895 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x872 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x90A DUP3 DUP3 DUP7 PUSH2 0x928 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x938 JUMPI DUP3 SWAP1 POP PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x94B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9B2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x997 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9DF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID SLOAD PUSH19 0x616E73706172656E745570677261646561626C PUSH6 0x50726F78793A KECCAK256 PUSH15 0x65772061646D696E20697320746865 KECCAK256 PUSH27 0x65726F2061646472657373416464726573733A206C6F772D6C6576 PUSH6 0x6C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65645570 PUSH8 0x7261646561626C65 POP PUSH19 0x6F78793A206E657720696D706C656D656E7461 PUSH21 0x696F6E206973206E6F74206120636F6E7472616374 COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH5 0x656C656761 PUSH21 0x652063616C6C20746F206E6F6E2D636F6E74726163 PUSH21 0x5472616E73706172656E745570677261646561626C PUSH6 0x50726F78793A KECCAK256 PUSH2 0x646D PUSH10 0x6E2063616E6E6F742066 PUSH2 0x6C6C PUSH3 0x61636B KECCAK256 PUSH21 0x6F2070726F787920746172676574A2646970667358 0x22 SLT KECCAK256 CREATE 0x23 0x4B GASLIMIT MSIZE 0x48 SWAP7 DUP14 PUSH19 0x3A6882A5B759D6BAC206980A9BAA6E471FE7DA MLOAD EQ REVERT 0xEB PUSH5 0x736F6C6343 STOP MOD SUB STOP CALLER COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65645570 PUSH8 0x7261646561626C65 POP PUSH19 0x6F78793A206E657720696D706C656D656E7461 PUSH21 0x696F6E206973206E6F74206120636F6E7472616374 COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH5 0x656C656761 PUSH21 0x652063616C6C20746F206E6F6E2D636F6E74726163 PUSH21 0x0 ",
							"sourceMap": "106:196:0:-:0;;;175:124;5:9:-1;2:2;;;27:1;24;17:12;2:2;175:124:0;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;175:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;175:124:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;175:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;264:5;271;278:4;1930:6:2;1938:5;1184:1:3;1139:41;;;;;;;;;;;;;;;;;;;1131:50;;:54;1123:63;;1727:66;1099:20;;:87;1092:95;;;;1197:26;1216:6;1197:18;;;:26;;:::i;:::-;1251:1;1236:5;:12;:16;1233:89;;;1268:43;1297:6;1305:5;1268:28;;;;;:43;;:::i;:::-;;1233:89;1019:309;;2029:1:2::1;1993:32;;;;;;;::::0;::::1;;;;;;;;;;;1985:41;;:45;1977:54;;2443:66;1962:11;;:69;1955:77;;;;2042:17;2052:6;2042:9;;;:17;;:::i;:::-;1834:232:::0;;;175:124:0;;;106:196;;2492:360:3;2573:37;2592:17;2573:18;;;;;:37;;:::i;:::-;2565:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2680:12;1727:66;2695:20;;2680:35;;2818:17;2812:4;2805:31;2791:55;;:::o;6284:198:4:-;6367:12;6398:77;6419:6;6427:4;6398:77;;;;;;;;;;;;;;;;;:20;;;:77;;:::i;:::-;6391:84;;6284:198;;;;:::o;5594:209:2:-;5649:12;2443:66;5664:11;;5649:26;;5778:8;5772:4;5765:22;5751:46;;:::o;726:413:4:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;6668:417::-;6779:12;6811:18;6822:6;6811:10;;;:18;;:::i;:::-;6803:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6943:12;6957:23;6984:6;:19;;7004:4;6984:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6984:25:4;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;6942:67:4;;;;7026:52;7044:7;7053:10;7065:12;7026:17;;;:52;;:::i;:::-;7019:59;;;;6668:417;;;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7765:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o;106:196:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004e5760003560e01c80633659cfe6146100675780634f1ef286146100b85780635c60da1b146101515780638f283970146101a8578063f851a440146101f95761005d565b3661005d5761005b610250565b005b610065610250565b005b34801561007357600080fd5b506100b66004803603602081101561008a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061026a565b005b61014f600480360360408110156100ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561010b57600080fd5b82018360208201111561011d57600080fd5b8035906020019184600183028401116401000000008311171561013f57600080fd5b90919293919293905050506102bf565b005b34801561015d57600080fd5b50610166610365565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b457600080fd5b506101f7600480360360208110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103bd565b005b34801561020557600080fd5b5061020e610536565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61025861058e565b610268610263610624565b610655565b565b61027261067b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102b3576102ae816106ac565b6102bc565b6102bb610250565b5b50565b6102c761067b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561035757610303836106ac565b6103518383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506106fb565b50610360565b61035f610250565b5b505050565b600061036f61067b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103b1576103aa610624565b90506103ba565b6103b9610250565b5b90565b6103c561067b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561052a57600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561047e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806109f5603a913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104a761067b565b82604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a161052581610728565b610533565b610532610250565b5b50565b600061054061067b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105825761057b61067b565b905061058b565b61058a610250565b5b90565b61059661067b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561061a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526042815260200180610ab26042913960600191505060405180910390fd5b610622610757565b565b6000807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b9050805491505090565b3660008037600080366000845af43d6000803e8060008114610676573d6000f35b3d6000fd5b6000807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b9050805491505090565b6106b581610759565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606107208383604051806060016040528060278152602001610a2f602791396107e6565b905092915050565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b90508181555050565b565b61076281610915565b6107b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180610a566036913960400191505060405180910390fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b90508181555050565b60606107f184610915565b610846576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610a8c6026913960400191505060405180910390fd5b600060608573ffffffffffffffffffffffffffffffffffffffff16856040518082805190602001908083835b602083106108955780518252602082019150602081019050602083039250610872565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146108f5576040519150601f19603f3d011682016040523d82523d6000602084013e6108fa565b606091505b509150915061090a828286610928565b925050509392505050565b600080823b905060008111915050919050565b60608315610938578290506109ed565b60008351111561094b5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109b2578082015181840152602081019050610997565b50505050905090810190601f1680156109df5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f2061646472657373416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65645570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e74726163745472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574a2646970667358221220f0234b455948968d723a6882a5b759d6bac206980a9baa6e471fe7da5114fdeb64736f6c63430006030033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1F9 JUMPI PUSH2 0x5D JUMP JUMPDEST CALLDATASIZE PUSH2 0x5D JUMPI PUSH2 0x5B PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x65 PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x2BF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x268 PUSH2 0x263 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x272 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2AE DUP2 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x250 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x357 JUMPI PUSH2 0x303 DUP4 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x351 DUP4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x6FB JUMP JUMPDEST POP PUSH2 0x360 JUMP JUMPDEST PUSH2 0x35F PUSH2 0x250 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3B1 JUMPI PUSH2 0x3AA PUSH2 0x624 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0x250 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3C5 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9F5 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x4A7 PUSH2 0x67B JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x525 DUP2 PUSH2 0x728 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x250 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x540 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x582 JUMPI PUSH2 0x57B PUSH2 0x67B JUMP JUMPDEST SWAP1 POP PUSH2 0x58B JUMP JUMPDEST PUSH2 0x58A PUSH2 0x250 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x596 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x42 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAB2 PUSH1 0x42 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x622 PUSH2 0x757 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x676 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6B5 DUP2 PUSH2 0x759 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x720 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA2F PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x7E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x762 DUP2 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA56 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7F1 DUP5 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA8C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x895 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x872 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x90A DUP3 DUP3 DUP7 PUSH2 0x928 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x938 JUMPI DUP3 SWAP1 POP PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x94B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9B2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x997 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9DF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID SLOAD PUSH19 0x616E73706172656E745570677261646561626C PUSH6 0x50726F78793A KECCAK256 PUSH15 0x65772061646D696E20697320746865 KECCAK256 PUSH27 0x65726F2061646472657373416464726573733A206C6F772D6C6576 PUSH6 0x6C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65645570 PUSH8 0x7261646561626C65 POP PUSH19 0x6F78793A206E657720696D706C656D656E7461 PUSH21 0x696F6E206973206E6F74206120636F6E7472616374 COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH5 0x656C656761 PUSH21 0x652063616C6C20746F206E6F6E2D636F6E74726163 PUSH21 0x5472616E73706172656E745570677261646561626C PUSH6 0x50726F78793A KECCAK256 PUSH2 0x646D PUSH10 0x6E2063616E6E6F742066 PUSH2 0x6C6C PUSH3 0x61636B KECCAK256 PUSH21 0x6F2070726F787920746172676574A2646970667358 0x22 SLT KECCAK256 CREATE 0x23 0x4B GASLIMIT MSIZE 0x48 SWAP7 DUP14 PUSH19 0x3A6882A5B759D6BAC206980A9BAA6E471FE7DA MLOAD EQ REVERT 0xEB PUSH5 0x736F6C6343 STOP MOD SUB STOP CALLER ",
							"sourceMap": "106:196:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2843:11:1;:9;:11::i;:::-;106:196:0;;2619:11:1;:9;:11::i;:::-;106:196:0;4521:117:2;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4521:117:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4521:117:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;5014:216;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5014:216:2;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;5014:216:2;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;5014:216:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5014:216:2;;;;;;;;;;;;:::i;:::-;;3777:129;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3777:129:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4111:250;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4111:250:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4111:250:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;3224:93;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3224:93:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2265:110:1;2313:17;:15;:17::i;:::-;2340:28;2350:17;:15;:17::i;:::-;2340:9;:28::i;:::-;2265:110::o;4521:117:2:-;2698:8;:6;:8::i;:::-;2684:22;;:10;:22;;;2680:96;;;4602:29:::1;4613:17;4602:10;:29::i;:::-;2680:96:::0;;;2754:11;:9;:11::i;:::-;2680:96;4521:117;:::o;5014:216::-;2698:8;:6;:8::i;:::-;2684:22;;:10;:22;;;2680:96;;;5131:29:::1;5142:17;5131:10;:29::i;:::-;5170:53;5199:17;5218:4;;5170:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5170:53:2;;;;;;:28;:53::i;:::-;;2680:96:::0;;;2754:11;:9;:11::i;:::-;2680:96;5014:216;;;:::o;3777:129::-;3829:23;2698:8;:6;:8::i;:::-;2684:22;;:10;:22;;;2680:96;;;3882:17:::1;:15;:17::i;:::-;3864:35;;2680:96:::0;;;2754:11;:9;:11::i;:::-;2680:96;3777:129;:::o;4111:250::-;2698:8;:6;:8::i;:::-;2684:22;;:10;:22;;;2680:96;;;4213:1:::1;4193:22;;:8;:22;;;;4185:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4293:32;4306:8;:6;:8::i;:::-;4316;4293:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4335:19;4345:8;4335:9;:19::i;:::-;2680:96:::0;;;2754:11;:9;:11::i;:::-;2680:96;4111:250;:::o;3224:93::-;3267:14;2698:8;:6;:8::i;:::-;2684:22;;:10;:22;;;2680:96;;;3302:8:::1;:6;:8::i;:::-;3293:17;;2680:96:::0;;;2754:11;:9;:11::i;:::-;2680:96;3224:93;:::o;5924:204::-;6009:8;:6;:8::i;:::-;5995:22;;:10;:22;;;;5987:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6098:23;:21;:23::i;:::-;5924:204::o;1872:250:3:-;1939:12;1963;1727:66;1978:20;;1963:35;;2101:4;2095:11;2087:19;;2073:43;;:::o;891:895:1:-;1285:14;1282:1;1279;1266:34;1499:1;1496;1480:14;1477:1;1461:14;1454:5;1441:60;1575:16;1572:1;1569;1554:38;1613:6;1685:1;1680:38;;;;1751:16;1748:1;1741:27;1680:38;1699:16;1696:1;1689:27;5291:221:2;5340:11;5363:12;2443:66;5378:11;;5363:26;;5491:4;5485:11;5478:18;;5464:42;;:::o;2241:160:3:-;2315:37;2334:17;2315:18;:37::i;:::-;2376:17;2367:27;;;;;;;;;;;;2241:160;:::o;6284:198:4:-;6367:12;6398:77;6419:6;6427:4;6398:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6391:84;;6284:198;;;;:::o;5594:209:2:-;5649:12;2443:66;5664:11;;5649:26;;5778:8;5772:4;5765:22;5751:46;;:::o;3142:51:1:-;:::o;2492:360:3:-;2573:37;2592:17;2573:18;:37::i;:::-;2565:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2680:12;1727:66;2695:20;;2680:35;;2818:17;2812:4;2805:31;2791:55;;:::o;6668:417:4:-;6779:12;6811:18;6822:6;6811:10;:18::i;:::-;6803:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6943:12;6957:23;6984:6;:19;;7004:4;6984:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6984:25:4;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;6942:67:4;;;;7026:52;7044:7;7053:10;7065:12;7026:17;:52::i;:::-;7019:59;;;;6668:417;;;;;:::o;726:413::-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7765:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "571400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"admin()": "infinite",
								"changeAdmin(address)": "infinite",
								"implementation()": "infinite",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 106,
									"end": 302,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 106,
									"end": 302,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 106,
									"end": 302,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 175,
									"end": 299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL",
									"source": -1
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 175,
									"end": 299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 299,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 264,
									"end": 269,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 271,
									"end": 276,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 278,
									"end": 282,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1930,
									"end": 1936,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1938,
									"end": 1943,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1184,
									"end": 1185,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "PUSH",
									"source": 3,
									"value": "656970313936372E70726F78792E696D706C656D656E746174696F6E00000000"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "PUSH",
									"source": 3,
									"value": "1C"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1131,
									"end": 1181,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1131,
									"end": 1181,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1131,
									"end": 1185,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1123,
									"end": 1186,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1123,
									"end": 1186,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1727,
									"end": 1793,
									"name": "PUSH",
									"source": 3,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1186,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1216,
									"end": 1222,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1251,
									"end": 1252,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1236,
									"end": 1241,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1248,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1252,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1297,
									"end": 1303,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1310,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551673"
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2029,
									"end": 2030,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "PUSH",
									"source": 2,
									"value": "656970313936372E70726F78792E61646D696E00000000000000000000000000"
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "PUSH",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2026,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1985,
									"end": 2026,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2030,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1977,
									"end": 2031,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1977,
									"end": 2031,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2443,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
								},
								{
									"begin": 1962,
									"end": 1973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1973,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 2031,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1955,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1955,
									"end": 2032,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1955,
									"end": 2032,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 1955,
									"end": 2032,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1955,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 2052,
									"end": 2058,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2042,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2042,
									"end": 2051,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2059,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2042,
									"end": 2059,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2059,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2042,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 2042,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 175,
									"end": 299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 106,
									"end": 302,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 106,
									"end": 302,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2852,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2492,
									"end": 2852,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 2592,
									"end": 2609,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551720"
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH data",
									"source": 3,
									"value": "A962AFC8125C78A56CAF50B104C38B8318717478C281B4E59E7FB3E32AF3A877"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2680,
									"end": 2692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1727,
									"end": 1793,
									"name": "PUSH",
									"source": 3,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 2695,
									"end": 2715,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2695,
									"end": 2715,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2680,
									"end": 2715,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2680,
									"end": 2715,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2818,
									"end": 2835,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2812,
									"end": 2816,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2805,
									"end": 2836,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2791,
									"end": 2846,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2791,
									"end": 2846,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2791,
									"end": 2846,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6367,
									"end": 6379,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 6419,
									"end": 6425,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6427,
									"end": 6431,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH data",
									"source": 4,
									"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6418,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 6398,
									"end": 6418,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6398,
									"end": 6418,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6391,
									"end": 6475,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6391,
									"end": 6475,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 5594,
									"end": 5803,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 5594,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5649,
									"end": 5661,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2443,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
								},
								{
									"begin": 5664,
									"end": 5675,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5664,
									"end": 5675,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5649,
									"end": 5675,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5649,
									"end": 5675,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5778,
									"end": 5786,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5772,
									"end": 5776,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5765,
									"end": 5787,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5797,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5797,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5797,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 786,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 989,
									"end": 1001,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1098,
									"end": 1105,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1086,
									"end": 1106,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1106,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1106,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1124,
									"end": 1128,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6779,
									"end": 6791,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 6822,
									"end": 6828,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6811,
									"end": 6821,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 6811,
									"end": 6821,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6811,
									"end": 6821,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH data",
									"source": 4,
									"value": "B94DED0918034CF8F896E19FA3CFDEF1188CD569C577264A3622E49152F88520"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6943,
									"end": 6955,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6957,
									"end": 6980,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6984,
									"end": 6990,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7003,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6984,
									"end": 7003,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7004,
									"end": 7008,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 36,
									"end": 189,
									"name": "tag",
									"source": -1,
									"value": "38"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 66,
									"end": 68,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 61,
									"end": 64,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 58,
									"end": 69,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 36,
									"end": 189,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 185,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 176,
									"end": 186,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 171,
									"end": 174,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 164,
									"end": 187,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 98,
									"end": 100,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 93,
									"end": 96,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 82,
									"end": 101,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 82,
									"end": 101,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 125,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 114,
									"end": 126,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 107,
									"end": 126,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 107,
									"end": 126,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 148,
									"end": 150,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 143,
									"end": 146,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 132,
									"end": 151,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 132,
									"end": 151,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 36,
									"end": 189,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "38"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 36,
									"end": 189,
									"name": "tag",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 274,
									"end": 275,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 267,
									"end": 270,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 263,
									"end": 265,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 259,
									"end": 271,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 254,
									"end": 257,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": 250,
									"end": 272,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": 246,
									"end": 276,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 315,
									"end": 319,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 311,
									"end": 320,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 305,
									"end": 308,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 299,
									"end": 309,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 295,
									"end": 321,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 356,
									"end": 360,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 350,
									"end": 353,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 344,
									"end": 354,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 340,
									"end": 361,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 389,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 380,
									"end": 387,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 377,
									"end": 397,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 372,
									"end": 375,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 365,
									"end": 398,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3,
									"end": 402,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3,
									"end": 402,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3,
									"end": 402,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "GAS",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DELEGATECALL",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 12,
									"end": 13,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 19,
									"end": 20,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 14,
									"end": 41,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 14,
									"end": 41,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 14,
									"end": 41,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "43"
								},
								{
									"begin": 14,
									"end": 41,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 67,
									"end": 71,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 72,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 56,
									"end": 72,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 56,
									"end": 72,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 134,
									"end": 138,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": 130,
									"end": 139,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "3F"
								},
								{
									"begin": 105,
									"end": 121,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 101,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 97,
									"end": 140,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 94,
									"end": 95,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 141,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 88,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 77,
									"end": 142,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 157,
									"end": 173,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 154,
									"end": 155,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 147,
									"end": 174,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 211,
									"end": 227,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 208,
									"end": 209,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 205,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 198,
									"end": 199,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 194,
									"end": 206,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 179,
									"end": 228,
									"name": "RETURNDATACOPY",
									"source": -1
								},
								{
									"begin": 5,
									"end": 233,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "42"
								},
								{
									"begin": 5,
									"end": 233,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 41,
									"name": "tag",
									"source": -1,
									"value": "43"
								},
								{
									"begin": 14,
									"end": 41,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 32,
									"end": 36,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 27,
									"end": 36,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 36,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5,
									"end": 233,
									"name": "tag",
									"source": -1,
									"value": "42"
								},
								{
									"begin": 5,
									"end": 233,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 5,
									"end": 233,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6942,
									"end": 7009,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6942,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6942,
									"end": 7009,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6942,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 7044,
									"end": 7051,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7053,
									"end": 7063,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7065,
									"end": 7077,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 7026,
									"end": 7043,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 7026,
									"end": 7043,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7026,
									"end": 7043,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7019,
									"end": 7078,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7019,
									"end": 7078,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7019,
									"end": 7078,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7019,
									"end": 7078,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7206,
									"end": 7218,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 7234,
									"end": 7241,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7264,
									"end": 7274,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7395,
									"end": 7396,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7375,
									"end": 7385,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7375,
									"end": 7392,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7375,
									"end": 7396,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7371,
									"end": 7800,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7371,
									"end": 7800,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 7371,
									"end": 7800,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7633,
									"end": 7643,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7627,
									"end": 7644,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7693,
									"end": 7708,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7680,
									"end": 7690,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7676,
									"end": 7678,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7672,
									"end": 7691,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7665,
									"end": 7709,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7582,
									"end": 7727,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 7582,
									"end": 7727,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7772,
									"end": 7784,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "51"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "53"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "51"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "53"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 106,
									"end": 302,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 106,
									"end": 302,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 106,
									"end": 302,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 106,
									"end": 302,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 106,
									"end": 302,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 106,
									"end": 302,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 106,
									"end": 302,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 106,
									"end": 302,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 106,
									"end": 302,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f0234b455948968d723a6882a5b759d6bac206980a9baa6e471fe7da5114fdeb64736f6c63430006030033",
									".code": [
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "3659CFE6"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "4F1EF286"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "5C60DA1B"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "8F283970"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "F851A440"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 106,
											"end": 302,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 106,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 106,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 106,
											"end": 302,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2265,
											"end": 2375,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2265,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2313,
											"end": 2330,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2313,
											"end": 2330,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2313,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2350,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2340,
											"end": 2368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2340,
											"end": 2368,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2340,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2375,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4602,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4613,
											"end": 4630,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4602,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4602,
											"end": 4631,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4602,
											"end": 4631,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4602,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5131,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5142,
											"end": 5159,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5131,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5131,
											"end": 5160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5160,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5131,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5199,
											"end": 5216,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5222,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5222,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3882,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4213,
											"end": 4214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4215,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4193,
											"end": 4215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4215,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4193,
											"end": 4215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4215,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4215,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "3A"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH data",
											"source": 2,
											"value": "6B8C7DE7D8992CCE1E1093EE65CC3FBBB636CDCEC8111CD0EF596ADAC25E6858"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "3A"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F"
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4306,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4316,
											"end": 4324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4345,
											"end": 4353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3302,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3302,
											"end": 3310,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3302,
											"end": 3310,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3302,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3293,
											"end": 3310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3293,
											"end": 3310,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5924,
											"end": 6128,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5924,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6009,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6009,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6009,
											"end": 6017,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6009,
											"end": 6017,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6009,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6017,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5995,
											"end": 6017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6005,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6017,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5995,
											"end": 6017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6017,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6017,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH data",
											"source": 2,
											"value": "F5D2EA39D7E6C7D19DC32CCC2BD7CA26B7AA4A603EF4AA6F2B205C93C3FFE43D"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6098,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6098,
											"end": 6121,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6098,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6098,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5924,
											"end": 6128,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1872,
											"end": 2122,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 1951,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1793,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1978,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1998,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2106,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2116,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 891,
											"end": 1786,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 891,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1299,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1300,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1494,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1501,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1591,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1592,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1767,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1768,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1715,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1716,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5512,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5291,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5340,
											"end": 5351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5363,
											"end": 5389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5363,
											"end": 5389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5491,
											"end": 5495,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5496,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5478,
											"end": 5496,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5478,
											"end": 5496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5464,
											"end": 5506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5464,
											"end": 5506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5464,
											"end": 5506,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2241,
											"end": 2401,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2241,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2315,
											"end": 2352,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2352,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2315,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2376,
											"end": 2393,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "PUSH",
											"source": 3,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2401,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6379,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6419,
											"end": 6425,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6427,
											"end": 6431,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH data",
											"source": 4,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 6475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 6475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5594,
											"end": 5803,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5594,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 5664,
											"end": 5675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5664,
											"end": 5675,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5778,
											"end": 5786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5772,
											"end": 5776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5765,
											"end": 5787,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5797,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3142,
											"end": 3193,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3142,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3193,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2492,
											"end": 2852,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2492,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2592,
											"end": 2609,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2573,
											"end": 2610,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2573,
											"end": 2610,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2573,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH data",
											"source": 3,
											"value": "A962AFC8125C78A56CAF50B104C38B8318717478C281B4E59E7FB3E32AF3A877"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1793,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2816,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2836,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 2846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 2846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 2846,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6791,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 6822,
											"end": 6828,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6811,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH data",
											"source": 4,
											"value": "B94DED0918034CF8F896E19FA3CFDEF1188CD569C577264A3622E49152F88520"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6943,
											"end": 6955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6957,
											"end": 6980,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6984,
											"end": 6990,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7003,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6984,
											"end": 7003,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7004,
											"end": 7008,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "109"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "111"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "109"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "111"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "114"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "113"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"source": -1,
											"value": "114"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"source": -1,
											"value": "113"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6942,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6942,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6942,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6942,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 7044,
											"end": 7051,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7053,
											"end": 7063,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7065,
											"end": 7077,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 7026,
											"end": 7078,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7026,
											"end": 7078,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 7026,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7078,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7385,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "123"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "125"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "123"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "125"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"6B8C7DE7D8992CCE1E1093EE65CC3FBBB636CDCEC8111CD0EF596ADAC25E6858": "5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f2061646472657373",
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
										"A962AFC8125C78A56CAF50B104C38B8318717478C281B4E59E7FB3E32AF3A877": "5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
										"B94DED0918034CF8F896E19FA3CFDEF1188CD569C577264A3622E49152F88520": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
										"F5D2EA39D7E6C7D19DC32CCC2BD7CA26B7AA4A603EF4AA6F2B205C93C3FFE43D": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574"
									}
								},
								"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
								"A962AFC8125C78A56CAF50B104C38B8318717478C281B4E59E7FB3E32AF3A877": "5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
								"B94DED0918034CF8F896E19FA3CFDEF1188CD569C577264A3622E49152F88520": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374"
							}
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"changeAdmin(address)": "8f283970",
							"implementation()": "5c60da1b",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{\"admin()\":{\"details\":\"Returns the current admin.     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy.     * Emits an {AdminChanged} event.     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"implementation()\":{\"details\":\"Returns the current implementation.     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy.     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract.     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":\"BEP20UpgradeableProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol\":{\"keccak256\":\"0x901008bb0c78c6b835d1f802f9a244acadd435980d4908b02b8671283cd99dcd\",\"urls\":[\"bzz-raw://8cc5d02c5341885c99aea6c0e43ea16352f3002e3f74a71d988c941e61e73324\",\"dweb:/ipfs/QmUkgLpzNt3bmnPXCxXzwGp1y5mmsown7eLMiLQxafuCjm\"]},\"openzeppelin-solidity/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x0414d54056b3d8f9102ae1142264e9361408397878148203ab7a25cbf6248f08\",\"urls\":[\"bzz-raw://ebdc01639f69030c754dc3462d5f437c4644164465066187e320f524579fbede\",\"dweb:/ipfs/QmZZhoPYagwu4MoJMAg26Y6Nfj4d9HJzUnvrMNsbo9ZorM\"]},\"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xf852214ea286716082f3ba480ff70bda2cbe2d11238091d2a440767d0ed49e61\",\"urls\":[\"bzz-raw://9381d4856e04635fcd426b0ef39a1b5aa56764170f23823daa91905a06751531\",\"dweb:/ipfs/QmZ7vo8xo9GUrcxutmQnCYy9NpvjsxHWfqQCpFzYtHNu7A\"]},\"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":{\"keccak256\":\"0x81af1059a5bd5fb25cb0351499e1d4110416f5b0000ffad6427cbf6088b193a4\",\"urls\":[\"bzz-raw://621f2fedaeeacf70ff1554748f63356555f591cdcf29c74e3d23a83720a078a2\",\"dweb:/ipfs/QmYGnscyZgJGYgXKcoYhNX2M6uoJiHS1zTsQnu5NsJxPGG\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. * The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. * The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x0414d54056b3d8f9102ae1142264e9361408397878148203ab7a25cbf6248f08\",\"urls\":[\"bzz-raw://ebdc01639f69030c754dc3462d5f437c4644164465066187e320f524579fbede\",\"dweb:/ipfs/QmZZhoPYagwu4MoJMAg26Y6Nfj4d9HJzUnvrMNsbo9ZorM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol": {
				"TransparentUpgradeableProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "admin_",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "admin_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "implementation_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that is upgradeable by an admin. * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
						"methods": {
							"admin()": {
								"details": "Returns the current admin.     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
							},
							"changeAdmin(address)": {
								"details": "Changes the admin of the proxy.     * Emits an {AdminChanged} event.     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
							},
							"constructor": {
								"details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}."
							},
							"implementation()": {
								"details": "Returns the current implementation.     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
							},
							"upgradeTo(address)": {
								"details": "Upgrade the implementation of the proxy.     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract.     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1552:6130  contract TransparentUpgradeableProxy is UpgradeableProxy {... */\n  mstore(0x40, 0x80)\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1834:2066  constructor(address _logic, address admin_, bytes memory _data) public payable UpgradeableProxy(_logic, _data) {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x60\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_1:\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1834:2066  constructor(address _logic, address admin_, bytes memory _data) public payable UpgradeableProxy(_logic, _data) {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_2:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_3:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_4:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1834:2066  constructor(address _logic, address admin_, bytes memory _data) public payable UpgradeableProxy(_logic, _data) {... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_5:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_7\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_5)\ntag_7:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1834:2066  constructor(address _logic, address admin_, bytes memory _data) public payable UpgradeableProxy(_logic, _data) {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_8:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1930:1936  _logic */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1938:1943  _data */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1184:1185  1 */\n  0x01\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1139:1180  keccak256(\"eip1967.proxy.implementation\") */\n  mload(0x40)\n  dup1\n  dup1\n  0x656970313936372e70726f78792e696d706c656d656e746174696f6e00000000\n  dup2\n  mstore\n  pop\n  0x1c\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1131:1181  uint256(keccak256(\"eip1967.proxy.implementation\")) */\n  0x00\n  shr\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1131:1185  uint256(keccak256(\"eip1967.proxy.implementation\")) - 1 */\n  sub\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1123:1186  bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1) */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1727:1793  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1099:1119  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1099:1186  _IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1) */\n  eq\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1092:1187  assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1)) */\n  tag_12\n  jumpi\n  invalid\ntag_12:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1197:1223  _setImplementation(_logic) */\n  tag_13\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1216:1222  _logic */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1197:1215  _setImplementation */\n  shl(0x20, tag_14)\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1197:1223  _setImplementation(_logic) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1251:1252  0 */\n  0x00\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1236:1241  _data */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1236:1248  _data.length */\n  mload\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1236:1252  _data.length > 0 */\n  gt\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1233:1322  if(_data.length > 0) {... */\n  iszero\n  tag_15\n  jumpi\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1268:1311  Address.functionDelegateCall(_logic, _data) */\n  tag_16\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1297:1303  _logic */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1305:1310  _data */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1268:1296  Address.functionDelegateCall */\n  or(tag_0_57, shl(0x20, tag_17))\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1268:1311  Address.functionDelegateCall(_logic, _data) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1233:1322  if(_data.length > 0) {... */\ntag_15:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1019:1328  constructor(address _logic, bytes memory _data) public payable {... */\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2029:2030  1 */\n  0x01\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1993:2025  keccak256(\"eip1967.proxy.admin\") */\n  mload(0x40)\n  dup1\n  dup1\n  0x656970313936372e70726f78792e61646d696e00000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x13\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1985:2026  uint256(keccak256(\"eip1967.proxy.admin\")) */\n  0x00\n  shr\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1985:2030  uint256(keccak256(\"eip1967.proxy.admin\")) - 1 */\n  sub\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1977:2031  bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1) */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2443:2509  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1962:1973  _ADMIN_SLOT */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1962:2031  _ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1) */\n  eq\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1955:2032  assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1)) */\n  tag_19\n  jumpi\n  invalid\ntag_19:\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2042:2059  _setAdmin(admin_) */\n  tag_20\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2052:2058  admin_ */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2042:2051  _setAdmin */\n  shl(0x20, tag_21)\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2042:2059  _setAdmin(admin_) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1834:2066  constructor(address _logic, address admin_, bytes memory _data) public payable UpgradeableProxy(_logic, _data) {... */\n  pop\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1552:6130  contract TransparentUpgradeableProxy is UpgradeableProxy {... */\n  jump(tag_22)\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2492:2852  function _setImplementation(address newImplementation) private {... */\ntag_14:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2610  Address.isContract(newImplementation) */\n  tag_24\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2592:2609  newImplementation */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2591  Address.isContract */\n  or(tag_0_104, shl(0x20, tag_25))\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2610  Address.isContract(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2565:2669  require(Address.isContract(newImplementation), \"UpgradeableProxy: new implementation is not a contract\") */\n  tag_26\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x36\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877\n  0x36\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_26:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2680:2692  bytes32 slot */\n  0x00\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1727:1793  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2695:2715  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2680:2715  bytes32 slot = _IMPLEMENTATION_SLOT */\n  swap1\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2818:2835  newImplementation */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2812:2816  slot */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2805:2836  sstore(slot, newImplementation) */\n  sstore\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2791:2846  {... */\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6284:6482  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_17:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6367:6379  bytes memory */\n  0x60\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_28\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6419:6425  target */\n  dup4\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6427:6431  data */\n  dup4\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n  0x27\n  swap2\n  codecopy\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6418  functionDelegateCall */\n  shl(0x20, tag_29)\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6391:6475  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap1\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6284:6482  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5594:5803  function _setAdmin(address newAdmin) private {... */\ntag_21:\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5649:5661  bytes32 slot */\n  0x00\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2443:2509  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5664:5675  _ADMIN_SLOT */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5649:5675  bytes32 slot = _ADMIN_SLOT */\n  swap1\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5778:5786  newAdmin */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5772:5776  slot */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5765:5787  sstore(slot, newAdmin) */\n  sstore\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5751:5797  {... */\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\ntag_25:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":786:790  bool */\n  0x00\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":989:1001  uint256 size */\n  dup1\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1098:1105  account */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n  extcodesize\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1078:1106  size := extcodesize(account) */\n  swap1\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1131:1132  0 */\n  0x00\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1128  size */\n  dup2\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1132  size > 0 */\n  gt\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1117:1132  return size > 0 */\n  swap2\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6668:7085  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\ntag_29:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6779:6791  bytes memory */\n  0x60\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6829  isContract(target) */\n  tag_33\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6822:6828  target */\n  dup5\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6821  isContract */\n  shl(0x20, tag_25)\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6829  isContract(target) */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6803:6872  require(isContract(target), \"Address: delegate call to non-contract\") */\n  tag_34\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x26\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520\n  0x26\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_34:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6943:6955  bool success */\n  0x00\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6957:6980  bytes memory returndata */\n  0x60\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:6990  target */\n  dup6\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7003  target.delegatecall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7004:7008  data */\n  dup6\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7009  target.delegatecall(data) */\n  mload(0x40)\n  dup1\n  dup3\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":36:189   */\ntag_35:\n    /* \"--CODEGEN--\":66:68   */\n  0x20\n    /* \"--CODEGEN--\":61:64   */\n  dup4\n    /* \"--CODEGEN--\":58:69   */\n  lt\n    /* \"--CODEGEN--\":36:189   */\n  tag_37\n  jumpi\n    /* \"--CODEGEN--\":182:185   */\n  dup1\n    /* \"--CODEGEN--\":176:186   */\n  mload\n    /* \"--CODEGEN--\":171:174   */\n  dup3\n    /* \"--CODEGEN--\":164:187   */\n  mstore\n    /* \"--CODEGEN--\":98:100   */\n  0x20\n    /* \"--CODEGEN--\":93:96   */\n  dup3\n    /* \"--CODEGEN--\":89:101   */\n  add\n    /* \"--CODEGEN--\":82:101   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:125   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup2\n    /* \"--CODEGEN--\":114:126   */\n  add\n    /* \"--CODEGEN--\":107:126   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":148:150   */\n  0x20\n    /* \"--CODEGEN--\":143:146   */\n  dup4\n    /* \"--CODEGEN--\":139:151   */\n  sub\n    /* \"--CODEGEN--\":132:151   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":36:189   */\n  jump(tag_35)\ntag_37:\n    /* \"--CODEGEN--\":274:275   */\n  0x01\n    /* \"--CODEGEN--\":267:270   */\n  dup4\n    /* \"--CODEGEN--\":263:265   */\n  0x20\n    /* \"--CODEGEN--\":259:271   */\n  sub\n    /* \"--CODEGEN--\":254:257   */\n  0x0100\n    /* \"--CODEGEN--\":250:272   */\n  exp\n    /* \"--CODEGEN--\":246:276   */\n  sub\n    /* \"--CODEGEN--\":315:319   */\n  dup1\n    /* \"--CODEGEN--\":311:320   */\n  not\n    /* \"--CODEGEN--\":305:308   */\n  dup3\n    /* \"--CODEGEN--\":299:309   */\n  mload\n    /* \"--CODEGEN--\":295:321   */\n  and\n    /* \"--CODEGEN--\":356:360   */\n  dup2\n    /* \"--CODEGEN--\":350:353   */\n  dup5\n    /* \"--CODEGEN--\":344:354   */\n  mload\n    /* \"--CODEGEN--\":340:361   */\n  and\n    /* \"--CODEGEN--\":389:396   */\n  dup1\n    /* \"--CODEGEN--\":380:387   */\n  dup3\n    /* \"--CODEGEN--\":377:397   */\n  or\n    /* \"--CODEGEN--\":372:375   */\n  dup6\n    /* \"--CODEGEN--\":365:398   */\n  mstore\n    /* \"--CODEGEN--\":3:402   */\n  pop\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7009  target.delegatecall(data) */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  add\n  swap2\n  pop\n  pop\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n    /* \"--CODEGEN--\":12:13   */\n  dup1\n    /* \"--CODEGEN--\":19:20   */\n  0x00\n    /* \"--CODEGEN--\":14:41   */\n  dup2\n  eq\n  tag_40\n  jumpi\n    /* \"--CODEGEN--\":67:71   */\n  0x40\n    /* \"--CODEGEN--\":61:72   */\n  mload\n    /* \"--CODEGEN--\":56:72   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":134:138   */\n  0x1f\n    /* \"--CODEGEN--\":130:139   */\n  not\n    /* \"--CODEGEN--\":123:127   */\n  0x3f\n    /* \"--CODEGEN--\":105:121   */\n  returndatasize\n    /* \"--CODEGEN--\":101:128   */\n  add\n    /* \"--CODEGEN--\":97:140   */\n  and\n    /* \"--CODEGEN--\":94:95   */\n  dup3\n    /* \"--CODEGEN--\":90:141   */\n  add\n    /* \"--CODEGEN--\":84:88   */\n  0x40\n    /* \"--CODEGEN--\":77:142   */\n  mstore\n    /* \"--CODEGEN--\":157:173   */\n  returndatasize\n    /* \"--CODEGEN--\":154:155   */\n  dup3\n    /* \"--CODEGEN--\":147:174   */\n  mstore\n    /* \"--CODEGEN--\":211:227   */\n  returndatasize\n    /* \"--CODEGEN--\":208:209   */\n  0x00\n    /* \"--CODEGEN--\":201:205   */\n  0x20\n    /* \"--CODEGEN--\":198:199   */\n  dup5\n    /* \"--CODEGEN--\":194:206   */\n  add\n    /* \"--CODEGEN--\":179:228   */\n  returndatacopy\n    /* \"--CODEGEN--\":5:233   */\n  jump(tag_39)\n    /* \"--CODEGEN--\":14:41   */\ntag_40:\n    /* \"--CODEGEN--\":32:36   */\n  0x60\n    /* \"--CODEGEN--\":27:36   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":5:233   */\ntag_39:\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6942:7009  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7078  _verifyCallResult(success, returndata, errorMessage) */\n  tag_41\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7044:7051  success */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7053:7063  returndata */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7065:7077  errorMessage */\n  dup7\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7043  _verifyCallResult */\n  shl(0x20, tag_42)\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7078  _verifyCallResult(success, returndata, errorMessage) */\n  0x20\n  shr\n  jump\t// in\ntag_41:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7019:7078  return _verifyCallResult(success, returndata, errorMessage) */\n  swap3\n  pop\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6668:7085  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\ntag_42:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7206:7218  bytes memory */\n  0x60\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7234:7241  success */\n  dup4\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n  iszero\n  tag_44\n  jumpi\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7264:7274  returndata */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7257:7274  return returndata */\n  swap1\n  pop\n  jump(tag_43)\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7230:7810  if (success) {... */\ntag_44:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7395:7396  0 */\n  0x00\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7385  returndata */\n  dup4\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7392  returndata.length */\n  mload\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n  gt\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n  iszero\n  tag_46\n  jumpi\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7633:7643  returndata */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n  mload\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7693:7708  returndata_size */\n  dup1\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7680:7690  returndata */\n  dup5\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7676:7678  32 */\n  0x20\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n  add\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7582:7727  {... */\ntag_46:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7772:7784  errorMessage */\n  dup2\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_48:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_50\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_48)\ntag_50:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_51\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_51:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\ntag_43:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1552:6130  contract TransparentUpgradeableProxy is UpgradeableProxy {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\ndata_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877 5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374\ndata_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520 416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374\n\nsub_0: assembly {\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1552:6130  contract TransparentUpgradeableProxy is UpgradeableProxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8f283970\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2843:2854  _fallback() */\n      tag_10\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2843:2852  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2843:2854  _fallback() */\n      jump\t// in\n    tag_10:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1552:6130  contract TransparentUpgradeableProxy is UpgradeableProxy {... */\n      stop\n    tag_2:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2619:2630  _fallback() */\n      tag_14\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2619:2628  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2619:2630  _fallback() */\n      jump\t// in\n    tag_14:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":1552:6130  contract TransparentUpgradeableProxy is UpgradeableProxy {... */\n      stop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4521:4638  function upgradeTo(address newImplementation) external virtual ifAdmin {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4521:4638  function upgradeTo(address newImplementation) external virtual ifAdmin {... */\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_17:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4521:4638  function upgradeTo(address newImplementation) external virtual ifAdmin {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_20:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:25   */\n      dup2\n        /* \"--CODEGEN--\":11:39   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_21:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_22:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_23:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_24\n      jump\t// in\n    tag_19:\n      stop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3777:3906  function implementation() external ifAdmin returns (address implementation_) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3777:3906  function implementation() external ifAdmin returns (address implementation_) {... */\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4111:4361  function changeAdmin(address newAdmin) external virtual ifAdmin {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_28:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4111:4361  function changeAdmin(address newAdmin) external virtual ifAdmin {... */\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_30:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4111:4361  function changeAdmin(address newAdmin) external virtual ifAdmin {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3224:3317  function admin() external ifAdmin returns (address admin_) {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3224:3317  function admin() external ifAdmin returns (address admin_) {... */\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2265:2375  function _fallback() internal virtual {... */\n    tag_11:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2313:2330  _beforeFallback() */\n      tag_36\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2313:2328  _beforeFallback */\n      tag_37\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2313:2330  _beforeFallback() */\n      jump\t// in\n    tag_36:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2340:2368  _delegate(_implementation()) */\n      tag_38\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2350:2367  _implementation() */\n      tag_39\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2350:2365  _implementation */\n      tag_40\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2350:2367  _implementation() */\n      jump\t// in\n    tag_39:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2340:2349  _delegate */\n      tag_41\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2340:2368  _delegate(_implementation()) */\n      jump\t// in\n    tag_38:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2265:2375  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4521:4638  function upgradeTo(address newImplementation) external virtual ifAdmin {... */\n    tag_18:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      tag_43\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2704  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      jump\t// in\n    tag_43:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2694  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      iszero\n      tag_45\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4602:4631  _upgradeTo(newImplementation) */\n      tag_47\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4613:4630  newImplementation */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4602:4612  _upgradeTo */\n      tag_48\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4602:4631  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_47:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      jump(tag_49)\n    tag_45:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      tag_50\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2763  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      jump\t// in\n    tag_50:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n    tag_49:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4521:4638  function upgradeTo(address newImplementation) external virtual ifAdmin {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n    tag_24:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      tag_52\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2704  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      jump\t// in\n    tag_52:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2694  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      iszero\n      tag_53\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5131:5160  _upgradeTo(newImplementation) */\n      tag_55\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5142:5159  newImplementation */\n      dup4\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5131:5141  _upgradeTo */\n      tag_48\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5131:5160  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_55:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5170:5223  Address.functionDelegateCall(newImplementation, data) */\n      tag_56\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5199:5216  newImplementation */\n      dup4\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5218:5222  data */\n      dup4\n      dup4\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5170:5223  Address.functionDelegateCall(newImplementation, data) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5170:5223  Address.functionDelegateCall(newImplementation, data) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5170:5198  Address.functionDelegateCall */\n      tag_57\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5170:5223  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_56:\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      jump(tag_58)\n    tag_53:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      tag_59\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2763  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      jump\t// in\n    tag_59:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n    tag_58:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5014:5230  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3777:3906  function implementation() external ifAdmin returns (address implementation_) {... */\n    tag_27:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3829:3852  address implementation_ */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      tag_61\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2704  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      jump\t// in\n    tag_61:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2694  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      iszero\n      tag_62\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3882:3899  _implementation() */\n      tag_64\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3882:3897  _implementation */\n      tag_40\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3882:3899  _implementation() */\n      jump\t// in\n    tag_64:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3864:3899  implementation_ = _implementation() */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      jump(tag_65)\n    tag_62:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      tag_66\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2763  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      jump\t// in\n    tag_66:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n    tag_65:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3777:3906  function implementation() external ifAdmin returns (address implementation_) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4111:4361  function changeAdmin(address newAdmin) external virtual ifAdmin {... */\n    tag_31:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      tag_68\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2704  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      jump\t// in\n    tag_68:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2694  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      iszero\n      tag_69\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4213:4214  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4193:4215  newAdmin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4193:4201  newAdmin */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4193:4215  newAdmin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4185:4278  require(newAdmin != address(0), \"TransparentUpgradeableProxy: new admin is the zero address\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6b8c7de7d8992cce1e1093ee65cc3fbbb636cdcec8111cd0ef596adac25e6858\n      0x3a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4293:4325  AdminChanged(_admin(), newAdmin) */\n      0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4306:4314  _admin() */\n      tag_72\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4306:4312  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4306:4314  _admin() */\n      jump\t// in\n    tag_72:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4316:4324  newAdmin */\n      dup3\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4293:4325  AdminChanged(_admin(), newAdmin) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4335:4354  _setAdmin(newAdmin) */\n      tag_73\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4345:4353  newAdmin */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4335:4344  _setAdmin */\n      tag_74\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4335:4354  _setAdmin(newAdmin) */\n      jump\t// in\n    tag_73:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      jump(tag_75)\n    tag_69:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      tag_76\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2763  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      jump\t// in\n    tag_76:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n    tag_75:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":4111:4361  function changeAdmin(address newAdmin) external virtual ifAdmin {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3224:3317  function admin() external ifAdmin returns (address admin_) {... */\n    tag_34:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3267:3281  address admin_ */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      tag_78\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2704  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2698:2706  _admin() */\n      jump\t// in\n    tag_78:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2694  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2684:2706  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3302:3310  _admin() */\n      tag_81\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3302:3308  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3302:3310  _admin() */\n      jump\t// in\n    tag_81:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3293:3310  admin_ = _admin() */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n      jump(tag_82)\n    tag_79:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      tag_83\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2763  _fallback */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2754:2765  _fallback() */\n      jump\t// in\n    tag_83:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2680:2776  if (msg.sender == _admin()) {... */\n    tag_82:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":3224:3317  function admin() external ifAdmin returns (address admin_) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5924:6128  function _beforeFallback() internal virtual override {... */\n    tag_37:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":6009:6017  _admin() */\n      tag_85\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":6009:6015  _admin */\n      tag_44\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":6009:6017  _admin() */\n      jump\t// in\n    tag_85:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5995:6017  msg.sender != _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5995:6005  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5995:6017  msg.sender != _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5987:6088  require(msg.sender != _admin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x42\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d\n      0x42\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":6098:6121  super._beforeFallback() */\n      tag_87\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":6098:6119  super._beforeFallback */\n      tag_88\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":6098:6121  super._beforeFallback() */\n      jump\t// in\n    tag_87:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5924:6128  function _beforeFallback() internal virtual override {... */\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1872:2122  function _implementation() internal view virtual override returns (address impl) {... */\n    tag_40:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1939:1951  address impl */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1963:1975  bytes32 slot */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1727:1793  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1978:1998  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1963:1998  bytes32 slot = _IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2101:2105  slot */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2095:2106  sload(slot) */\n      sload\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2087:2106  impl := sload(slot) */\n      swap2\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2073:2116  {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":891:1786  function _delegate(address implementation) internal virtual {... */\n    tag_41:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1285:1299  calldatasize() */\n      calldatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1282:1283  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1279:1280  0 */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1266:1300  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1499:1500  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1496:1497  0 */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1480:1494  calldatasize() */\n      calldatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1477:1478  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1461:1475  implementation */\n      dup5\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1454:1459  gas() */\n      gas\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1441:1501  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1575:1591  returndatasize() */\n      returndatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1572:1573  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1569:1570  0 */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1554:1592  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1613:1619  result */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1685:1686  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1680:1718  case 0 { revert(0, returndatasize()) } */\n      dup2\n      eq\n      tag_92\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1751:1767  returndatasize() */\n      returndatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1748:1749  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1741:1768  return(0, returndatasize()) */\n      return\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1680:1718  case 0 { revert(0, returndatasize()) } */\n    tag_92:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1699:1715  returndatasize() */\n      returndatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1696:1697  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1689:1716  revert(0, returndatasize()) */\n      revert\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5291:5512  function _admin() internal view virtual returns (address adm) {... */\n    tag_44:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5340:5351  address adm */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5363:5375  bytes32 slot */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2443:2509  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5378:5389  _ADMIN_SLOT */\n      0x00\n      shl\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5363:5389  bytes32 slot = _ADMIN_SLOT */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5491:5495  slot */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5485:5496  sload(slot) */\n      sload\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5478:5496  adm := sload(slot) */\n      swap2\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5464:5506  {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2241:2401  function _upgradeTo(address newImplementation) internal virtual {... */\n    tag_48:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2315:2352  _setImplementation(newImplementation) */\n      tag_95\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2334:2351  newImplementation */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2315:2333  _setImplementation */\n      tag_96\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2315:2352  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_95:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2376:2393  newImplementation */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2367:2394  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2241:2401  function _upgradeTo(address newImplementation) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6284:6482  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_57:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6367:6379  bytes memory */\n      0x60\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_98\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6419:6425  target */\n      dup4\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6427:6431  data */\n      dup4\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6418  functionDelegateCall */\n      tag_99\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_98:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6391:6475  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6284:6482  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5594:5803  function _setAdmin(address newAdmin) private {... */\n    tag_74:\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5649:5661  bytes32 slot */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":2443:2509  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5664:5675  _ADMIN_SLOT */\n      0x00\n      shl\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5649:5675  bytes32 slot = _ADMIN_SLOT */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5778:5786  newAdmin */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5772:5776  slot */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5765:5787  sstore(slot, newAdmin) */\n      sstore\n        /* \"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":5751:5797  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":3142:3193  function _beforeFallback() internal virtual {... */\n    tag_88:\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2492:2852  function _setImplementation(address newImplementation) private {... */\n    tag_96:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2610  Address.isContract(newImplementation) */\n      tag_103\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2592:2609  newImplementation */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2591  Address.isContract */\n      tag_104\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2610  Address.isContract(newImplementation) */\n      jump\t// in\n    tag_103:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2565:2669  require(Address.isContract(newImplementation), \"UpgradeableProxy: new implementation is not a contract\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2680:2692  bytes32 slot */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1727:1793  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2695:2715  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2680:2715  bytes32 slot = _IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2818:2835  newImplementation */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2812:2816  slot */\n      dup2\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2805:2836  sstore(slot, newImplementation) */\n      sstore\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2791:2846  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6668:7085  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_99:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6779:6791  bytes memory */\n      0x60\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6829  isContract(target) */\n      tag_107\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6822:6828  target */\n      dup5\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6821  isContract */\n      tag_104\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6829  isContract(target) */\n      jump\t// in\n    tag_107:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6803:6872  require(isContract(target), \"Address: delegate call to non-contract\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6943:6955  bool success */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6957:6980  bytes memory returndata */\n      0x60\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:6990  target */\n      dup6\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7003  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7004:7008  data */\n      dup6\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7009  target.delegatecall(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_109:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_111\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_109)\n    tag_111:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7009  target.delegatecall(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_114\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_113)\n        /* \"--CODEGEN--\":14:41   */\n    tag_114:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_113:\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6942:7009  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7078  _verifyCallResult(success, returndata, errorMessage) */\n      tag_115\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7044:7051  success */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7053:7063  returndata */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7065:7077  errorMessage */\n      dup7\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7043  _verifyCallResult */\n      tag_116\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7078  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_115:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7019:7078  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6668:7085  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_104:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":786:790  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":989:1001  uint256 size */\n      dup1\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1098:1105  account */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1078:1106  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1131:1132  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1128  size */\n      dup2\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      gt\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1117:1132  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_116:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7257:7274  return returndata */\n      swap1\n      pop\n      jump(tag_118)\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_119:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7395:7396  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7385  returndata */\n      dup4\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      mload\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      gt\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_121:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_123:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_125\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_123)\n    tag_125:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_126:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_118:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_6b8c7de7d8992cce1e1093ee65cc3fbbb636cdcec8111cd0ef596adac25e6858 5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f2061646472657373\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n    data_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877 5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374\n    data_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520 416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374\n    data_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d 5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574\n\n    auxdata: 0xa26469706673582212204742ef6594a9299eb6fd8ec90dfb216bea34f38e7f7a6d0972b2bce7440a948f64736f6c63430006030033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0x110E CODESIZE SUB DUP1 PUSH3 0x110E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xAC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP3 DUP2 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x656970313936372E70726F78792E696D706C656D656E746174696F6E00000000 DUP2 MSTORE POP PUSH1 0x1C ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SHR SUB PUSH1 0x0 SHL PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL EQ PUSH3 0x16B JUMPI INVALID JUMPDEST PUSH3 0x17C DUP3 PUSH3 0x227 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x19E DUP3 DUP3 PUSH3 0x2C3 PUSH1 0x20 SHL PUSH3 0x6FB OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x656970313936372E70726F78792E61646D696E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x13 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SHR SUB PUSH1 0x0 SHL PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL EQ PUSH3 0x20D JUMPI INVALID JUMPDEST PUSH3 0x21E DUP3 PUSH3 0x2F9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x552 JUMP JUMPDEST PUSH3 0x23D DUP2 PUSH3 0x328 PUSH1 0x20 SHL PUSH3 0x915 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x294 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x10B2 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x2F1 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x108B PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x33B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x34E DUP5 PUSH3 0x328 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x10E8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0x3F6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH3 0x3D1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x458 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x45D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH3 0x475 DUP3 DUP3 DUP7 PUSH3 0x480 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x492 JUMPI DUP3 SWAP1 POP PUSH3 0x54B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH3 0x4A6 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x50F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x53D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB29 DUP1 PUSH3 0x562 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1F9 JUMPI PUSH2 0x5D JUMP JUMPDEST CALLDATASIZE PUSH2 0x5D JUMPI PUSH2 0x5B PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x65 PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x2BF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x268 PUSH2 0x263 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x272 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2AE DUP2 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x250 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x357 JUMPI PUSH2 0x303 DUP4 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x351 DUP4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x6FB JUMP JUMPDEST POP PUSH2 0x360 JUMP JUMPDEST PUSH2 0x35F PUSH2 0x250 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3B1 JUMPI PUSH2 0x3AA PUSH2 0x624 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0x250 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3C5 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9F5 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x4A7 PUSH2 0x67B JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x525 DUP2 PUSH2 0x728 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x250 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x540 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x582 JUMPI PUSH2 0x57B PUSH2 0x67B JUMP JUMPDEST SWAP1 POP PUSH2 0x58B JUMP JUMPDEST PUSH2 0x58A PUSH2 0x250 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x596 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x42 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAB2 PUSH1 0x42 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x622 PUSH2 0x757 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x676 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6B5 DUP2 PUSH2 0x759 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x720 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA2F PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x7E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x762 DUP2 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA56 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7F1 DUP5 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA8C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x895 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x872 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x90A DUP3 DUP3 DUP7 PUSH2 0x928 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x938 JUMPI DUP3 SWAP1 POP PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x94B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9B2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x997 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9DF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID SLOAD PUSH19 0x616E73706172656E745570677261646561626C PUSH6 0x50726F78793A KECCAK256 PUSH15 0x65772061646D696E20697320746865 KECCAK256 PUSH27 0x65726F2061646472657373416464726573733A206C6F772D6C6576 PUSH6 0x6C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65645570 PUSH8 0x7261646561626C65 POP PUSH19 0x6F78793A206E657720696D706C656D656E7461 PUSH21 0x696F6E206973206E6F74206120636F6E7472616374 COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH5 0x656C656761 PUSH21 0x652063616C6C20746F206E6F6E2D636F6E74726163 PUSH21 0x5472616E73706172656E745570677261646561626C PUSH6 0x50726F78793A KECCAK256 PUSH2 0x646D PUSH10 0x6E2063616E6E6F742066 PUSH2 0x6C6C PUSH3 0x61636B KECCAK256 PUSH21 0x6F2070726F787920746172676574A2646970667358 0x22 SLT KECCAK256 SELFBALANCE TIMESTAMP 0xEF PUSH6 0x94A9299EB6FD DUP15 0xC9 0xD 0xFB 0x21 PUSH12 0xEA34F38E7F7A6D0972B2BCE7 DIFFICULTY EXP SWAP5 DUP16 PUSH5 0x736F6C6343 STOP MOD SUB STOP CALLER COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65645570 PUSH8 0x7261646561626C65 POP PUSH19 0x6F78793A206E657720696D706C656D656E7461 PUSH21 0x696F6E206973206E6F74206120636F6E7472616374 COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH5 0x656C656761 PUSH21 0x652063616C6C20746F206E6F6E2D636F6E74726163 PUSH21 0x0 ",
							"sourceMap": "1552:4578:2:-:0;;;1834:232;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1834:232:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1834:232:2;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1834:232:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1930:6;1938:5;1184:1:3;1139:41;;;;;;;;;;;;;;;;;;;1131:50;;:54;1123:63;;1727:66;1099:20;;:87;1092:95;;;;1197:26;1216:6;1197:18;;;:26;;:::i;:::-;1251:1;1236:5;:12;:16;1233:89;;;1268:43;1297:6;1305:5;1268:28;;;;;:43;;:::i;:::-;;1233:89;1019:309;;2029:1:2::1;1993:32;;;;;;;::::0;::::1;;;;;;;;;;;1985:41;;:45;1977:54;;2443:66;1962:11;;:69;1955:77;;;;2042:17;2052:6;2042:9;;;:17;;:::i;:::-;1834:232:::0;;;1552:4578;;2492:360:3;2573:37;2592:17;2573:18;;;;;:37;;:::i;:::-;2565:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2680:12;1727:66;2695:20;;2680:35;;2818:17;2812:4;2805:31;2791:55;;:::o;6284:198:4:-;6367:12;6398:77;6419:6;6427:4;6398:77;;;;;;;;;;;;;;;;;:20;;;:77;;:::i;:::-;6391:84;;6284:198;;;;:::o;5594:209:2:-;5649:12;2443:66;5664:11;;5649:26;;5778:8;5772:4;5765:22;5751:46;;:::o;726:413:4:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;6668:417::-;6779:12;6811:18;6822:6;6811:10;;;:18;;:::i;:::-;6803:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6943:12;6957:23;6984:6;:19;;7004:4;6984:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6984:25:4;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;6942:67:4;;;;7026:52;7044:7;7053:10;7065:12;7026:17;;;:52;;:::i;:::-;7019:59;;;;6668:417;;;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7765:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o;1552:4578:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004e5760003560e01c80633659cfe6146100675780634f1ef286146100b85780635c60da1b146101515780638f283970146101a8578063f851a440146101f95761005d565b3661005d5761005b610250565b005b610065610250565b005b34801561007357600080fd5b506100b66004803603602081101561008a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061026a565b005b61014f600480360360408110156100ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561010b57600080fd5b82018360208201111561011d57600080fd5b8035906020019184600183028401116401000000008311171561013f57600080fd5b90919293919293905050506102bf565b005b34801561015d57600080fd5b50610166610365565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b457600080fd5b506101f7600480360360208110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103bd565b005b34801561020557600080fd5b5061020e610536565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61025861058e565b610268610263610624565b610655565b565b61027261067b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102b3576102ae816106ac565b6102bc565b6102bb610250565b5b50565b6102c761067b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561035757610303836106ac565b6103518383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506106fb565b50610360565b61035f610250565b5b505050565b600061036f61067b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103b1576103aa610624565b90506103ba565b6103b9610250565b5b90565b6103c561067b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561052a57600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561047e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806109f5603a913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104a761067b565b82604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a161052581610728565b610533565b610532610250565b5b50565b600061054061067b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105825761057b61067b565b905061058b565b61058a610250565b5b90565b61059661067b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561061a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526042815260200180610ab26042913960600191505060405180910390fd5b610622610757565b565b6000807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b9050805491505090565b3660008037600080366000845af43d6000803e8060008114610676573d6000f35b3d6000fd5b6000807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b9050805491505090565b6106b581610759565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606107208383604051806060016040528060278152602001610a2f602791396107e6565b905092915050565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b90508181555050565b565b61076281610915565b6107b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180610a566036913960400191505060405180910390fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b90508181555050565b60606107f184610915565b610846576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610a8c6026913960400191505060405180910390fd5b600060608573ffffffffffffffffffffffffffffffffffffffff16856040518082805190602001908083835b602083106108955780518252602082019150602081019050602083039250610872565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146108f5576040519150601f19603f3d011682016040523d82523d6000602084013e6108fa565b606091505b509150915061090a828286610928565b925050509392505050565b600080823b905060008111915050919050565b60608315610938578290506109ed565b60008351111561094b5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109b2578082015181840152602081019050610997565b50505050905090810190601f1680156109df5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f2061646472657373416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65645570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e74726163745472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574a26469706673582212204742ef6594a9299eb6fd8ec90dfb216bea34f38e7f7a6d0972b2bce7440a948f64736f6c63430006030033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1F9 JUMPI PUSH2 0x5D JUMP JUMPDEST CALLDATASIZE PUSH2 0x5D JUMPI PUSH2 0x5B PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x65 PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x2BF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x268 PUSH2 0x263 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x272 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2B3 JUMPI PUSH2 0x2AE DUP2 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x250 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x357 JUMPI PUSH2 0x303 DUP4 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x351 DUP4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x6FB JUMP JUMPDEST POP PUSH2 0x360 JUMP JUMPDEST PUSH2 0x35F PUSH2 0x250 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3B1 JUMPI PUSH2 0x3AA PUSH2 0x624 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0x250 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3C5 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9F5 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x4A7 PUSH2 0x67B JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x525 DUP2 PUSH2 0x728 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x250 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x540 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x582 JUMPI PUSH2 0x57B PUSH2 0x67B JUMP JUMPDEST SWAP1 POP PUSH2 0x58B JUMP JUMPDEST PUSH2 0x58A PUSH2 0x250 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x596 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x42 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAB2 PUSH1 0x42 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x622 PUSH2 0x757 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x676 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6B5 DUP2 PUSH2 0x759 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x720 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA2F PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x7E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x762 DUP2 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA56 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7F1 DUP5 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA8C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x895 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x872 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x90A DUP3 DUP3 DUP7 PUSH2 0x928 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x938 JUMPI DUP3 SWAP1 POP PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x94B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9B2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x997 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9DF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID SLOAD PUSH19 0x616E73706172656E745570677261646561626C PUSH6 0x50726F78793A KECCAK256 PUSH15 0x65772061646D696E20697320746865 KECCAK256 PUSH27 0x65726F2061646472657373416464726573733A206C6F772D6C6576 PUSH6 0x6C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65645570 PUSH8 0x7261646561626C65 POP PUSH19 0x6F78793A206E657720696D706C656D656E7461 PUSH21 0x696F6E206973206E6F74206120636F6E7472616374 COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH5 0x656C656761 PUSH21 0x652063616C6C20746F206E6F6E2D636F6E74726163 PUSH21 0x5472616E73706172656E745570677261646561626C PUSH6 0x50726F78793A KECCAK256 PUSH2 0x646D PUSH10 0x6E2063616E6E6F742066 PUSH2 0x6C6C PUSH3 0x61636B KECCAK256 PUSH21 0x6F2070726F787920746172676574A2646970667358 0x22 SLT KECCAK256 SELFBALANCE TIMESTAMP 0xEF PUSH6 0x94A9299EB6FD DUP15 0xC9 0xD 0xFB 0x21 PUSH12 0xEA34F38E7F7A6D0972B2BCE7 DIFFICULTY EXP SWAP5 DUP16 PUSH5 0x736F6C6343 STOP MOD SUB STOP CALLER ",
							"sourceMap": "1552:4578:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2843:11:1;:9;:11::i;:::-;1552:4578:2;;2619:11:1;:9;:11::i;:::-;1552:4578:2;4521:117;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4521:117:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4521:117:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;5014:216;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5014:216:2;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;5014:216:2;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;5014:216:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5014:216:2;;;;;;;;;;;;:::i;:::-;;3777:129;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3777:129:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4111:250;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4111:250:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4111:250:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;3224:93;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3224:93:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2265:110:1;2313:17;:15;:17::i;:::-;2340:28;2350:17;:15;:17::i;:::-;2340:9;:28::i;:::-;2265:110::o;4521:117:2:-;2698:8;:6;:8::i;:::-;2684:22;;:10;:22;;;2680:96;;;4602:29:::1;4613:17;4602:10;:29::i;:::-;2680:96:::0;;;2754:11;:9;:11::i;:::-;2680:96;4521:117;:::o;5014:216::-;2698:8;:6;:8::i;:::-;2684:22;;:10;:22;;;2680:96;;;5131:29:::1;5142:17;5131:10;:29::i;:::-;5170:53;5199:17;5218:4;;5170:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5170:53:2;;;;;;:28;:53::i;:::-;;2680:96:::0;;;2754:11;:9;:11::i;:::-;2680:96;5014:216;;;:::o;3777:129::-;3829:23;2698:8;:6;:8::i;:::-;2684:22;;:10;:22;;;2680:96;;;3882:17:::1;:15;:17::i;:::-;3864:35;;2680:96:::0;;;2754:11;:9;:11::i;:::-;2680:96;3777:129;:::o;4111:250::-;2698:8;:6;:8::i;:::-;2684:22;;:10;:22;;;2680:96;;;4213:1:::1;4193:22;;:8;:22;;;;4185:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4293:32;4306:8;:6;:8::i;:::-;4316;4293:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4335:19;4345:8;4335:9;:19::i;:::-;2680:96:::0;;;2754:11;:9;:11::i;:::-;2680:96;4111:250;:::o;3224:93::-;3267:14;2698:8;:6;:8::i;:::-;2684:22;;:10;:22;;;2680:96;;;3302:8:::1;:6;:8::i;:::-;3293:17;;2680:96:::0;;;2754:11;:9;:11::i;:::-;2680:96;3224:93;:::o;5924:204::-;6009:8;:6;:8::i;:::-;5995:22;;:10;:22;;;;5987:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6098:23;:21;:23::i;:::-;5924:204::o;1872:250:3:-;1939:12;1963;1727:66;1978:20;;1963:35;;2101:4;2095:11;2087:19;;2073:43;;:::o;891:895:1:-;1285:14;1282:1;1279;1266:34;1499:1;1496;1480:14;1477:1;1461:14;1454:5;1441:60;1575:16;1572:1;1569;1554:38;1613:6;1685:1;1680:38;;;;1751:16;1748:1;1741:27;1680:38;1699:16;1696:1;1689:27;5291:221:2;5340:11;5363:12;2443:66;5378:11;;5363:26;;5491:4;5485:11;5478:18;;5464:42;;:::o;2241:160:3:-;2315:37;2334:17;2315:18;:37::i;:::-;2376:17;2367:27;;;;;;;;;;;;2241:160;:::o;6284:198:4:-;6367:12;6398:77;6419:6;6427:4;6398:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6391:84;;6284:198;;;;:::o;5594:209:2:-;5649:12;2443:66;5664:11;;5649:26;;5778:8;5772:4;5765:22;5751:46;;:::o;3142:51:1:-;:::o;2492:360:3:-;2573:37;2592:17;2573:18;:37::i;:::-;2565:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2680:12;1727:66;2695:20;;2680:35;;2818:17;2812:4;2805:31;2791:55;;:::o;6668:417:4:-;6779:12;6811:18;6822:6;6811:10;:18::i;:::-;6803:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6943:12;6957:23;6984:6;:19;;7004:4;6984:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6984:25:4;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;6942:67:4;;;;7026:52;7044:7;7053:10;7065:12;7026:17;:52::i;:::-;7019:59;;;;6668:417;;;;;:::o;726:413::-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7765:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "571400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"admin()": "infinite",
								"changeAdmin(address)": "infinite",
								"implementation()": "infinite",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_admin()": "842",
								"_beforeFallback()": "infinite",
								"_setAdmin(address)": "20036"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1552,
									"end": 6130,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1552,
									"end": 6130,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 6130,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL",
									"source": -1
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "7"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "7"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1930,
									"end": 1936,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1938,
									"end": 1943,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1184,
									"end": 1185,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "PUSH",
									"source": 3,
									"value": "656970313936372E70726F78792E696D706C656D656E746174696F6E00000000"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "PUSH",
									"source": 3,
									"value": "1C"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1131,
									"end": 1181,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1131,
									"end": 1181,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1131,
									"end": 1185,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1123,
									"end": 1186,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1123,
									"end": 1186,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1727,
									"end": 1793,
									"name": "PUSH",
									"source": 3,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1186,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1216,
									"end": 1222,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1251,
									"end": 1252,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1236,
									"end": 1241,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1248,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1252,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1297,
									"end": 1303,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1310,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551673"
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2029,
									"end": 2030,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "PUSH",
									"source": 2,
									"value": "656970313936372E70726F78792E61646D696E00000000000000000000000000"
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "PUSH",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1993,
									"end": 2025,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2026,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1985,
									"end": 2026,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2030,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1977,
									"end": 2031,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1977,
									"end": 2031,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2443,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
								},
								{
									"begin": 1962,
									"end": 1973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1973,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 2031,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1955,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1955,
									"end": 2032,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1955,
									"end": 2032,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 1955,
									"end": 2032,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1955,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2052,
									"end": 2058,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2042,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2042,
									"end": 2051,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2059,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2042,
									"end": 2059,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2059,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2042,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2042,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1834,
									"end": 2066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 6130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1552,
									"end": 6130,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2492,
									"end": 2852,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 2492,
									"end": 2852,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 2592,
									"end": 2609,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551720"
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH data",
									"source": 3,
									"value": "A962AFC8125C78A56CAF50B104C38B8318717478C281B4E59E7FB3E32AF3A877"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2680,
									"end": 2692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1727,
									"end": 1793,
									"name": "PUSH",
									"source": 3,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 2695,
									"end": 2715,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2695,
									"end": 2715,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2680,
									"end": 2715,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2680,
									"end": 2715,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2818,
									"end": 2835,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2812,
									"end": 2816,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2805,
									"end": 2836,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2791,
									"end": 2846,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2791,
									"end": 2846,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2791,
									"end": 2846,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6367,
									"end": 6379,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 6419,
									"end": 6425,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6427,
									"end": 6431,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH data",
									"source": 4,
									"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6418,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 6398,
									"end": 6418,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6398,
									"end": 6418,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6391,
									"end": 6475,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6391,
									"end": 6475,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 5594,
									"end": 5803,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 5594,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5649,
									"end": 5661,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2443,
									"end": 2509,
									"name": "PUSH",
									"source": 2,
									"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
								},
								{
									"begin": 5664,
									"end": 5675,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5664,
									"end": 5675,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5649,
									"end": 5675,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5649,
									"end": 5675,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5778,
									"end": 5786,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5772,
									"end": 5776,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5765,
									"end": 5787,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5797,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5797,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5751,
									"end": 5797,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 786,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 989,
									"end": 1001,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1098,
									"end": 1105,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1086,
									"end": 1106,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1106,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1106,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1124,
									"end": 1128,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6779,
									"end": 6791,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 6822,
									"end": 6828,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6811,
									"end": 6821,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 6811,
									"end": 6821,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6811,
									"end": 6821,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH data",
									"source": 4,
									"value": "B94DED0918034CF8F896E19FA3CFDEF1188CD569C577264A3622E49152F88520"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6943,
									"end": 6955,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6957,
									"end": 6980,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6984,
									"end": 6990,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7003,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6984,
									"end": 7003,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7004,
									"end": 7008,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 36,
									"end": 189,
									"name": "tag",
									"source": -1,
									"value": "35"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 66,
									"end": 68,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 61,
									"end": 64,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 58,
									"end": 69,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 36,
									"end": 189,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "37"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 185,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 176,
									"end": 186,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 171,
									"end": 174,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 164,
									"end": 187,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 98,
									"end": 100,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 93,
									"end": 96,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 82,
									"end": 101,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 82,
									"end": 101,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 125,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 114,
									"end": 126,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 107,
									"end": 126,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 107,
									"end": 126,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 148,
									"end": 150,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 143,
									"end": 146,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 132,
									"end": 151,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 132,
									"end": 151,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 36,
									"end": 189,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "35"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 36,
									"end": 189,
									"name": "tag",
									"source": -1,
									"value": "37"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 274,
									"end": 275,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 267,
									"end": 270,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 263,
									"end": 265,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 259,
									"end": 271,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 254,
									"end": 257,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": 250,
									"end": 272,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": 246,
									"end": 276,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 315,
									"end": 319,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 311,
									"end": 320,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 305,
									"end": 308,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 299,
									"end": 309,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 295,
									"end": 321,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 356,
									"end": 360,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 350,
									"end": 353,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 344,
									"end": 354,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 340,
									"end": 361,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 389,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 380,
									"end": 387,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 377,
									"end": 397,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 372,
									"end": 375,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 365,
									"end": 398,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3,
									"end": 402,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3,
									"end": 402,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3,
									"end": 402,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "GAS",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DELEGATECALL",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 12,
									"end": 13,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 19,
									"end": 20,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 14,
									"end": 41,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 14,
									"end": 41,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 14,
									"end": 41,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 14,
									"end": 41,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 67,
									"end": 71,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 72,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 56,
									"end": 72,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 56,
									"end": 72,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 134,
									"end": 138,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": 130,
									"end": 139,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "3F"
								},
								{
									"begin": 105,
									"end": 121,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 101,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 97,
									"end": 140,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 94,
									"end": 95,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 141,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 88,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 77,
									"end": 142,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 157,
									"end": 173,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 154,
									"end": 155,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 147,
									"end": 174,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 211,
									"end": 227,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 208,
									"end": 209,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 205,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 198,
									"end": 199,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 194,
									"end": 206,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 179,
									"end": 228,
									"name": "RETURNDATACOPY",
									"source": -1
								},
								{
									"begin": 5,
									"end": 233,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "39"
								},
								{
									"begin": 5,
									"end": 233,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 41,
									"name": "tag",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 14,
									"end": 41,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 32,
									"end": 36,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 27,
									"end": 36,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 36,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5,
									"end": 233,
									"name": "tag",
									"source": -1,
									"value": "39"
								},
								{
									"begin": 5,
									"end": 233,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 5,
									"end": 233,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6942,
									"end": 7009,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6942,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6942,
									"end": 7009,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6942,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 7044,
									"end": 7051,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7053,
									"end": 7063,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7065,
									"end": 7077,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 7026,
									"end": 7043,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 7026,
									"end": 7043,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7026,
									"end": 7043,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7019,
									"end": 7078,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7019,
									"end": 7078,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7019,
									"end": 7078,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7019,
									"end": 7078,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7206,
									"end": 7218,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 7234,
									"end": 7241,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7264,
									"end": 7274,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7395,
									"end": 7396,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7375,
									"end": 7385,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7375,
									"end": 7392,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7375,
									"end": 7396,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7371,
									"end": 7800,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7371,
									"end": 7800,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 7371,
									"end": 7800,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7633,
									"end": 7643,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7627,
									"end": 7644,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7693,
									"end": 7708,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7680,
									"end": 7690,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7676,
									"end": 7678,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7672,
									"end": 7691,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7665,
									"end": 7709,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7582,
									"end": 7727,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 7582,
									"end": 7727,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7772,
									"end": 7784,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "48"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "50"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "48"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "50"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1552,
									"end": 6130,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1552,
									"end": 6130,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 6130,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1552,
									"end": 6130,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 6130,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1552,
									"end": 6130,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 6130,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 6130,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 6130,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204742ef6594a9299eb6fd8ec90dfb216bea34f38e7f7a6d0972b2bce7440a948f64736f6c63430006030033",
									".code": [
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH",
											"source": 2,
											"value": "3659CFE6"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH",
											"source": 2,
											"value": "4F1EF286"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH",
											"source": 2,
											"value": "5C60DA1B"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH",
											"source": 2,
											"value": "8F283970"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH",
											"source": 2,
											"value": "F851A440"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 6130,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2265,
											"end": 2375,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2265,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2313,
											"end": 2330,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2313,
											"end": 2330,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2313,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2350,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2340,
											"end": 2368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2340,
											"end": 2368,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2340,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2375,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4602,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4613,
											"end": 4630,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4602,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4602,
											"end": 4631,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4602,
											"end": 4631,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4602,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5131,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5142,
											"end": 5159,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5131,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5131,
											"end": 5160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5160,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5131,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5199,
											"end": 5216,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5222,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5222,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5014,
											"end": 5230,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3882,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3882,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3906,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4213,
											"end": 4214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4215,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4193,
											"end": 4215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4215,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4193,
											"end": 4215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4215,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4215,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "3A"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH data",
											"source": 2,
											"value": "6B8C7DE7D8992CCE1E1093EE65CC3FBBB636CDCEC8111CD0EF596ADAC25E6858"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "3A"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4185,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F"
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4306,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4316,
											"end": 4324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4325,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4345,
											"end": 4353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4111,
											"end": 4361,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2698,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3302,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3302,
											"end": 3310,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3302,
											"end": 3310,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3302,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3293,
											"end": 3310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3293,
											"end": 3310,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2754,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2680,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3317,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5924,
											"end": 6128,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5924,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6009,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6009,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6009,
											"end": 6017,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6009,
											"end": 6017,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6009,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6017,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5995,
											"end": 6017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6005,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6017,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5995,
											"end": 6017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6017,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6017,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH data",
											"source": 2,
											"value": "F5D2EA39D7E6C7D19DC32CCC2BD7CA26B7AA4A603EF4AA6F2B205C93C3FFE43D"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5987,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6098,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6098,
											"end": 6121,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6098,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6098,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5924,
											"end": 6128,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1872,
											"end": 2122,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 1951,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1793,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1978,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1998,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2106,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2116,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 891,
											"end": 1786,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 891,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1299,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1300,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1494,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1501,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1591,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1592,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1767,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1768,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1715,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1716,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5512,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5291,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5340,
											"end": 5351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5363,
											"end": 5389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5363,
											"end": 5389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5491,
											"end": 5495,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5496,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5478,
											"end": 5496,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5478,
											"end": 5496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5464,
											"end": 5506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5464,
											"end": 5506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5464,
											"end": 5506,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2241,
											"end": 2401,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2241,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2315,
											"end": 2352,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2352,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2315,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2376,
											"end": 2393,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "PUSH",
											"source": 3,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2394,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2401,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6379,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6419,
											"end": 6425,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6427,
											"end": 6431,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH data",
											"source": 4,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 6475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 6475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5594,
											"end": 5803,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5594,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 5664,
											"end": 5675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5664,
											"end": 5675,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5649,
											"end": 5675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5778,
											"end": 5786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5772,
											"end": 5776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5765,
											"end": 5787,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5797,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3142,
											"end": 3193,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3142,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3193,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2492,
											"end": 2852,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2492,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2592,
											"end": 2609,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2573,
											"end": 2610,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2573,
											"end": 2610,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2573,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH data",
											"source": 3,
											"value": "A962AFC8125C78A56CAF50B104C38B8318717478C281B4E59E7FB3E32AF3A877"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1793,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2816,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2836,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 2846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 2846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 2846,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6791,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 6822,
											"end": 6828,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6811,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH data",
											"source": 4,
											"value": "B94DED0918034CF8F896E19FA3CFDEF1188CD569C577264A3622E49152F88520"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6943,
											"end": 6955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6957,
											"end": 6980,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6984,
											"end": 6990,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7003,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6984,
											"end": 7003,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7004,
											"end": 7008,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "109"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "111"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "109"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "111"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "114"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "113"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"source": -1,
											"value": "114"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"source": -1,
											"value": "113"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6942,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6942,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6942,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6942,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 7044,
											"end": 7051,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7053,
											"end": 7063,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7065,
											"end": 7077,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 7026,
											"end": 7078,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7026,
											"end": 7078,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 7026,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7078,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7385,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "123"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "125"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "123"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "125"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"6B8C7DE7D8992CCE1E1093EE65CC3FBBB636CDCEC8111CD0EF596ADAC25E6858": "5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f2061646472657373",
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
										"A962AFC8125C78A56CAF50B104C38B8318717478C281B4E59E7FB3E32AF3A877": "5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
										"B94DED0918034CF8F896E19FA3CFDEF1188CD569C577264A3622E49152F88520": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
										"F5D2EA39D7E6C7D19DC32CCC2BD7CA26B7AA4A603EF4AA6F2B205C93C3FFE43D": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574"
									}
								},
								"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
								"A962AFC8125C78A56CAF50B104C38B8318717478C281B4E59E7FB3E32AF3A877": "5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
								"B94DED0918034CF8F896E19FA3CFDEF1188CD569C577264A3622E49152F88520": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374"
							}
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"changeAdmin(address)": "8f283970",
							"implementation()": "5c60da1b",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin.     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy.     * Emits an {AdminChanged} event.     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation.     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy.     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract.     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x0414d54056b3d8f9102ae1142264e9361408397878148203ab7a25cbf6248f08\",\"urls\":[\"bzz-raw://ebdc01639f69030c754dc3462d5f437c4644164465066187e320f524579fbede\",\"dweb:/ipfs/QmZZhoPYagwu4MoJMAg26Y6Nfj4d9HJzUnvrMNsbo9ZorM\"]},\"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xf852214ea286716082f3ba480ff70bda2cbe2d11238091d2a440767d0ed49e61\",\"urls\":[\"bzz-raw://9381d4856e04635fcd426b0ef39a1b5aa56764170f23823daa91905a06751531\",\"dweb:/ipfs/QmZ7vo8xo9GUrcxutmQnCYy9NpvjsxHWfqQCpFzYtHNu7A\"]},\"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":{\"keccak256\":\"0x81af1059a5bd5fb25cb0351499e1d4110416f5b0000ffad6427cbf6088b193a4\",\"urls\":[\"bzz-raw://621f2fedaeeacf70ff1554748f63356555f591cdcf29c74e3d23a83720a078a2\",\"dweb:/ipfs/QmYGnscyZgJGYgXKcoYhNX2M6uoJiHS1zTsQnu5NsJxPGG\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol": {
				"UpgradeableProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy. * Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see {TransparentUpgradeableProxy}.",
						"methods": {
							"constructor": {
								"details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`.     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":638:2854  contract UpgradeableProxy is Proxy {... */\n  mstore(0x40, 0x80)\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1019:1328  constructor(address _logic, bytes memory _data) public payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x40\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_1:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1019:1328  constructor(address _logic, bytes memory _data) public payable {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_2:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_3:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_4:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1019:1328  constructor(address _logic, bytes memory _data) public payable {... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_5:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_7\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_5)\ntag_7:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1019:1328  constructor(address _logic, bytes memory _data) public payable {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_8:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1184:1185  1 */\n  0x01\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1139:1180  keccak256(\"eip1967.proxy.implementation\") */\n  mload(0x40)\n  dup1\n  dup1\n  0x656970313936372e70726f78792e696d706c656d656e746174696f6e00000000\n  dup2\n  mstore\n  pop\n  0x1c\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1131:1181  uint256(keccak256(\"eip1967.proxy.implementation\")) */\n  0x00\n  shr\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1131:1185  uint256(keccak256(\"eip1967.proxy.implementation\")) - 1 */\n  sub\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1123:1186  bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1) */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1727:1793  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1099:1119  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1099:1186  _IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1) */\n  eq\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1092:1187  assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1)) */\n  tag_11\n  jumpi\n  invalid\ntag_11:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1197:1223  _setImplementation(_logic) */\n  tag_12\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1216:1222  _logic */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1197:1215  _setImplementation */\n  shl(0x20, tag_13)\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1197:1223  _setImplementation(_logic) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1251:1252  0 */\n  0x00\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1236:1241  _data */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1236:1248  _data.length */\n  mload\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1236:1252  _data.length > 0 */\n  gt\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1233:1322  if(_data.length > 0) {... */\n  iszero\n  tag_14\n  jumpi\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1268:1311  Address.functionDelegateCall(_logic, _data) */\n  tag_15\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1297:1303  _logic */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1305:1310  _data */\n  dup3\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1268:1296  Address.functionDelegateCall */\n  or(tag_0_22, shl(0x20, tag_16))\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1268:1311  Address.functionDelegateCall(_logic, _data) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1233:1322  if(_data.length > 0) {... */\ntag_14:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1019:1328  constructor(address _logic, bytes memory _data) public payable {... */\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":638:2854  contract UpgradeableProxy is Proxy {... */\n  jump(tag_17)\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2492:2852  function _setImplementation(address newImplementation) private {... */\ntag_13:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2610  Address.isContract(newImplementation) */\n  tag_19\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2592:2609  newImplementation */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2591  Address.isContract */\n  or(tag_0_23, shl(0x20, tag_20))\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2573:2610  Address.isContract(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2565:2669  require(Address.isContract(newImplementation), \"UpgradeableProxy: new implementation is not a contract\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x36\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877\n  0x36\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2680:2692  bytes32 slot */\n  0x00\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1727:1793  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2695:2715  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2680:2715  bytes32 slot = _IMPLEMENTATION_SLOT */\n  swap1\n  pop\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2818:2835  newImplementation */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2812:2816  slot */\n  dup2\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2805:2836  sstore(slot, newImplementation) */\n  sstore\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2791:2846  {... */\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6284:6482  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_16:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6367:6379  bytes memory */\n  0x60\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_23\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6419:6425  target */\n  dup4\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6427:6431  data */\n  dup4\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n  0x27\n  swap2\n  codecopy\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6418  functionDelegateCall */\n  shl(0x20, tag_24)\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6391:6475  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap1\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6284:6482  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\ntag_20:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":786:790  bool */\n  0x00\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":989:1001  uint256 size */\n  dup1\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1098:1105  account */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n  extcodesize\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1078:1106  size := extcodesize(account) */\n  swap1\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1131:1132  0 */\n  0x00\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1128  size */\n  dup2\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1132  size > 0 */\n  gt\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1117:1132  return size > 0 */\n  swap2\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6668:7085  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\ntag_24:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6779:6791  bytes memory */\n  0x60\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6829  isContract(target) */\n  tag_27\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6822:6828  target */\n  dup5\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6821  isContract */\n  shl(0x20, tag_20)\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6829  isContract(target) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6803:6872  require(isContract(target), \"Address: delegate call to non-contract\") */\n  tag_28\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x26\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520\n  0x26\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_28:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6943:6955  bool success */\n  0x00\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6957:6980  bytes memory returndata */\n  0x60\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:6990  target */\n  dup6\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7003  target.delegatecall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7004:7008  data */\n  dup6\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7009  target.delegatecall(data) */\n  mload(0x40)\n  dup1\n  dup3\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":36:189   */\ntag_29:\n    /* \"--CODEGEN--\":66:68   */\n  0x20\n    /* \"--CODEGEN--\":61:64   */\n  dup4\n    /* \"--CODEGEN--\":58:69   */\n  lt\n    /* \"--CODEGEN--\":36:189   */\n  tag_31\n  jumpi\n    /* \"--CODEGEN--\":182:185   */\n  dup1\n    /* \"--CODEGEN--\":176:186   */\n  mload\n    /* \"--CODEGEN--\":171:174   */\n  dup3\n    /* \"--CODEGEN--\":164:187   */\n  mstore\n    /* \"--CODEGEN--\":98:100   */\n  0x20\n    /* \"--CODEGEN--\":93:96   */\n  dup3\n    /* \"--CODEGEN--\":89:101   */\n  add\n    /* \"--CODEGEN--\":82:101   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:125   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup2\n    /* \"--CODEGEN--\":114:126   */\n  add\n    /* \"--CODEGEN--\":107:126   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":148:150   */\n  0x20\n    /* \"--CODEGEN--\":143:146   */\n  dup4\n    /* \"--CODEGEN--\":139:151   */\n  sub\n    /* \"--CODEGEN--\":132:151   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":36:189   */\n  jump(tag_29)\ntag_31:\n    /* \"--CODEGEN--\":274:275   */\n  0x01\n    /* \"--CODEGEN--\":267:270   */\n  dup4\n    /* \"--CODEGEN--\":263:265   */\n  0x20\n    /* \"--CODEGEN--\":259:271   */\n  sub\n    /* \"--CODEGEN--\":254:257   */\n  0x0100\n    /* \"--CODEGEN--\":250:272   */\n  exp\n    /* \"--CODEGEN--\":246:276   */\n  sub\n    /* \"--CODEGEN--\":315:319   */\n  dup1\n    /* \"--CODEGEN--\":311:320   */\n  not\n    /* \"--CODEGEN--\":305:308   */\n  dup3\n    /* \"--CODEGEN--\":299:309   */\n  mload\n    /* \"--CODEGEN--\":295:321   */\n  and\n    /* \"--CODEGEN--\":356:360   */\n  dup2\n    /* \"--CODEGEN--\":350:353   */\n  dup5\n    /* \"--CODEGEN--\":344:354   */\n  mload\n    /* \"--CODEGEN--\":340:361   */\n  and\n    /* \"--CODEGEN--\":389:396   */\n  dup1\n    /* \"--CODEGEN--\":380:387   */\n  dup3\n    /* \"--CODEGEN--\":377:397   */\n  or\n    /* \"--CODEGEN--\":372:375   */\n  dup6\n    /* \"--CODEGEN--\":365:398   */\n  mstore\n    /* \"--CODEGEN--\":3:402   */\n  pop\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7009  target.delegatecall(data) */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  add\n  swap2\n  pop\n  pop\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n    /* \"--CODEGEN--\":12:13   */\n  dup1\n    /* \"--CODEGEN--\":19:20   */\n  0x00\n    /* \"--CODEGEN--\":14:41   */\n  dup2\n  eq\n  tag_34\n  jumpi\n    /* \"--CODEGEN--\":67:71   */\n  0x40\n    /* \"--CODEGEN--\":61:72   */\n  mload\n    /* \"--CODEGEN--\":56:72   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":134:138   */\n  0x1f\n    /* \"--CODEGEN--\":130:139   */\n  not\n    /* \"--CODEGEN--\":123:127   */\n  0x3f\n    /* \"--CODEGEN--\":105:121   */\n  returndatasize\n    /* \"--CODEGEN--\":101:128   */\n  add\n    /* \"--CODEGEN--\":97:140   */\n  and\n    /* \"--CODEGEN--\":94:95   */\n  dup3\n    /* \"--CODEGEN--\":90:141   */\n  add\n    /* \"--CODEGEN--\":84:88   */\n  0x40\n    /* \"--CODEGEN--\":77:142   */\n  mstore\n    /* \"--CODEGEN--\":157:173   */\n  returndatasize\n    /* \"--CODEGEN--\":154:155   */\n  dup3\n    /* \"--CODEGEN--\":147:174   */\n  mstore\n    /* \"--CODEGEN--\":211:227   */\n  returndatasize\n    /* \"--CODEGEN--\":208:209   */\n  0x00\n    /* \"--CODEGEN--\":201:205   */\n  0x20\n    /* \"--CODEGEN--\":198:199   */\n  dup5\n    /* \"--CODEGEN--\":194:206   */\n  add\n    /* \"--CODEGEN--\":179:228   */\n  returndatacopy\n    /* \"--CODEGEN--\":5:233   */\n  jump(tag_33)\n    /* \"--CODEGEN--\":14:41   */\ntag_34:\n    /* \"--CODEGEN--\":32:36   */\n  0x60\n    /* \"--CODEGEN--\":27:36   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":5:233   */\ntag_33:\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6942:7009  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7078  _verifyCallResult(success, returndata, errorMessage) */\n  tag_35\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7044:7051  success */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7053:7063  returndata */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7065:7077  errorMessage */\n  dup7\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7043  _verifyCallResult */\n  shl(0x20, tag_36)\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7078  _verifyCallResult(success, returndata, errorMessage) */\n  0x20\n  shr\n  jump\t// in\ntag_35:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7019:7078  return _verifyCallResult(success, returndata, errorMessage) */\n  swap3\n  pop\n  pop\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6668:7085  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\ntag_36:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7206:7218  bytes memory */\n  0x60\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7234:7241  success */\n  dup4\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n  iszero\n  tag_38\n  jumpi\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7264:7274  returndata */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7257:7274  return returndata */\n  swap1\n  pop\n  jump(tag_37)\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7230:7810  if (success) {... */\ntag_38:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7395:7396  0 */\n  0x00\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7385  returndata */\n  dup4\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7392  returndata.length */\n  mload\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n  gt\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n  iszero\n  tag_40\n  jumpi\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7633:7643  returndata */\n  dup3\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n  mload\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7693:7708  returndata_size */\n  dup1\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7680:7690  returndata */\n  dup5\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7676:7678  32 */\n  0x20\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n  add\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7582:7727  {... */\ntag_40:\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7772:7784  errorMessage */\n  dup2\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_42:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_44\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_42)\ntag_44:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_45\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_45:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\ntag_37:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":638:2854  contract UpgradeableProxy is Proxy {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\ndata_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877 5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374\ndata_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520 416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374\n\nsub_0: assembly {\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":638:2854  contract UpgradeableProxy is Proxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2843:2854  _fallback() */\n      tag_5\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2843:2852  _fallback */\n      tag_6\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2843:2854  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":638:2854  contract UpgradeableProxy is Proxy {... */\n      stop\n    tag_2:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2619:2630  _fallback() */\n      tag_9\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2619:2628  _fallback */\n      tag_6\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2619:2630  _fallback() */\n      jump\t// in\n    tag_9:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":638:2854  contract UpgradeableProxy is Proxy {... */\n      stop\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2265:2375  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2313:2330  _beforeFallback() */\n      tag_11\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2313:2328  _beforeFallback */\n      tag_12\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2313:2330  _beforeFallback() */\n      jump\t// in\n    tag_11:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2340:2368  _delegate(_implementation()) */\n      tag_13\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2350:2367  _implementation() */\n      tag_14\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2350:2365  _implementation */\n      tag_15\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2350:2367  _implementation() */\n      jump\t// in\n    tag_14:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2340:2349  _delegate */\n      tag_16\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2340:2368  _delegate(_implementation()) */\n      jump\t// in\n    tag_13:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":2265:2375  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":3142:3193  function _beforeFallback() internal virtual {... */\n    tag_12:\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1872:2122  function _implementation() internal view virtual override returns (address impl) {... */\n    tag_15:\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1939:1951  address impl */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1963:1975  bytes32 slot */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1727:1793  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1978:1998  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":1963:1998  bytes32 slot = _IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2101:2105  slot */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2095:2106  sload(slot) */\n      sload\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2087:2106  impl := sload(slot) */\n      swap2\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":2073:2116  {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":891:1786  function _delegate(address implementation) internal virtual {... */\n    tag_16:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1285:1299  calldatasize() */\n      calldatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1282:1283  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1279:1280  0 */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1266:1300  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1499:1500  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1496:1497  0 */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1480:1494  calldatasize() */\n      calldatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1477:1478  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1461:1475  implementation */\n      dup5\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1454:1459  gas() */\n      gas\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1441:1501  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1575:1591  returndatasize() */\n      returndatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1572:1573  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1569:1570  0 */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1554:1592  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1613:1619  result */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1685:1686  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1680:1718  case 0 { revert(0, returndatasize()) } */\n      dup2\n      eq\n      tag_21\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1751:1767  returndatasize() */\n      returndatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1748:1749  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1741:1768  return(0, returndatasize()) */\n      return\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1680:1718  case 0 { revert(0, returndatasize()) } */\n    tag_21:\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1699:1715  returndatasize() */\n      returndatasize\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1696:1697  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Proxy.sol\":1689:1716  revert(0, returndatasize()) */\n      revert\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6284:6482  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_22:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6367:6379  bytes memory */\n      0x60\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_25\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6419:6425  target */\n      dup4\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6427:6431  data */\n      dup4\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6418  functionDelegateCall */\n      tag_26\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6398:6475  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_25:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6391:6475  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6284:6482  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_23:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":786:790  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":989:1001  uint256 size */\n      dup1\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1098:1105  account */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1078:1106  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1131:1132  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1128  size */\n      dup2\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      gt\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1117:1132  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6668:7085  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_26:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6779:6791  bytes memory */\n      0x60\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6829  isContract(target) */\n      tag_29\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6822:6828  target */\n      dup5\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6821  isContract */\n      tag_23\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6811:6829  isContract(target) */\n      jump\t// in\n    tag_29:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6803:6872  require(isContract(target), \"Address: delegate call to non-contract\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6943:6955  bool success */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6957:6980  bytes memory returndata */\n      0x60\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:6990  target */\n      dup6\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7003  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7004:7008  data */\n      dup6\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7009  target.delegatecall(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_31:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_31)\n    tag_33:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6984:7009  target.delegatecall(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_35)\n        /* \"--CODEGEN--\":14:41   */\n    tag_36:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_35:\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6942:7009  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7078  _verifyCallResult(success, returndata, errorMessage) */\n      tag_37\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7044:7051  success */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7053:7063  returndata */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7065:7077  errorMessage */\n      dup7\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7043  _verifyCallResult */\n      tag_38\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7026:7078  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_37:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7019:7078  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":6668:7085  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_38:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_40\n      jumpi\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7257:7274  return returndata */\n      swap1\n      pop\n      jump(tag_39)\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_40:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7395:7396  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7385  returndata */\n      dup4\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      mload\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      gt\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      iszero\n      tag_42\n      jumpi\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_42:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_44:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_44)\n    tag_46:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_47\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_47:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_39:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n    data_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520 416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374\n\n    auxdata: 0xa2646970667358221220c71c8a29a53ddc5e6591789b5aa97134987062e910c2fe263f9026347554400864736f6c63430006030033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260405161084f38038061084f8339818101604052604081101561002657600080fd5b81019080805190602001909291908051604051939291908464010000000082111561005057600080fd5b8382019150602082018581111561006657600080fd5b825186600182028301116401000000008211171561008357600080fd5b8083526020830192505050908051906020019080838360005b838110156100b757808201518184015260208101905061009c565b50505050905090810190601f1680156100e45780820380516001836020036101000a031916815260200191505b50604052505050600160405180807f656970313936372e70726f78792e696d706c656d656e746174696f6e00000000815250601c019050604051809103902060001c0360001b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b1461015557fe5b6101648261018b60201b60201c565b60008151111561018457610182828261022260201b6100901760201c565b505b505061046f565b61019e8161025560201b6100bd1760201c565b6101f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806107f36036913960400191505060405180910390fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b90508181555050565b606061024d83836040518060600160405280602781526020016107cc6027913961026860201b60201c565b905092915050565b600080823b905060008111915050919050565b60606102798461025560201b60201c565b6102ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806108296026913960400191505060405180910390fd5b600060608573ffffffffffffffffffffffffffffffffffffffff16856040518082805190602001908083835b6020831061031d57805182526020820191506020810190506020830392506102fa565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461037d576040519150601f19603f3d011682016040523d82523d6000602084013e610382565b606091505b50915091506103988282866103a360201b60201c565b925050509392505050565b606083156103b357829050610468565b6000835111156103c65782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561042d578082015181840152602081019050610412565b50505050905090810190601f16801561045a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b9392505050565b61034e8061047e6000396000f3fe6080604052366100135761001161001d565b005b61001b61001d565b005b610025610037565b610035610030610039565b61006a565b565b565b6000807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b9050805491505090565b3660008037600080366000845af43d6000803e806000811461008b573d6000f35b3d6000fd5b60606100b583836040518060600160405280602781526020016102cc602791396100d0565b905092915050565b600080823b905060008111915050919050565b60606100db846100bd565b610130576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806102f36026913960400191505060405180910390fd5b600060608573ffffffffffffffffffffffffffffffffffffffff16856040518082805190602001908083835b6020831061017f578051825260208201915060208101905060208303925061015c565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146101df576040519150601f19603f3d011682016040523d82523d6000602084013e6101e4565b606091505b50915091506101f48282866101ff565b925050509392505050565b6060831561020f578290506102c4565b6000835111156102225782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561028957808201518184015260208101905061026e565b50505050905090810190601f1680156102b65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374a2646970667358221220c71c8a29a53ddc5e6591789b5aa97134987062e910c2fe263f9026347554400864736f6c63430006030033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65645570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x84F CODESIZE SUB DUP1 PUSH2 0x84F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x656970313936372E70726F78792E696D706C656D656E746174696F6E00000000 DUP2 MSTORE POP PUSH1 0x1C ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SHR SUB PUSH1 0x0 SHL PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL EQ PUSH2 0x155 JUMPI INVALID JUMPDEST PUSH2 0x164 DUP3 PUSH2 0x18B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x184 JUMPI PUSH2 0x182 DUP3 DUP3 PUSH2 0x222 PUSH1 0x20 SHL PUSH2 0x90 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP PUSH2 0x46F JUMP JUMPDEST PUSH2 0x19E DUP2 PUSH2 0x255 PUSH1 0x20 SHL PUSH2 0xBD OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x7F3 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x24D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7CC PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x268 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x279 DUP5 PUSH2 0x255 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x829 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x31D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x37D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x382 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x398 DUP3 DUP3 DUP7 PUSH2 0x3A3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3B3 JUMPI DUP3 SWAP1 POP PUSH2 0x468 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x3C6 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x42D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x412 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x45A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x34E DUP1 PUSH2 0x47E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25 PUSH2 0x37 JUMP JUMPDEST PUSH2 0x35 PUSH2 0x30 PUSH2 0x39 JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8B JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xB5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xD0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDB DUP5 PUSH2 0xBD JUMP JUMPDEST PUSH2 0x130 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x17F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x15C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1F4 DUP3 DUP3 DUP7 PUSH2 0x1FF JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x20F JUMPI DUP3 SWAP1 POP PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x222 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x289 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65644164 PUSH5 0x726573733A KECCAK256 PUSH5 0x656C656761 PUSH21 0x652063616C6C20746F206E6F6E2D636F6E74726163 PUSH21 0xA2646970667358221220C71C8A29A53DDC5E659178 SWAP12 GAS 0xA9 PUSH18 0x34987062E910C2FE263F9026347554400864 PUSH20 0x6F6C63430006030033416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x65645570677261646561626C65 POP PUSH19 0x6F78793A206E657720696D706C656D656E7461 PUSH21 0x696F6E206973206E6F74206120636F6E7472616374 COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH5 0x656C656761 PUSH21 0x652063616C6C20746F206E6F6E2D636F6E74726163 PUSH21 0x0 ",
							"sourceMap": "638:2216:3:-:0;;;1019:309;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1019:309:3;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1019:309:3;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1019:309:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1184:1;1139:41;;;;;;;;;;;;;;;;;;;1131:50;;:54;1123:63;;1727:66;1099:20;;:87;1092:95;;;;1197:26;1216:6;1197:18;;;:26;;:::i;:::-;1251:1;1236:5;:12;:16;1233:89;;;1268:43;1297:6;1305:5;1268:28;;;;;:43;;:::i;:::-;;1233:89;1019:309;;638:2216;;2492:360;2573:37;2592:17;2573:18;;;;;:37;;:::i;:::-;2565:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2680:12;1727:66;2695:20;;2680:35;;2818:17;2812:4;2805:31;2791:55;;:::o;6284:198:4:-;6367:12;6398:77;6419:6;6427:4;6398:77;;;;;;;;;;;;;;;;;:20;;;:77;;:::i;:::-;6391:84;;6284:198;;;;:::o;726:413::-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;6668:417::-;6779:12;6811:18;6822:6;6811:10;;;:18;;:::i;:::-;6803:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6943:12;6957:23;6984:6;:19;;7004:4;6984:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6984:25:4;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;6942:67:4;;;;7026:52;7044:7;7053:10;7065:12;7026:17;;;:52;;:::i;:::-;7019:59;;;;6668:417;;;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7765:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o;638:2216:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052366100135761001161001d565b005b61001b61001d565b005b610025610037565b610035610030610039565b61006a565b565b565b6000807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b9050805491505090565b3660008037600080366000845af43d6000803e806000811461008b573d6000f35b3d6000fd5b60606100b583836040518060600160405280602781526020016102cc602791396100d0565b905092915050565b600080823b905060008111915050919050565b60606100db846100bd565b610130576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806102f36026913960400191505060405180910390fd5b600060608573ffffffffffffffffffffffffffffffffffffffff16856040518082805190602001908083835b6020831061017f578051825260208201915060208101905060208303925061015c565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146101df576040519150601f19603f3d011682016040523d82523d6000602084013e6101e4565b606091505b50915091506101f48282866101ff565b925050509392505050565b6060831561020f578290506102c4565b6000835111156102225782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561028957808201518184015260208101905061026e565b50505050905090810190601f1680156102b65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374a2646970667358221220c71c8a29a53ddc5e6591789b5aa97134987062e910c2fe263f9026347554400864736f6c63430006030033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25 PUSH2 0x37 JUMP JUMPDEST PUSH2 0x35 PUSH2 0x30 PUSH2 0x39 JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8B JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xB5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xD0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDB DUP5 PUSH2 0xBD JUMP JUMPDEST PUSH2 0x130 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x17F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x15C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1F4 DUP3 DUP3 DUP7 PUSH2 0x1FF JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x20F JUMPI DUP3 SWAP1 POP PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x222 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x289 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65644164 PUSH5 0x726573733A KECCAK256 PUSH5 0x656C656761 PUSH21 0x652063616C6C20746F206E6F6E2D636F6E74726163 PUSH21 0xA2646970667358221220C71C8A29A53DDC5E659178 SWAP12 GAS 0xA9 PUSH18 0x34987062E910C2FE263F9026347554400864 PUSH20 0x6F6C634300060300330000000000000000000000 ",
							"sourceMap": "638:2216:3:-:0;;;;;;2843:11:1;:9;:11::i;:::-;638:2216:3;;2619:11:1;:9;:11::i;:::-;638:2216:3;2265:110:1;2313:17;:15;:17::i;:::-;2340:28;2350:17;:15;:17::i;:::-;2340:9;:28::i;:::-;2265:110::o;3142:51::-;:::o;1872:250:3:-;1939:12;1963;1727:66;1978:20;;1963:35;;2101:4;2095:11;2087:19;;2073:43;;:::o;891:895:1:-;1285:14;1282:1;1279;1266:34;1499:1;1496;1480:14;1477:1;1461:14;1454:5;1441:60;1575:16;1572:1;1569;1554:38;1613:6;1685:1;1680:38;;;;1751:16;1748:1;1741:27;1680:38;1699:16;1696:1;1689:27;6284:198:4;6367:12;6398:77;6419:6;6427:4;6398:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6391:84;;6284:198;;;;:::o;726:413::-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;6668:417::-;6779:12;6811:18;6822:6;6811:10;:18::i;:::-;6803:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6943:12;6957:23;6984:6;:19;;7004:4;6984:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6984:25:4;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;6942:67:4;;;;7026:52;7044:7;7053:10;7065:12;7026:17;:52::i;:::-;7019:59;;;;6668:417;;;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7765:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "169200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "842",
								"_setImplementation(address)": "infinite",
								"_upgradeTo(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 638,
									"end": 2854,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 638,
									"end": 2854,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 638,
									"end": 2854,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL",
									"source": -1
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "7"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "7"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1184,
									"end": 1185,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "PUSH",
									"source": 3,
									"value": "656970313936372E70726F78792E696D706C656D656E746174696F6E00000000"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "PUSH",
									"source": 3,
									"value": "1C"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1139,
									"end": 1180,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1131,
									"end": 1181,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1131,
									"end": 1181,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1131,
									"end": 1185,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1123,
									"end": 1186,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1123,
									"end": 1186,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1727,
									"end": 1793,
									"name": "PUSH",
									"source": 3,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1186,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1092,
									"end": 1187,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1216,
									"end": 1222,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1197,
									"end": 1215,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1197,
									"end": 1223,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1251,
									"end": 1252,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1236,
									"end": 1241,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1248,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1252,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1297,
									"end": 1303,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1310,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551638"
								},
								{
									"begin": 1268,
									"end": 1296,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1311,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1233,
									"end": 1322,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1328,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 638,
									"end": 2854,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 638,
									"end": 2854,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2492,
									"end": 2852,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 2492,
									"end": 2852,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2592,
									"end": 2609,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551639"
								},
								{
									"begin": 2573,
									"end": 2591,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2573,
									"end": 2610,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH data",
									"source": 3,
									"value": "A962AFC8125C78A56CAF50B104C38B8318717478C281B4E59E7FB3E32AF3A877"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2565,
									"end": 2669,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2680,
									"end": 2692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1727,
									"end": 1793,
									"name": "PUSH",
									"source": 3,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 2695,
									"end": 2715,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2695,
									"end": 2715,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2680,
									"end": 2715,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2680,
									"end": 2715,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2818,
									"end": 2835,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2812,
									"end": 2816,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2805,
									"end": 2836,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2791,
									"end": 2846,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2791,
									"end": 2846,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2791,
									"end": 2846,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6367,
									"end": 6379,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 6419,
									"end": 6425,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6427,
									"end": 6431,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH data",
									"source": 4,
									"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6418,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 6398,
									"end": 6418,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6398,
									"end": 6418,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 6398,
									"end": 6475,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6391,
									"end": 6475,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6391,
									"end": 6475,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6284,
									"end": 6482,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 786,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 989,
									"end": 1001,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1098,
									"end": 1105,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1086,
									"end": 1106,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1106,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1106,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1124,
									"end": 1128,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 726,
									"end": 1139,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6779,
									"end": 6791,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 6822,
									"end": 6828,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6811,
									"end": 6821,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6811,
									"end": 6821,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6811,
									"end": 6821,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 6811,
									"end": 6829,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH data",
									"source": 4,
									"value": "B94DED0918034CF8F896E19FA3CFDEF1188CD569C577264A3622E49152F88520"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 6803,
									"end": 6872,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6943,
									"end": 6955,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6957,
									"end": 6980,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6984,
									"end": 6990,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7003,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6984,
									"end": 7003,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7004,
									"end": 7008,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 36,
									"end": 189,
									"name": "tag",
									"source": -1,
									"value": "29"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 66,
									"end": 68,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 61,
									"end": 64,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 58,
									"end": 69,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 36,
									"end": 189,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "31"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 185,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 176,
									"end": 186,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 171,
									"end": 174,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 164,
									"end": 187,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 98,
									"end": 100,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 93,
									"end": 96,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 82,
									"end": 101,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 82,
									"end": 101,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 125,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 114,
									"end": 126,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 107,
									"end": 126,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 107,
									"end": 126,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 148,
									"end": 150,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 143,
									"end": 146,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 132,
									"end": 151,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 132,
									"end": 151,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 36,
									"end": 189,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "29"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 36,
									"end": 189,
									"name": "tag",
									"source": -1,
									"value": "31"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 274,
									"end": 275,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 267,
									"end": 270,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 263,
									"end": 265,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 259,
									"end": 271,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 254,
									"end": 257,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": 250,
									"end": 272,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": 246,
									"end": 276,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 315,
									"end": 319,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 311,
									"end": 320,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 305,
									"end": 308,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 299,
									"end": 309,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 295,
									"end": 321,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 356,
									"end": 360,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 350,
									"end": 353,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 344,
									"end": 354,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 340,
									"end": 361,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 389,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 380,
									"end": 387,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 377,
									"end": 397,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 372,
									"end": 375,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 365,
									"end": 398,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3,
									"end": 402,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3,
									"end": 402,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3,
									"end": 402,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "GAS",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "DELEGATECALL",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6984,
									"end": 7009,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 12,
									"end": 13,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 19,
									"end": 20,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 14,
									"end": 41,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 14,
									"end": 41,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 14,
									"end": 41,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "34"
								},
								{
									"begin": 14,
									"end": 41,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 67,
									"end": 71,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 72,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 56,
									"end": 72,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 56,
									"end": 72,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 134,
									"end": 138,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": 130,
									"end": 139,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "3F"
								},
								{
									"begin": 105,
									"end": 121,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 101,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 97,
									"end": 140,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 94,
									"end": 95,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 141,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 88,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 77,
									"end": 142,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 157,
									"end": 173,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 154,
									"end": 155,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 147,
									"end": 174,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 211,
									"end": 227,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 208,
									"end": 209,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 205,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 198,
									"end": 199,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 194,
									"end": 206,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 179,
									"end": 228,
									"name": "RETURNDATACOPY",
									"source": -1
								},
								{
									"begin": 5,
									"end": 233,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "33"
								},
								{
									"begin": 5,
									"end": 233,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 41,
									"name": "tag",
									"source": -1,
									"value": "34"
								},
								{
									"begin": 14,
									"end": 41,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 32,
									"end": 36,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 27,
									"end": 36,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 36,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5,
									"end": 233,
									"name": "tag",
									"source": -1,
									"value": "33"
								},
								{
									"begin": 5,
									"end": 233,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 5,
									"end": 233,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6942,
									"end": 7009,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6942,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6942,
									"end": 7009,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6942,
									"end": 7009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 7044,
									"end": 7051,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7053,
									"end": 7063,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7065,
									"end": 7077,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 7026,
									"end": 7043,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 7026,
									"end": 7043,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7026,
									"end": 7043,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 7026,
									"end": 7078,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7019,
									"end": 7078,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7019,
									"end": 7078,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7019,
									"end": 7078,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7019,
									"end": 7078,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 7085,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7206,
									"end": 7218,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 7234,
									"end": 7241,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7264,
									"end": 7274,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 7257,
									"end": 7274,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 7230,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7395,
									"end": 7396,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7375,
									"end": 7385,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7375,
									"end": 7392,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7375,
									"end": 7396,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7371,
									"end": 7800,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7371,
									"end": 7800,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7371,
									"end": 7800,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7633,
									"end": 7643,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7627,
									"end": 7644,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7693,
									"end": 7708,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7680,
									"end": 7690,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7676,
									"end": 7678,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7672,
									"end": 7691,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7665,
									"end": 7709,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7582,
									"end": 7727,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7582,
									"end": 7727,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7772,
									"end": 7784,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "42"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "44"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "42"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "44"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7785,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7816,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 638,
									"end": 2854,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 638,
									"end": 2854,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 638,
									"end": 2854,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 2854,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 638,
									"end": 2854,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 2854,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 2854,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 638,
									"end": 2854,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 2854,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c71c8a29a53ddc5e6591789b5aa97134987062e910c2fe263f9026347554400864736f6c63430006030033",
									".code": [
										{
											"begin": 638,
											"end": 2854,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 638,
											"end": 2854,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 2854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 638,
											"end": 2854,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 638,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 638,
											"end": 2854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 2854,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 638,
											"end": 2854,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 638,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 2854,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2265,
											"end": 2375,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2265,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2313,
											"end": 2330,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2313,
											"end": 2330,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2313,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2350,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2340,
											"end": 2368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2340,
											"end": 2368,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2340,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2375,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3142,
											"end": 3193,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3142,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3193,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1872,
											"end": 2122,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1872,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 1951,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1793,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1978,
											"end": 1998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1998,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2106,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2116,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 891,
											"end": 1786,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 891,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1299,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1300,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1494,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1501,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1591,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1570,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1592,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1767,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1768,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1680,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1715,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1716,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6379,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6419,
											"end": 6425,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6427,
											"end": 6431,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH data",
											"source": 4,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 6475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 6475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6482,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6791,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 6822,
											"end": 6828,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6811,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH data",
											"source": 4,
											"value": "B94DED0918034CF8F896E19FA3CFDEF1188CD569C577264A3622E49152F88520"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 6803,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6943,
											"end": 6955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6957,
											"end": 6980,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6984,
											"end": 6990,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7003,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6984,
											"end": 7003,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7004,
											"end": 7008,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "33"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "33"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6942,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6942,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6942,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6942,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 7044,
											"end": 7051,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7053,
											"end": 7063,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7065,
											"end": 7077,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 7026,
											"end": 7078,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7026,
											"end": 7078,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 7026,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7078,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7019,
											"end": 7078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 7085,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7385,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
										"B94DED0918034CF8F896E19FA3CFDEF1188CD569C577264A3622E49152F88520": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374"
									}
								},
								"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
								"A962AFC8125C78A56CAF50B104C38B8318717478C281B4E59E7FB3E32AF3A877": "5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
								"B94DED0918034CF8F896E19FA3CFDEF1188CD569C577264A3622E49152F88520": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374"
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy. * Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see {TransparentUpgradeableProxy}.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`.     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":\"UpgradeableProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x0414d54056b3d8f9102ae1142264e9361408397878148203ab7a25cbf6248f08\",\"urls\":[\"bzz-raw://ebdc01639f69030c754dc3462d5f437c4644164465066187e320f524579fbede\",\"dweb:/ipfs/QmZZhoPYagwu4MoJMAg26Y6Nfj4d9HJzUnvrMNsbo9ZorM\"]},\"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol\":{\"keccak256\":\"0x81af1059a5bd5fb25cb0351499e1d4110416f5b0000ffad6427cbf6088b193a4\",\"urls\":[\"bzz-raw://621f2fedaeeacf70ff1554748f63356555f591cdcf29c74e3d23a83720a078a2\",\"dweb:/ipfs/QmYGnscyZgJGYgXKcoYhNX2M6uoJiHS1zTsQnu5NsJxPGG\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220763d945e2c3898ce027a320e0cc6e9063e333de85024d370761d4082e60f1a7964736f6c63430006030033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220763d945e2c3898ce027a320e0cc6e9063e333de85024d370761d4082e60f1a7964736f6c63430006030033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x3D945E2C3898CE027A320E0CC6E9063E333DE85024D370 PUSH23 0x1D4082E60F1A7964736F6C634300060300330000000000 ",
							"sourceMap": "134:7684:4:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220763d945e2c3898ce027a320e0cc6e9063e333de85024d370761d4082e60f1a7964736f6c63430006030033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x3D945E2C3898CE027A320E0CC6E9063E333DE85024D370 PUSH23 0x1D4082E60F1A7964736F6C634300060300330000000000 ",
							"sourceMap": "134:7684:4:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220763d945e2c3898ce027a320e0cc6e9063e333de85024d370761d4082e60f1a7964736f6c63430006030033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol": {
				"ast": {
					"absolutePath": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol",
					"exportedSymbols": {
						"BEP20UpgradeableProxy": [
							20
						]
					},
					"id": 21,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol",
							"file": "openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 21,
							"sourceUnit": 277,
							"src": "25:79:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "TransparentUpgradeableProxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 276,
										"src": "140:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$276",
											"typeString": "contract TransparentUpgradeableProxy"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "140:27:0"
								}
							],
							"contractDependencies": [
								72,
								276,
								382
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20,
								276,
								382,
								72
							],
							"name": "BEP20UpgradeableProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "291:8:0",
										"statements": []
									},
									"documentation": null,
									"id": 19,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 13,
													"name": "logic",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "264:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"argumentTypes": null,
													"id": 14,
													"name": "admin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "271:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"argumentTypes": null,
													"id": 15,
													"name": "data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "278:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												}
											],
											"id": 16,
											"modifierName": {
												"argumentTypes": null,
												"id": 12,
												"name": "TransparentUpgradeableProxy",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 276,
												"src": "236:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_TransparentUpgradeableProxy_$276_$",
													"typeString": "type(contract TransparentUpgradeableProxy)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "236:47:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"name": "logic",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "187:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"name": "admin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "202:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "217:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 9,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "217:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "186:49:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "291:0:0"
									},
									"scope": 20,
									"src": "175:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 21,
							"src": "106:196:0"
						}
					],
					"src": "0:302:0"
				},
				"id": 0
			},
			"openzeppelin-solidity/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							72
						]
					},
					"id": 73,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 22,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "66:598:1",
								"text": "@dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\ninstruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\nbe specified by overriding the virtual {_implementation} function.\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\ndifferent contract through the {_delegate} function.\n * The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 72,
							"linearizedBaseContracts": [
								72
							],
							"name": "Proxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "951:835:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1026:754:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1279:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1285:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1285:14:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1266:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1266:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1427:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1454:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1454:5:1"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "1461:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1477:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1480:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1480:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1496:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1499:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1441:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1441:60:1"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1431:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1569:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1572:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1575:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1575:16:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1554:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1554:38:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1687:31:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1696:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1699:14:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1699:16:1"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1689:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1689:27:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1689:27:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1680:38:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1685:1:1",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1739:31:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1748:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1751:14:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1751:16:1"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1741:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1741:27:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1741:27:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1731:39:1",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1613:6:1"
															},
															"nodeType": "YulSwitch",
															"src": "1606:164:1"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 26,
														"isOffset": false,
														"isSlot": false,
														"src": "1461:14:1",
														"valueSize": 1
													}
												],
												"id": 29,
												"nodeType": "InlineAssembly",
												"src": "1017:763:1"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "695:191:1",
										"text": "@dev Delegates the current call to `implementation`.\n     * This function does not return to its internall call site, it will return directly to the external caller."
									},
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "910:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "909:24:1"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:0:1"
									},
									"scope": 72,
									"src": "891:895:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": null,
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1792:172:1",
										"text": "@dev This is a virtual function that should be overriden so it returns the address to which the fallback function\nand {_fallback} should delegate."
									},
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:2:1"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 37,
												"src": "2027:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2026:9:1"
									},
									"scope": 72,
									"src": "1969:67:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2303:72:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 41,
														"name": "_beforeFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "2313:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2313:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "2313:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 45,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "2350:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2350:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 44,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "2340:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2340:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "2340:28:1"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "2042:218:1",
										"text": "@dev Delegates the current call to the address returned by `_implementation()`.\n     * This function does not return to its internall call site, it will return directly to the external caller."
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2283:2:1"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:0:1"
									},
									"scope": 72,
									"src": "2265:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "2609:28:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 54,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2619:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2619:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "2619:11:1"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2381:186:1",
										"text": "@dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\nfunction in the contract matches the call data."
									},
									"id": 58,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2581:2:1"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2609:0:1"
									},
									"scope": 72,
									"src": "2572:65:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "2833:28:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 62,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2843:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2843:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "2843:11:1"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2643:149:1",
										"text": "@dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\nis empty."
									},
									"id": 66,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2805:2:1"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2833:0:1"
									},
									"scope": 72,
									"src": "2797:64:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "3186:7:1",
										"statements": []
									},
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2867:270:1",
										"text": "@dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\ncall, or as part of the Solidity `fallback` or `receive` functions.\n     * If overriden should call `super._beforeFallback()`."
									},
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3166:2:1"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3186:0:1"
									},
									"scope": 72,
									"src": "3142:51:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 73,
							"src": "665:2530:1"
						}
					],
					"src": "33:3163:1"
				},
				"id": 1
			},
			"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol",
					"exportedSymbols": {
						"TransparentUpgradeableProxy": [
							276
						]
					},
					"id": 277,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 74,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol",
							"file": "./UpgradeableProxy.sol",
							"id": 75,
							"nodeType": "ImportDirective",
							"scope": 277,
							"sourceUnit": 383,
							"src": "66:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 77,
										"name": "UpgradeableProxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 382,
										"src": "1592:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UpgradeableProxy_$382",
											"typeString": "contract UpgradeableProxy"
										}
									},
									"id": 78,
									"nodeType": "InheritanceSpecifier",
									"src": "1592:16:2"
								}
							],
							"contractDependencies": [
								72,
								382
							],
							"contractKind": "contract",
							"documentation": {
								"id": 76,
								"nodeType": "StructuredDocumentation",
								"src": "100:1451:2",
								"text": "@dev This contract implements a proxy that is upgradeable by an admin.\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\nclashing], which can potentially be used in an attack, this contract uses the\nhttps://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\nthings that go hand in hand:\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\nthat call matches one of the admin functions exposed by the proxy itself.\n2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\nimplementation. If the admin tries to call a function on the implementation it will fail with an error that says\n\"admin cannot fallback to proxy target\".\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\nthe admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\nto sudden errors when trying to call a function from the proxy implementation.\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\nyou should think of the `ProxyAdmin` instance as the real administrative interface of your proxy."
							},
							"fullyImplemented": true,
							"id": 276,
							"linearizedBaseContracts": [
								276,
								382,
								72
							],
							"name": "TransparentUpgradeableProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1945:121:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 93,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "1962:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "656970313936372e70726f78792e61646d696e",
																							"id": 99,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2003:21:2",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
																								"typeString": "literal_string \"eip1967.proxy.admin\""
																							},
																							"value": "eip1967.proxy.admin"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
																								"typeString": "literal_string \"eip1967.proxy.admin\""
																							}
																						],
																						"id": 98,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -8,
																						"src": "1993:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1993:32:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 97,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1985:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 96,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1985:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1985:41:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2029:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1985:45:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 95,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1977:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 94,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1977:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1977:54:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1962:69:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 92,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1955:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1955:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1955:77:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 109,
															"name": "admin_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2052:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 108,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "2042:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2042:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "2042:17:2"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "1615:214:2",
										"text": "@dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\noptionally initialized with `_data` as explained in {UpgradeableProxy-constructor}."
									},
									"id": 113,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 88,
													"name": "_logic",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 81,
													"src": "1930:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"argumentTypes": null,
													"id": 89,
													"name": "_data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 85,
													"src": "1938:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												}
											],
											"id": 90,
											"modifierName": {
												"argumentTypes": null,
												"id": 87,
												"name": "UpgradeableProxy",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 382,
												"src": "1913:16:2",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_UpgradeableProxy_$382_$",
													"typeString": "type(contract UpgradeableProxy)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1913:31:2"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"name": "_logic",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "1846:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"name": "admin_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "1862:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "1878:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 84,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1878:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1845:52:2"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 276,
									"src": "1834:232:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "2072:67:2",
										"text": "@dev Emitted when the admin account has changed."
									},
									"id": 120,
									"name": "AdminChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"indexed": false,
												"name": "previousAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 120,
												"src": "2163:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2163:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"indexed": false,
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 120,
												"src": "2186:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2162:41:2"
									},
									"src": "2144:60:2"
								},
								{
									"constant": true,
									"id": 123,
									"name": "_ADMIN_SLOT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 276,
									"src": "2404:105:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 121,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2404:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 122,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2443:66:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "2670:112:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 126,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "2684:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2684:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 128,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2698:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2698:8:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2684:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 136,
													"nodeType": "Block",
													"src": "2740:36:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 133,
																	"name": "_fallback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "2754:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2754:11:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 135,
															"nodeType": "ExpressionStatement",
															"src": "2754:11:2"
														}
													]
												},
												"id": 137,
												"nodeType": "IfStatement",
												"src": "2680:96:2",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "2708:26:2",
													"statements": [
														{
															"id": 131,
															"nodeType": "PlaceholderStatement",
															"src": "2722:1:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "2516:130:2",
										"text": "@dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin."
									},
									"id": 139,
									"name": "ifAdmin",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:2:2"
									},
									"src": "2651:131:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3283:34:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 147,
														"name": "admin_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "3293:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 148,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "3302:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3302:8:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3293:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "3293:17:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "2788:431:2",
										"text": "@dev Returns the current admin.\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\nhttps://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n`0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"functionSelector": "f851a440",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 143,
											"modifierName": {
												"argumentTypes": null,
												"id": 142,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 139,
												"src": "3250:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3250:7:2"
										}
									],
									"name": "admin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3238:2:2"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "admin_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "3267:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3267:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3266:16:2"
									},
									"scope": 276,
									"src": "3224:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "3854:52:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 161,
														"name": "implementation_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3864:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 162,
															"name": "_implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																346
															],
															"referencedDeclaration": 346,
															"src": "3882:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3882:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3864:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "3864:35:2"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "3323:449:2",
										"text": "@dev Returns the current implementation.\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\nhttps://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n`0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
									},
									"functionSelector": "5c60da1b",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 157,
											"modifierName": {
												"argumentTypes": null,
												"id": 156,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 139,
												"src": "3812:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3812:7:2"
										}
									],
									"name": "implementation",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3800:2:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"name": "implementation_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 167,
												"src": "3829:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3828:25:2"
									},
									"scope": 276,
									"src": "3777:129:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "4175:186:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 176,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "4193:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4213:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4205:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 177,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4205:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4205:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4193:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4217:60:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b8c7de7d8992cce1e1093ee65cc3fbbb636cdcec8111cd0ef596adac25e6858",
																"typeString": "literal_string \"TransparentUpgradeableProxy: new admin is the zero address\""
															},
															"value": "TransparentUpgradeableProxy: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b8c7de7d8992cce1e1093ee65cc3fbbb636cdcec8111cd0ef596adac25e6858",
																"typeString": "literal_string \"TransparentUpgradeableProxy: new admin is the zero address\""
															}
														],
														"id": 175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4185:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4185:93:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "4185:93:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 186,
																"name": "_admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "4306:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4306:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 188,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "4316:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 185,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "4293:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4293:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "4288:37:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 192,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "4345:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 191,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "4335:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4335:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "4335:19:2"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "3912:194:2",
										"text": "@dev Changes the admin of the proxy.\n     * Emits an {AdminChanged} event.\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
									},
									"functionSelector": "8f283970",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 173,
											"modifierName": {
												"argumentTypes": null,
												"id": 172,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 139,
												"src": "4167:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4167:7:2"
										}
									],
									"name": "changeAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 196,
												"src": "4132:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4132:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4131:18:2"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4175:0:2"
									},
									"scope": 276,
									"src": "4111:250:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "4592:46:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 205,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "4613:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 204,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "4602:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4602:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "4602:29:2"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "4367:149:2",
										"text": "@dev Upgrade the implementation of the proxy.\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
									},
									"functionSelector": "3659cfe6",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 202,
											"modifierName": {
												"argumentTypes": null,
												"id": 201,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 139,
												"src": "4584:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4584:7:2"
										}
									],
									"name": "upgradeTo",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "4540:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4540:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4539:27:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4592:0:2"
									},
									"scope": 276,
									"src": "4521:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "5121:109:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 220,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "5142:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 219,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "5131:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5131:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "5131:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 226,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "5199:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 227,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "5218:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 223,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "5170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$678_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionDelegateCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 612,
														"src": "5170:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5170:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "5170:53:2"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "4644:365:2",
										"text": "@dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\nby `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\nproxied contract.\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
									},
									"functionSelector": "4f1ef286",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 217,
											"modifierName": {
												"argumentTypes": null,
												"id": 216,
												"name": "ifAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 139,
												"src": "5113:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5113:7:2"
										}
									],
									"name": "upgradeToAndCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "5040:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5040:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "5067:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5067:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5039:48:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5121:0:2"
									},
									"scope": 276,
									"src": "5014:216:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "5353:159:2",
										"statements": [
											{
												"assignments": [
													238
												],
												"declarations": [
													{
														"constant": false,
														"id": 238,
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 242,
														"src": "5363:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 237,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5363:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"argumentTypes": null,
													"id": 239,
													"name": "_ADMIN_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "5378:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5363:26:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5464:42:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5478:18:2",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5491:4:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "5485:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:11:2"
															},
															"variableNames": [
																{
																	"name": "adm",
																	"nodeType": "YulIdentifier",
																	"src": "5478:3:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 235,
														"isOffset": false,
														"isSlot": false,
														"src": "5478:3:2",
														"valueSize": 1
													},
													{
														"declaration": 238,
														"isOffset": false,
														"isSlot": false,
														"src": "5491:4:2",
														"valueSize": 1
													}
												],
												"id": 241,
												"nodeType": "InlineAssembly",
												"src": "5455:51:2"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "5236:50:2",
										"text": "@dev Returns the current admin."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_admin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5306:2:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"name": "adm",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 243,
												"src": "5340:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5339:13:2"
									},
									"scope": 276,
									"src": "5291:221:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "5639:164:2",
										"statements": [
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 254,
														"src": "5649:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 249,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5649:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 252,
												"initialValue": {
													"argumentTypes": null,
													"id": 251,
													"name": "_ADMIN_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "5664:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5649:26:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5751:46:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5772:4:2"
																	},
																	{
																		"name": "newAdmin",
																		"nodeType": "YulIdentifier",
																		"src": "5778:8:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5765:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5765:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5765:22:2"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 246,
														"isOffset": false,
														"isSlot": false,
														"src": "5778:8:2",
														"valueSize": 1
													},
													{
														"declaration": 250,
														"isOffset": false,
														"isSlot": false,
														"src": "5772:4:2",
														"valueSize": 1
													}
												],
												"id": 253,
												"nodeType": "InlineAssembly",
												"src": "5742:55:2"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "5518:71:2",
										"text": "@dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 255,
												"src": "5613:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5612:18:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5639:0:2"
									},
									"scope": 276,
									"src": "5594:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										71
									],
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "5977:151:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 261,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "5995:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5995:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 263,
																	"name": "_admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "6009:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6009:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5995:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6019:68:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
																"typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
															},
															"value": "TransparentUpgradeableProxy: admin cannot fallback to proxy target"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
																"typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
															}
														],
														"id": 260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5987:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5987:101:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "5987:101:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 269,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "6098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_TransparentUpgradeableProxy_$276",
																"typeString": "contract super TransparentUpgradeableProxy"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 71,
														"src": "6098:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6098:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "6098:23:2"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "5809:110:2",
										"text": "@dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 258,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5968:8:2"
									},
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5948:2:2"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5977:0:2"
									},
									"scope": 276,
									"src": "5924:204:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 277,
							"src": "1552:4578:2"
						}
					],
					"src": "33:6098:2"
				},
				"id": 2
			},
			"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol",
					"exportedSymbols": {
						"UpgradeableProxy": [
							382
						]
					},
					"id": 383,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 278,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/proxy/Proxy.sol",
							"file": "./Proxy.sol",
							"id": 279,
							"nodeType": "ImportDirective",
							"scope": 383,
							"sourceUnit": 73,
							"src": "66:21:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/utils/Address.sol",
							"file": "../utils/Address.sol",
							"id": 280,
							"nodeType": "ImportDirective",
							"scope": 383,
							"sourceUnit": 679,
							"src": "88:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 282,
										"name": "Proxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 72,
										"src": "667:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Proxy_$72",
											"typeString": "contract Proxy"
										}
									},
									"id": 283,
									"nodeType": "InheritanceSpecifier",
									"src": "667:5:3"
								}
							],
							"contractDependencies": [
								72
							],
							"contractKind": "contract",
							"documentation": {
								"id": 281,
								"nodeType": "StructuredDocumentation",
								"src": "120:517:3",
								"text": "@dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\nimplementation address that can be changed. This address is stored in storage in the location specified by\nhttps://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\nimplementation behind the proxy.\n * Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\n{TransparentUpgradeableProxy}."
							},
							"fullyImplemented": true,
							"id": 382,
							"linearizedBaseContracts": [
								382,
								72
							],
							"name": "UpgradeableProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "1082:246:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 292,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "1099:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
																							"id": 298,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1149:30:3",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							},
																							"value": "eip1967.proxy.implementation"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							}
																						],
																						"id": 297,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -8,
																						"src": "1139:9:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 299,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1139:41:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1131:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 295,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1131:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1131:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1184:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1131:54:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1123:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 293,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1123:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1123:63:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1099:87:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 291,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1092:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1092:95:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "1092:95:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 308,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "1216:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 307,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "1197:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1197:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "1197:26:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 311,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "1236:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1236:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1251:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1236:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 323,
												"nodeType": "IfStatement",
												"src": "1233:89:3",
												"trueBody": {
													"id": 322,
													"nodeType": "Block",
													"src": "1254:68:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 318,
																		"name": "_logic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "1297:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 319,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "1305:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 315,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "1268:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$678_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 612,
																	"src": "1268:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1268:43:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 321,
															"nodeType": "ExpressionStatement",
															"src": "1268:43:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "679:335:3",
										"text": "@dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\nfunction call, and allows initializating the storage of the proxy like a Solidity constructor."
									},
									"id": 325,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"name": "_logic",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "1031:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "1047:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1047:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1030:36:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:0:3"
									},
									"scope": 382,
									"src": "1019:309:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "1334:68:3",
										"text": "@dev Emitted when the implementation is upgraded."
									},
									"id": 330,
									"name": "Upgraded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"indexed": true,
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "1422:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1422:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1421:32:3"
									},
									"src": "1407:47:3"
								},
								{
									"constant": true,
									"id": 333,
									"name": "_IMPLEMENTATION_SLOT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 382,
									"src": "1679:114:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 331,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1679:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 332,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1727:66:3",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										37
									],
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "1953:169:3",
										"statements": [
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 345,
														"src": "1963:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 340,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1963:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"argumentTypes": null,
													"id": 342,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 333,
													"src": "1978:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1963:35:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2073:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2087:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2101:4:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "2095:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2095:11:3"
															},
															"variableNames": [
																{
																	"name": "impl",
																	"nodeType": "YulIdentifier",
																	"src": "2087:4:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 338,
														"isOffset": false,
														"isSlot": false,
														"src": "2087:4:3",
														"valueSize": 1
													},
													{
														"declaration": 341,
														"isOffset": false,
														"isSlot": false,
														"src": "2101:4:3",
														"valueSize": 1
													}
												],
												"id": 344,
												"nodeType": "InlineAssembly",
												"src": "2064:52:3"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "1800:67:3",
										"text": "@dev Returns the current implementation address."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 336,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1921:8:3"
									},
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1896:2:3"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"name": "impl",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "1939:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1938:14:3"
									},
									"scope": 382,
									"src": "1872:250:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2305:96:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 353,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "2334:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 352,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "2315:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2315:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "2315:37:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 357,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "2376:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 356,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2367:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2367:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "2362:32:3"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "2128:108:3",
										"text": "@dev Upgrades the proxy to a new implementation.\n     * Emits an {Upgraded} event."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 361,
												"src": "2261:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2260:27:3"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2305:0:3"
									},
									"scope": 382,
									"src": "2241:160:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "2555:297:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 370,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "2592:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 368,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "2573:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$678_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 402,
																"src": "2573:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:37:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2612:56:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877",
																"typeString": "literal_string \"UpgradeableProxy: new implementation is not a contract\""
															},
															"value": "UpgradeableProxy: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a962afc8125c78a56caf50b104c38b8318717478c281b4e59e7fb3e32af3a877",
																"typeString": "literal_string \"UpgradeableProxy: new implementation is not a contract\""
															}
														],
														"id": 367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2565:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2565:104:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "2565:104:3"
											},
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 380,
														"src": "2680:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 375,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2680:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 378,
												"initialValue": {
													"argumentTypes": null,
													"id": 377,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 333,
													"src": "2695:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2680:35:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2791:55:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2812:4:3"
																	},
																	{
																		"name": "newImplementation",
																		"nodeType": "YulIdentifier",
																		"src": "2818:17:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2805:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2805:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2805:31:3"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 364,
														"isOffset": false,
														"isSlot": false,
														"src": "2818:17:3",
														"valueSize": 1
													},
													{
														"declaration": 376,
														"isOffset": false,
														"isSlot": false,
														"src": "2812:4:3",
														"valueSize": 1
													}
												],
												"id": 379,
												"nodeType": "InlineAssembly",
												"src": "2782:64:3"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2407:80:3",
										"text": "@dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "2520:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2519:27:3"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2555:0:3"
									},
									"scope": 382,
									"src": "2492:360:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 383,
							"src": "638:2216:3"
						}
					],
					"src": "33:2822:3"
				},
				"id": 3
			},
			"openzeppelin-solidity/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							678
						]
					},
					"id": 679,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 384,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 385,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:4",
								"text": "@dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 678,
							"linearizedBaseContracts": [
								678
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "792:347:4",
										"statements": [
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 401,
														"src": "989:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 388,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:4",
														"valueSize": 1
													},
													{
														"declaration": 394,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:4",
														"valueSize": 1
													}
												],
												"id": 396,
												"nodeType": "InlineAssembly",
												"src": "1067:41:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 397,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "1124:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 392,
												"id": 400,
												"nodeType": "Return",
												"src": "1117:15:4"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:4",
										"text": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following\ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n===="
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 402,
												"src": "746:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:17:4"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 402,
												"src": "786:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:6:4"
									},
									"scope": 678,
									"src": "726:413:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "2127:320:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 413,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$678",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$678",
																				"typeString": "library Address"
																			}
																		],
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 411,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 416,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "2170:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:4"
											},
											{
												"assignments": [
													422,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 435,
														"src": "2299:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 421,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 429,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 423,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "2317:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2317:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 425,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "2340:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 431,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "2370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:4"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:4",
										"text": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 436,
												"src": "2075:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 436,
												"src": "2102:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2074:43:4"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:4"
									},
									"scope": 678,
									"src": "2056:391:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "3277:82:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 447,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "3305:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 448,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "3313:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 446,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															453,
															473
														],
														"referencedDeclaration": 473,
														"src": "3292:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 445,
												"id": 451,
												"nodeType": "Return",
												"src": "3285:67:4"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:4",
										"text": "@dev Performs a Solidity function call using a low level `call`. A\nplain`call` is an unsafe replacement for a function call: use this\nfunction instead.\n     * If `target` reverts with a revert reason, it is bubbled up by this\nfunction (like regular Solidity function calls).\n     * Returns the raw returned data. To convert to the expected return value,\nuse https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     * Requirements:\n     * - `target` must be a contract.\n- calling `target` with `data` must not revert.\n     * _Available since v3.1._"
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 453,
												"src": "3210:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 453,
												"src": "3226:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 440,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3209:35:4"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 453,
												"src": "3263:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 443,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3262:14:4"
									},
									"scope": 678,
									"src": "3188:171:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3698:76:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 466,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "3737:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 467,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3745:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 469,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "3754:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 465,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															493,
															543
														],
														"referencedDeclaration": 543,
														"src": "3715:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 464,
												"id": 471,
												"nodeType": "Return",
												"src": "3708:59:4"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:4",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n`errorMessage` as a fallback revert reason when `target` reverts.\n     * _Available since v3.1._"
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "3603:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "3619:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 457,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "3638:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:63:4"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "3684:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3683:14:4"
									},
									"scope": 678,
									"src": "3581:193:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "4249:111:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 486,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "4288:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 487,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4296:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 488,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "4302:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 485,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															493,
															543
														],
														"referencedDeclaration": 543,
														"src": "4266:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 484,
												"id": 491,
												"nodeType": "Return",
												"src": "4259:94:4"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:4",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\nbut also transferring `value` wei to `target`.\n     * Requirements:\n     * - the calling contract must have an ETH balance of at least `value`.\n- the called Solidity function must be `payable`.\n     * _Available since v3.1._"
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "4167:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "4183:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 477,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "4202:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4166:50:4"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "4235:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4234:14:4"
									},
									"scope": 678,
									"src": "4136:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "4749:382:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 510,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$678",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$678",
																				"typeString": "library Address"
																			}
																		],
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 508,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4767:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 513,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "4792:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 520,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "4869:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 519,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4858:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:4"
											},
											{
												"assignments": [
													526,
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 526,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 542,
														"src": "4981:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 525,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 528,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 542,
														"src": "4995:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 533,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "5050:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 529,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "5022:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5022:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 531,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "5042:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 537,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "5090:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 538,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "5099:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 539,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "5111:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 536,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "5072:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 506,
												"id": 541,
												"nodeType": "Return",
												"src": "5065:59:4"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:4",
										"text": "@dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\nwith `errorMessage` as a fallback revert reason when `target` reverts.\n     * _Available since v3.1._"
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 543,
												"src": "4639:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 543,
												"src": "4655:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 497,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 543,
												"src": "4674:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 543,
												"src": "4689:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 501,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4638:78:4"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 543,
												"src": "4735:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4734:14:4"
									},
									"scope": 678,
									"src": "4608:523:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "5408:97:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 554,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "5444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 555,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "5452:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 553,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															560,
															595
														],
														"referencedDeclaration": 595,
														"src": "5425:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 552,
												"id": 558,
												"nodeType": "Return",
												"src": "5418:80:4"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:4",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\nbut performing a static call.\n     * _Available since v3.3._"
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "5336:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "5352:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5335:35:4"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "5394:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5393:14:4"
									},
									"scope": 678,
									"src": "5308:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "5817:288:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 574,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "5846:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 573,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "5835:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:4"
											},
											{
												"assignments": [
													580,
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 580,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 594,
														"src": "5965:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 579,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 582,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 594,
														"src": "5979:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 581,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 585,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "6024:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 583,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "6006:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6006:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 589,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "6064:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 590,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "6073:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 591,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "6085:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 588,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "6046:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 571,
												"id": 593,
												"nodeType": "Return",
												"src": "6039:59:4"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:4",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\nbut performing a static call.\n     * _Available since v3.3._"
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "5717:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "5733:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "5752:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 566,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5716:63:4"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "5803:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5802:14:4"
									},
									"scope": 678,
									"src": "5689:416:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "6381:101:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 606,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "6419:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 607,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "6427:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 605,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															612,
															647
														],
														"referencedDeclaration": 647,
														"src": "6398:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 604,
												"id": 610,
												"nodeType": "Return",
												"src": "6391:84:4"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:4",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\nbut performing a delegate call.\n     * _Available since v3.4._"
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 612,
												"src": "6314:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 612,
												"src": "6330:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 599,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6313:35:4"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 612,
												"src": "6367:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 602,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6366:14:4"
									},
									"scope": 678,
									"src": "6284:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "6793:292:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 626,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "6822:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 625,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "6811:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6803:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:4"
											},
											{
												"assignments": [
													632,
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 646,
														"src": "6943:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 631,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 634,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 646,
														"src": "6957:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 633,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 639,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 637,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "7004:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 635,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "6984:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6984:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 641,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "7044:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 642,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "7053:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 643,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "7065:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 640,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "7026:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 623,
												"id": 645,
												"nodeType": "Return",
												"src": "7019:59:4"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:4",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\nbut performing a delegate call.\n     * _Available since v3.4._"
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 647,
												"src": "6698:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 647,
												"src": "6714:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 647,
												"src": "6733:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 618,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6697:63:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 647,
												"src": "6779:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6778:14:4"
									},
									"scope": 678,
									"src": "6668:417:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "7220:596:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 658,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 649,
													"src": "7234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 674,
													"nodeType": "Block",
													"src": "7291:519:4",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 662,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "7375:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7375:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 672,
																"nodeType": "Block",
																"src": "7747:53:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 669,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 653,
																					"src": "7772:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 668,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7765:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 671,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:4"
																	}
																]
															},
															"id": 673,
															"nodeType": "IfStatement",
															"src": "7371:429:4",
															"trueBody": {
																"id": 667,
																"nodeType": "Block",
																"src": "7398:343:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 651,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 651,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 666,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 675,
												"nodeType": "IfStatement",
												"src": "7230:580:4",
												"trueBody": {
													"id": 661,
													"nodeType": "Block",
													"src": "7243:42:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 659,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "7264:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 657,
															"id": 660,
															"nodeType": "Return",
															"src": "7257:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 677,
												"src": "7118:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 677,
												"src": "7132:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 677,
												"src": "7157:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7117:67:4"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 677,
												"src": "7206:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7205:14:4"
									},
									"scope": 678,
									"src": "7091:725:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 679,
							"src": "134:7684:4"
						}
					],
					"src": "33:7786:4"
				},
				"id": 4
			}
		}
	}
}