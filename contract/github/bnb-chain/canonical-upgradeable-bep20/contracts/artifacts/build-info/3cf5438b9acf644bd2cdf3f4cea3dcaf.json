{
	"id": "3cf5438b9acf644bd2cdf3f4cea3dcaf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.3",
	"solcLongVersion": "0.6.3+commit.8dda9521",
	"input": {
		"language": "Solidity",
		"sources": {
			"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol": {
				"content": "pragma solidity ^0.6.0;\n\nimport \"./IBEP20.sol\";\nimport \"openzeppelin-solidity/contracts/GSN/Context.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/proxy/Initializable.sol\";\n\ncontract BEP20TokenImplementation is Context, IBEP20, Initializable {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n    mapping (address => mapping (address => uint256)) private _allowances;\n    uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    address private _owner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    bool private _mintable;\n    bool private isPaused;\n\n    constructor() public {\n    }\n\n    mapping(address=>bool) isBlacklisted;\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev sets initials supply and the owner\n     */\n    function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {\n        _owner = owner;\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n        _mintable = mintable;\n        _mint(owner, amount);\n    }\n\n    /**\n    * @dev Leaves the contract without owner. It will not be possible to call\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\n    *\n    * NOTE: Renouncing ownership will leave the contract without an owner,\n    * thereby removing any functionality that is only available to the owner.\n    */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n\n    /**\n     * @dev Returns if the token is mintable or not\n     */\n    function mintable() external view returns (bool) {\n        return _mintable;\n    }\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external override view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external override view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external override view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n    * @dev Returns the token name.\n    */\n    function name() external override view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {BEP20-totalSupply}.\n     */\n    function totalSupply() external override view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {BEP20-balanceOf}.\n     */\n    function balanceOf(address account) external override view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {BEP20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-allowance}.\n     */\n    function allowance(address owner, address spender) external override view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {BEP20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) external override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {BEP20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n     * the total supply.\n     *\n     * Requirements\n     *\n     * - `msg.sender` must be the token owner\n     * - `_mintable` must be true\n     */\n    function mint(uint256 amount) public onlyOwner returns (bool) {\n        require(_mintable, \"this token is not mintable\");\n        _mint(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n   * @dev Burn `amount` tokens and decreasing the total supply.\n   */\n    function burn(uint256 amount) public returns (bool) {\n        _burn(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(!isBlacklisted[recipient], \"recipient is backlisted\");\n        require(!isBlacklisted[sender], \"sender is backlisted\");\n        require(!isPaused, \"token operations paused due to security reasons\");\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"BEP20: approve from the zero address\");\n        require(spender != address(0), \"BEP20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\n    }\n\n    function blackList(address _user) public onlyOwner {\n        require(!isBlacklisted[_user], \"user already blacklisted\");\n        isBlacklisted[_user] = true;\n        // emit events as well\n    }\n    \n    function removeFromBlacklist(address _user) public onlyOwner {\n        require(isBlacklisted[_user], \"user already whitelisted\");\n        isBlacklisted[_user] = false;\n        // emit events as well\n    }\n\n    function pause() public onlyOwner {\n        require(!isPaused, \"contract already paused\");\n        isPaused = true;\n        // emit events as well\n    }\n\n    function unpause() public onlyOwner {\n        require(isPaused, \"contract already paused\");\n        isPaused = false;\n        // emit events as well\n    }\n}"
			},
			"openzeppelin-solidity/contracts/proxy/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n// solhint-disable-next-line compiler-version\npragma solidity >=0.4.24 <0.8.0;\n\nimport \"../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n */\nabstract contract Initializable {\n\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n\n    /// @dev Returns true if and only if the function is running in the constructor\n    function _isConstructor() private view returns (bool) {\n        return !Address.isContract(address(this));\n    }\n}\n"
			},
			"openzeppelin-solidity/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"openzeppelin-solidity/contracts/GSN/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n"
			},
			"github/bnb-chain/canonical-upgradeable-bep20/contracts/IBEP20.sol": {
				"content": "pragma solidity ^0.6.0;\n\ninterface IBEP20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n    * @dev Returns the token name.\n    */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address _owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"openzeppelin-solidity/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"openzeppelin-solidity/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol": {
				"BEP20TokenImplementation": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "blackList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "mintable",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "removeFromBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"initialize(string,string,uint8,uint256,bool,address)": {
								"details": "sets initials supply and the owner"
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.     * Requirements     * - `msg.sender` must be the token owner - `_mintable` must be true"
							},
							"mintable()": {
								"details": "Returns if the token is mintable or not"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":233:11262  contract BEP20TokenImplementation is Context, IBEP20, Initializable {... */\n  mstore(0x40, 0x80)\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":759:787  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":759:787  constructor() public {... */\n  pop\n    /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":233:11262  contract BEP20TokenImplementation is Context, IBEP20, Initializable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":233:11262  contract BEP20TokenImplementation is Context, IBEP20, Initializable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":233:11262  contract BEP20TokenImplementation is Context, IBEP20, Initializable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa0712d68\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xef3ebcb8\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x39509351\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4838d165\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4bf365df\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x537df3b6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2945:3037  function name() external override view returns (string memory) {... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_30:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_30)\n    tag_32:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2945:3037  function name() external override view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_33:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4077:4237  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_35:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4077:4237  function approve(address spender, uint256 amount) external override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3096:3196  function totalSupply() external override view returns (uint256) {... */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4694:5005  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x60\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_40:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4694:5005  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2641:2733  function decimals() external override view returns (uint8) {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5399:5606  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_45:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5399:5606  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":11106:11260  function unpause() public onlyOwner {... */\n    tag_9:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6861:6978  function burn(uint256 amount) public returns (bool) {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_50:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6861:6978  function burn(uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10534:10728  function blackList(address _user) public onlyOwner {... */\n    tag_11:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_53:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10534:10728  function blackList(address _user) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2343:2425  function mintable() external view returns (bool) {... */\n    tag_12:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10738:10942  function removeFromBlacklist(address _user) public onlyOwner {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_58:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10738:10942  function removeFromBlacklist(address _user) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3253:3372  function balanceOf(address account) external override view returns (uint256) {... */\n    tag_14:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_61:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3253:3372  function balanceOf(address account) external override view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1751:1888  function renounceOwnership() public onlyOwner {... */\n    tag_15:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10948:11100  function pause() public onlyOwner {... */\n    tag_16:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2488:2579  function getOwner() external override view returns (address) {... */\n    tag_17:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2793:2889  function symbol() external override view returns (string memory) {... */\n    tag_18:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_71:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_71)\n    tag_73:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2793:2889  function symbol() external override view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_74:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6592:6777  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_19:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_76:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6592:6777  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6092:6350  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_20:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_79:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6092:6350  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3574:3740  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_21:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_82:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3574:3740  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3797:3940  function allowance(address owner, address spender) external override view returns (uint256) {... */\n    tag_22:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_85:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3797:3940  function allowance(address owner, address spender) external override view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1103:1415  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n    tag_23:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:18   */\n      0xc0\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:19   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":32:33   */\n      0x00\n        /* \"--CODEGEN--\":29:30   */\n      dup1\n        /* \"--CODEGEN--\":22:34   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_88:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1103:1415  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:25   */\n      dup2\n        /* \"--CODEGEN--\":11:39   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_89\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_89:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1103:1415  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_90:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1103:1415  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_91\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_91:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1103:1415  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1103:1415  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:25   */\n      dup2\n        /* \"--CODEGEN--\":11:39   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_92\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_92:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1103:1415  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_93\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_93:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1103:1415  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_94:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1103:1415  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1103:1415  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_95\n      jump\t// in\n    tag_87:\n      stop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2037:2269  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_24:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_97\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_97:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2037:2269  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2945:3037  function name() external override view returns (string memory) {... */\n    tag_29:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2993:3006  string memory */\n      0x60\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3025:3030  _name */\n      0x04\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3018:3030  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_101\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_100)\n    tag_101:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_102:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_102\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2945:3037  function name() external override view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4077:4237  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_36:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4154:4158  bool */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4170:4209  _approve(_msgSender(), spender, amount) */\n      tag_104\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4179:4191  _msgSender() */\n      tag_105\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4179:4189  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4179:4191  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4193:4200  spender */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4202:4208  amount */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4170:4178  _approve */\n      tag_107\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4170:4209  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_104:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4226:4230  true */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4219:4230  return true */\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4077:4237  function approve(address spender, uint256 amount) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3096:3196  function totalSupply() external override view returns (uint256) {... */\n    tag_38:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3151:3158  uint256 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3177:3189  _totalSupply */\n      sload(0x03)\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3170:3189  return _totalSupply */\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3096:3196  function totalSupply() external override view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4694:5005  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_41:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4794:4798  bool */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4810:4846  _transfer(sender, recipient, amount) */\n      tag_110\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4820:4826  sender */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4828:4837  recipient */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4839:4845  amount */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4810:4819  _transfer */\n      tag_111\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4810:4846  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_110:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4856:4977  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_112\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4865:4871  sender */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4873:4885  _msgSender() */\n      tag_113\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4873:4883  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4873:4885  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4887:4976  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_114\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4925:4931  amount */\n      dup6\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4887:4976  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4887:4898  _allowances */\n      0x02\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4887:4906  _allowances[sender] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4899:4905  sender */\n      dup12\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4887:4906  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4887:4920  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4907:4919  _msgSender() */\n      tag_115\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4907:4917  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4907:4919  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4887:4920  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4887:4924  _allowances[sender][_msgSender()].sub */\n      tag_116\n      swap1\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4887:4976  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4856:4864  _approve */\n      tag_107\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4856:4977  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_112:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4994:4998  true */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4987:4998  return true */\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":4694:5005  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2641:2733  function decimals() external override view returns (uint8) {... */\n    tag_43:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2693:2698  uint8 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2717:2726  _decimals */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2710:2726  return _decimals */\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2641:2733  function decimals() external override view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5399:5606  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_46:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5479:5483  bool */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5495:5578  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_119\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5504:5516  _msgSender() */\n      tag_120\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5504:5514  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5504:5516  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5518:5525  spender */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5527:5577  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_121\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5566:5576  addedValue */\n      dup6\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5527:5538  _allowances */\n      0x02\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5527:5552  _allowances[_msgSender()] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5539:5551  _msgSender() */\n      tag_122\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5539:5549  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5539:5551  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5527:5552  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5527:5561  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5553:5560  spender */\n      dup10\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5527:5561  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5527:5565  _allowances[_msgSender()][spender].add */\n      tag_123\n      swap1\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5527:5577  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5495:5503  _approve */\n      tag_107\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5495:5578  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_119:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5595:5599  true */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5588:5599  return true */\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":5399:5606  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":11106:11260  function unpause() public onlyOwner {... */\n    tag_48:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      tag_125\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:977  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:963  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":949:1016  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":11160:11168  isPaused */\n      0x06\n      0x16\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":11152:11196  require(isPaused, \"contract already paused\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x636f6e747261637420616c726561647920706175736564000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":11217:11222  false */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":11206:11214  isPaused */\n      0x06\n      0x16\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":11206:11222  isPaused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":11106:11260  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6861:6978  function burn(uint256 amount) public returns (bool) {... */\n    tag_51:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6907:6911  bool */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6923:6950  _burn(_msgSender(), amount) */\n      tag_130\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6929:6941  _msgSender() */\n      tag_131\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6929:6939  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6929:6941  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6943:6949  amount */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6923:6928  _burn */\n      tag_132\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6923:6950  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_130:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6967:6971  true */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6960:6971  return true */\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6861:6978  function burn(uint256 amount) public returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10534:10728  function blackList(address _user) public onlyOwner {... */\n    tag_54:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      tag_134\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:977  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:963  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":949:1016  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10604:10617  isBlacklisted */\n      0x07\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10604:10624  isBlacklisted[_user] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10618:10623  _user */\n      dup3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10604:10624  isBlacklisted[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10603:10624  !isBlacklisted[_user] */\n      iszero\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10595:10653  require(!isBlacklisted[_user], \"user already blacklisted\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7573657220616c726561647920626c61636b6c69737465640000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10686:10690  true */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10663:10676  isBlacklisted */\n      0x07\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10663:10683  isBlacklisted[_user] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10677:10682  _user */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10663:10683  isBlacklisted[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10663:10690  isBlacklisted[_user] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10534:10728  function blackList(address _user) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2343:2425  function mintable() external view returns (bool) {... */\n    tag_56:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2386:2390  bool */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2409:2418  _mintable */\n      0x06\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2402:2418  return _mintable */\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2343:2425  function mintable() external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10738:10942  function removeFromBlacklist(address _user) public onlyOwner {... */\n    tag_59:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      tag_140\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:977  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:963  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":949:1016  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10817:10830  isBlacklisted */\n      0x07\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10817:10837  isBlacklisted[_user] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10831:10836  _user */\n      dup3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10817:10837  isBlacklisted[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10809:10866  require(isBlacklisted[_user], \"user already whitelisted\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7573657220616c72656164792077686974656c69737465640000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10899:10904  false */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10876:10889  isBlacklisted */\n      0x07\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10876:10896  isBlacklisted[_user] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10890:10895  _user */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10876:10896  isBlacklisted[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10876:10904  isBlacklisted[_user] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10738:10942  function removeFromBlacklist(address _user) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3253:3372  function balanceOf(address account) external override view returns (uint256) {... */\n    tag_62:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3321:3328  uint256 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3347:3356  _balances */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3347:3365  _balances[account] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3357:3364  account */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3347:3365  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3340:3365  return _balances[account] */\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3253:3372  function balanceOf(address account) external override view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1751:1888  function renounceOwnership() public onlyOwner {... */\n    tag_64:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      tag_146\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:977  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:963  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":949:1016  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1849:1850  0 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1812:1852  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1833:1839  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1812:1852  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1879:1880  0 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1862:1868  _owner */\n      0x06\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1862:1881  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1751:1888  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10948:11100  function pause() public onlyOwner {... */\n    tag_66:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      tag_150\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:977  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:963  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":949:1016  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":11001:11009  isPaused */\n      0x06\n      0x16\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":11000:11009  !isPaused */\n      iszero\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10992:11037  require(!isPaused, \"contract already paused\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x636f6e747261637420616c726561647920706175736564000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":11058:11062  true */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":11047:11055  isPaused */\n      0x06\n      0x16\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":11047:11062  isPaused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10948:11100  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2488:2579  function getOwner() external override view returns (address) {... */\n    tag_68:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2540:2547  address */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2566:2572  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2559:2572  return _owner */\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2488:2579  function getOwner() external override view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2793:2889  function symbol() external override view returns (string memory) {... */\n    tag_70:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2843:2856  string memory */\n      0x60\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2875:2882  _symbol */\n      0x05\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2868:2882  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_156\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_157\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_156)\n    tag_157:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_158:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_158\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2793:2889  function symbol() external override view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6592:6777  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_77:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6648:6652  bool */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      tag_160\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:977  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:963  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":949:1016  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6672:6681  _mintable */\n      0x06\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6664:6712  require(_mintable, \"this token is not mintable\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7468697320746f6b656e206973206e6f74206d696e7461626c65000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6722:6749  _mint(_msgSender(), amount) */\n      tag_164\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6728:6740  _msgSender() */\n      tag_165\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6728:6738  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6728:6740  _msgSender() */\n      jump\t// in\n    tag_165:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6742:6748  amount */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6722:6727  _mint */\n      tag_166\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6722:6749  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_164:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6766:6770  true */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6759:6770  return true */\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6592:6777  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6092:6350  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_80:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6177:6181  bool */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6193:6322  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_168\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6202:6214  _msgSender() */\n      tag_169\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6202:6212  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6202:6214  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6216:6223  spender */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6225:6321  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_170\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6264:6279  subtractedValue */\n      dup6\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6225:6321  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6225:6236  _allowances */\n      0x02\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6225:6250  _allowances[_msgSender()] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6237:6249  _msgSender() */\n      tag_171\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6237:6247  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6237:6249  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6225:6250  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6225:6259  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6251:6258  spender */\n      dup11\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6225:6259  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6225:6263  _allowances[_msgSender()][spender].sub */\n      tag_116\n      swap1\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6225:6321  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6193:6201  _approve */\n      tag_107\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6193:6322  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_168:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6339:6343  true */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6332:6343  return true */\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":6092:6350  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3574:3740  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_83:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3654:3658  bool */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3670:3712  _transfer(_msgSender(), recipient, amount) */\n      tag_173\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3680:3692  _msgSender() */\n      tag_174\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3680:3690  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3680:3692  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3694:3703  recipient */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3705:3711  amount */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3670:3679  _transfer */\n      tag_111\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3670:3712  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_173:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3729:3733  true */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3722:3733  return true */\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3574:3740  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3797:3940  function allowance(address owner, address spender) external override view returns (uint256) {... */\n    tag_86:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3880:3887  uint256 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3906:3917  _allowances */\n      0x02\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3906:3924  _allowances[owner] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3918:3923  owner */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3906:3924  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3906:3933  _allowances[owner][spender] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3925:3932  spender */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3906:3933  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3899:3933  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":3797:3940  function allowance(address owner, address spender) external override view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1103:1415  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n    tag_95:\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1501:1514  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1501:1534  _initializing || _isConstructor() */\n      dup1\n      tag_177\n      jumpi\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1518:1534  _isConstructor() */\n      tag_178\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1518:1532  _isConstructor */\n      tag_179\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1518:1534  _isConstructor() */\n      jump\t// in\n    tag_178:\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1501:1534  _initializing || _isConstructor() */\n    tag_177:\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1501:1551  _initializing || _isConstructor() || !_initialized */\n      dup1\n      tag_180\n      jumpi\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1539:1551  _initialized */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1538:1551  !_initialized */\n      iszero\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1501:1551  _initializing || _isConstructor() || !_initialized */\n    tag_180:\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1493:1602  require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1613:1632  bool isTopLevelCall */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1636:1649  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1635:1649  !_initializing */\n      iszero\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1613:1649  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1663:1677  isTopLevelCall */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1659:1757  if (isTopLevelCall) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1709:1713  true */\n      0x01\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1693:1706  _initializing */\n      0x00\n      0x01\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1693:1713  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1742:1746  true */\n      0x01\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1727:1739  _initialized */\n      0x00\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1727:1746  _initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1659:1757  if (isTopLevelCall) {... */\n    tag_182:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1265:1270  owner */\n      dup2\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1256:1262  _owner */\n      0x06\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1256:1270  _owner = owner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1288:1292  name */\n      dup7\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1280:1285  _name */\n      0x04\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1280:1292  _name = name */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_184\n      swap3\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1312:1318  symbol */\n      dup6\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1302:1309  _symbol */\n      0x05\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1302:1318  _symbol = symbol */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_186\n      swap3\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_186:\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1340:1348  decimals */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1328:1337  _decimals */\n      0x06\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1328:1348  _decimals = decimals */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1370:1378  mintable */\n      dup3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1358:1367  _mintable */\n      0x06\n      0x15\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1358:1378  _mintable = mintable */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1388:1408  _mint(owner, amount) */\n      tag_187\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1394:1399  owner */\n      dup3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1401:1407  amount */\n      dup6\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1388:1393  _mint */\n      tag_166\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1388:1408  _mint(owner, amount) */\n      jump\t// in\n    tag_187:\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1783:1797  isTopLevelCall */\n      dup1\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1779:1845  if (isTopLevelCall) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1829:1834  false */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1813:1826  _initializing */\n      dup1\n      0x01\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1813:1834  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1779:1845  if (isTopLevelCall) {... */\n    tag_188:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":1103:1415  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2037:2269  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_98:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      tag_190\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:977  _msgSender */\n      tag_106\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":967:979  _msgSender() */\n      jump\t// in\n    tag_190:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:963  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":957:979  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":949:1016  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2137:2138  0 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2117:2139  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2117:2125  newOwner */\n      dup2\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2117:2139  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2109:2182  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2226:2234  newOwner */\n      dup1\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2197:2235  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2218:2224  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2197:2235  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2254:2262  newOwner */\n      dup1\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2245:2251  _owner */\n      0x06\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2245:2262  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":2037:2269  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_106:\n        /* \"openzeppelin-solidity/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9789:10121  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_107:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9899:9900  0 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9882:9901  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9882:9887  owner */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9882:9901  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9874:9942  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9979:9980  0 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9960:9981  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9960:9967  spender */\n      dup3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9960:9981  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9952:10020  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10061:10067  amount */\n      dup1\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10031:10042  _allowances */\n      0x02\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10031:10049  _allowances[owner] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10043:10048  owner */\n      dup6\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10031:10049  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10031:10058  _allowances[owner][spender] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10050:10057  spender */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10031:10058  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10031:10067  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10098:10105  spender */\n      dup2\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10082:10114  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10091:10096  owner */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10082:10114  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10107:10113  amount */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":10082:10114  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9789:10121  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7452:8131  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_111:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7550:7563  isBlacklisted */\n      0x07\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7550:7574  isBlacklisted[recipient] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7564:7573  recipient */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7550:7574  isBlacklisted[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7549:7574  !isBlacklisted[recipient] */\n      iszero\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7541:7602  require(!isBlacklisted[recipient], \"recipient is backlisted\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x726563697069656e74206973206261636b6c6973746564000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7621:7634  isBlacklisted */\n      0x07\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7621:7642  isBlacklisted[sender] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7635:7641  sender */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7621:7642  isBlacklisted[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7620:7642  !isBlacklisted[sender] */\n      iszero\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7612:7667  require(!isBlacklisted[sender], \"sender is backlisted\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x73656e646572206973206261636b6c6973746564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7686:7694  isPaused */\n      0x06\n      0x16\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7685:7694  !isPaused */\n      iszero\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7677:7746  require(!isPaused, \"token operations paused due to security reasons\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_28dc9a1d7fb79e3f8d5f513efc3842febbeda11bf422847cf16844ad128530af\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7782:7783  0 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7764:7784  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7764:7770  sender */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7764:7784  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7756:7826  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7865:7866  0 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7844:7867  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7844:7853  recipient */\n      dup3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7844:7867  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7836:7907  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7938:8009  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_204\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7960:7966  amount */\n      dup2\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7938:8009  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7938:7947  _balances */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7938:7955  _balances[sender] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7948:7954  sender */\n      dup8\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7938:7955  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7938:7959  _balances[sender].sub */\n      tag_116\n      swap1\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7938:8009  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7918:7927  _balances */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7918:7935  _balances[sender] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7928:7934  sender */\n      dup6\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7918:7935  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7918:8009  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8042:8074  _balances[recipient].add(amount) */\n      tag_205\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8067:8073  amount */\n      dup2\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8042:8051  _balances */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8042:8062  _balances[recipient] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8052:8061  recipient */\n      dup6\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8042:8062  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8042:8066  _balances[recipient].add */\n      tag_123\n      swap1\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8042:8074  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8019:8028  _balances */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8019:8039  _balances[recipient] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8029:8038  recipient */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8019:8039  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8019:8074  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8106:8115  recipient */\n      dup2\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8089:8124  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8098:8104  sender */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8089:8124  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8117:8123  amount */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8089:8124  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":7452:8131  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_116:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_208:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_210\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_208)\n    tag_210:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_211\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_211:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_123:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9022:9364  function _burn(address account, uint256 amount) internal {... */\n    tag_132:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9116:9117  0 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9097:9118  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9097:9104  account */\n      dup3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9097:9118  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9089:9156  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9188:9256  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_216\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9211:9217  amount */\n      dup2\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9188:9256  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9188:9197  _balances */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9188:9206  _balances[account] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9198:9205  account */\n      dup7\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9188:9206  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9188:9210  _balances[account].sub */\n      tag_116\n      swap1\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9188:9256  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9167:9176  _balances */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9167:9185  _balances[account] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9177:9184  account */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9167:9185  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9167:9256  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9281:9305  _totalSupply.sub(amount) */\n      tag_217\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9298:9304  amount */\n      dup2\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9281:9293  _totalSupply */\n      sload(0x03)\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9281:9297  _totalSupply.sub */\n      tag_218\n      swap1\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9281:9305  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9266:9278  _totalSupply */\n      0x03\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9266:9305  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9346:9347  0 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9320:9357  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9329:9336  account */\n      dup3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9320:9357  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9350:9356  amount */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9320:9357  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":9022:9364  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8401:8703  function _mint(address account, uint256 amount) internal {... */\n    tag_166:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8495:8496  0 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8476:8497  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8476:8483  account */\n      dup3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8476:8497  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8468:8533  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8559:8583  _totalSupply.add(amount) */\n      tag_221\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8576:8582  amount */\n      dup2\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8559:8571  _totalSupply */\n      sload(0x03)\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8559:8575  _totalSupply.add */\n      tag_123\n      swap1\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8559:8583  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_221:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8544:8556  _totalSupply */\n      0x03\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8544:8583  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8614:8644  _balances[account].add(amount) */\n      tag_222\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8637:8643  amount */\n      dup2\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8614:8623  _balances */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8614:8632  _balances[account] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8624:8631  account */\n      dup6\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8614:8632  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8614:8636  _balances[account].add */\n      tag_123\n      swap1\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8614:8644  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_222:\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8593:8602  _balances */\n      0x01\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8593:8611  _balances[account] */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8603:8610  account */\n      dup5\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8593:8611  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8593:8644  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8680:8687  account */\n      dup2\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8659:8696  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8676:8677  0 */\n      0x00\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8659:8696  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8689:8695  amount */\n      dup4\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8659:8696  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":8401:8703  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1941:2053  function _isConstructor() private view returns (bool) {... */\n    tag_179:\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1989:1993  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":2013:2046  Address.isContract(address(this)) */\n      tag_224\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":2040:2044  this */\n      address\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":2013:2031  Address.isContract */\n      tag_225\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":2013:2046  Address.isContract(address(this)) */\n      jump\t// in\n    tag_224:\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":2012:2046  !Address.isContract(address(this)) */\n      iszero\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":2005:2046  return !Address.isContract(address(this)) */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/proxy/Initializable.sol\":1941:2053  function _isConstructor() private view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_218:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":3283:3284  b */\n      dup2\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":3279:3280  a */\n      dup4\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":3279:3284  a - b */\n      sub\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":3272:3284  return a - b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_225:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":786:790  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":989:1001  uint256 size */\n      dup1\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1098:1105  account */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1078:1106  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1131:1132  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1128  size */\n      dup2\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      gt\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1117:1132  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":233:11262  contract BEP20TokenImplementation is Context, IBEP20, Initializable {... */\n    tag_185:\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      0x1f\n      lt\n      tag_230\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_229)\n    tag_230:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_229\n      jumpi\n      swap2\n      dup3\n      add\n    tag_231:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_232\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_231)\n    tag_232:\n    tag_229:\n      pop\n      swap1\n      pop\n      tag_233\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      pop\n      swap1\n      jump\t// out\n    tag_234:\n      tag_235\n      swap2\n      swap1\n    tag_236:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_237\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_236)\n    tag_237:\n      pop\n      swap1\n      jump\n    tag_235:\n      swap1\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_28dc9a1d7fb79e3f8d5f513efc3842febbeda11bf422847cf16844ad128530af 746f6b656e206f7065726174696f6e73207061757365642064756520746f20736563757269747920726561736f6e73\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759 496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855 42455032303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa26469706673582212207775a1ca1aa4702c5e14e2086883f0bd819419e983d770b566fa85b88545308764736f6c63430006030033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50612a0e806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063a0712d681161007c578063a0712d6814610591578063a457c2d7146105d7578063a9059cbb1461063d578063dd62ed3e146106a3578063ef3ebcb81461071b578063f2fde38b146108b057610142565b806370a0823114610458578063715018a6146104b05780638456cb59146104ba578063893d20e8146104c457806395d89b411461050e57610142565b8063395093511161010a57806339509351146102f85780633f4ba83a1461035e57806342966c68146103685780634838d165146103ae5780634bf365df146103f2578063537df3b61461041457610142565b806306fdde0314610147578063095ea7b3146101ca57806318160ddd1461023057806323b872dd1461024e578063313ce567146102d4575b600080fd5b61014f6108f4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018f578082015181840152602081019050610174565b50505050905090810190601f1680156101bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610216600480360360408110156101e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610996565b604051808215151515815260200191505060405180910390f35b6102386109b4565b6040518082815260200191505060405180910390f35b6102ba6004803603606081101561026457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109be565b604051808215151515815260200191505060405180910390f35b6102dc610a97565b604051808260ff1660ff16815260200191505060405180910390f35b6103446004803603604081101561030e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aae565b604051808215151515815260200191505060405180910390f35b610366610b61565b005b6103946004803603602081101561037e57600080fd5b8101908080359060200190929190505050610cca565b604051808215151515815260200191505060405180910390f35b6103f0600480360360208110156103c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ce6565b005b6103fa610ecb565b604051808215151515815260200191505060405180910390f35b6104566004803603602081101561042a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ee2565b005b61049a6004803603602081101561046e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110c6565b6040518082815260200191505060405180910390f35b6104b861110f565b005b6104c261129a565b005b6104cc611404565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61051661142e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561055657808201518184015260208101905061053b565b50505050905090810190601f1680156105835780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105bd600480360360208110156105a757600080fd5b81019080803590602001909291905050506114d0565b604051808215151515815260200191505060405180910390f35b610623600480360360408110156105ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611638565b604051808215151515815260200191505060405180910390f35b6106896004803603604081101561065357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611705565b604051808215151515815260200191505060405180910390f35b610705600480360360408110156106b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611723565b6040518082815260200191505060405180910390f35b6108ae600480360360c081101561073157600080fd5b810190808035906020019064010000000081111561074e57600080fd5b82018360208201111561076057600080fd5b8035906020019184600183028401116401000000008311171561078257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156107e557600080fd5b8201836020820111156107f757600080fd5b8035906020019184600183028401116401000000008311171561081957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff16906020019092919080359060200190929190803515159060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117aa565b005b6108f2600480360360208110156108c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061195d565b005b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561098c5780601f106109615761010080835404028352916020019161098c565b820191906000526020600020905b81548152906001019060200180831161096f57829003601f168201915b5050505050905090565b60006109aa6109a3611b6d565b8484611b75565b6001905092915050565b6000600354905090565b60006109cb848484611d6c565b610a8c846109d7611b6d565b610a87856040518060600160405280602881526020016128b060289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610a3d611b6d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461220c9092919063ffffffff16565b611b75565b600190509392505050565b6000600660009054906101000a900460ff16905090565b6000610b57610abb611b6d565b84610b528560026000610acc611b6d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122c690919063ffffffff16565b611b75565b6001905092915050565b610b69611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c2b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600660169054906101000a900460ff16610cad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f636f6e747261637420616c72656164792070617573656400000000000000000081525060200191505060405180910390fd5b6000600660166101000a81548160ff021916908315150217905550565b6000610cdd610cd7611b6d565b8361234e565b60019050919050565b610cee611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610db0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610e70576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f7573657220616c726561647920626c61636b6c6973746564000000000000000081525060200191505060405180910390fd5b6001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600660159054906101000a900460ff16905090565b610eea611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661106b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f7573657220616c72656164792077686974656c6973746564000000000000000081525060200191505060405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611117611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6112a2611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611364576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600660169054906101000a900460ff16156113e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f636f6e747261637420616c72656164792070617573656400000000000000000081525060200191505060405180910390fd5b6001600660166101000a81548160ff021916908315150217905550565b6000600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114c65780601f1061149b576101008083540402835291602001916114c6565b820191906000526020600020905b8154815290600101906020018083116114a957829003601f168201915b5050505050905090565b60006114da611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461159c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600660159054906101000a900460ff1661161e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f7468697320746f6b656e206973206e6f74206d696e7461626c6500000000000081525060200191505060405180910390fd5b61162f611629611b6d565b83612508565b60019050919050565b60006116fb611645611b6d565b846116f68560405180606001604052806025815260200161294f602591396002600061166f611b6d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461220c9092919063ffffffff16565b611b75565b6001905092915050565b6000611719611712611b6d565b8484611d6c565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060019054906101000a900460ff16806117c957506117c86126c5565b5b806117e057506000809054906101000a900460ff16155b611835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806128d8602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611885576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600490805190602001906118dc92919061276c565b5085600590805190602001906118f392919061276c565b5084600660006101000a81548160ff021916908360ff16021790555082600660156101000a81548160ff0219169083151502179055506119338285612508565b80156119545760008060016101000a81548160ff0219169083151502179055505b50505050505050565b611965611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611aad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061285b6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611bfb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806128376024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c81576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806129b76022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611e2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f726563697069656e74206973206261636b6c697374656400000000000000000081525060200191505060405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611eec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f73656e646572206973206261636b6c697374656400000000000000000000000081525060200191505060405180910390fd5b600660169054906101000a900460ff1615611f52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612881602f913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611fd8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806128126025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561205e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061292c6023913960400191505060405180910390fd5b6120ca8160405180606001604052806026815260200161290660269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461220c9092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061215f81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122c690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906122b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561227e578082015181840152602081019050612263565b50505050905090810190601f1680156122ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015612344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806129746021913960400191505060405180910390fd5b6124408160405180606001604052806022815260200161299560229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461220c9092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612498816003546126d690919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156125ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6125c0816003546122c690919063ffffffff16565b60038190555061261881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122c690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60006126d030612759565b15905090565b60008282111561274e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600080823b905060008111915050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106127ad57805160ff19168380011785556127db565b828001600101855582156127db579182015b828111156127da5782518255916020019190600101906127bf565b5b5090506127e891906127ec565b5090565b61280e91905b8082111561280a5760008160009055506001016127f2565b5090565b9056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373746f6b656e206f7065726174696f6e73207061757365642064756520746f20736563757269747920726561736f6e7342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656442455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a26469706673582212207775a1ca1aa4702c5e14e2086883f0bd819419e983d770b566fa85b88545308764736f6c63430006030033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xEF3EBCB8 EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8B0 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x50E JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x4838D165 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x4BF365DF EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x414 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x174 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH2 0xB61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FA PUSH2 0xECB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x456 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH2 0x110F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C2 PUSH2 0x129A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4CC PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x516 PUSH2 0x142E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x556 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x53B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x583 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x689 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x705 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x7E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x195D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x98C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x961 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x96F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AA PUSH2 0x9A3 PUSH2 0x1B6D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CB DUP5 DUP5 DUP5 PUSH2 0x1D6C JUMP JUMPDEST PUSH2 0xA8C DUP5 PUSH2 0x9D7 PUSH2 0x1B6D JUMP JUMPDEST PUSH2 0xA87 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28B0 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xA3D PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x220C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB57 PUSH2 0xABB PUSH2 0x1B6D JUMP JUMPDEST DUP5 PUSH2 0xB52 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0xACC PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x22C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB69 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E747261637420616C726561647920706175736564000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDD PUSH2 0xCD7 PUSH2 0x1B6D JUMP JUMPDEST DUP4 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEE PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7573657220616C726561647920626C61636B6C69737465640000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEEA PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x106B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7573657220616C72656164792077686974656C69737465640000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1117 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x12A2 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1364 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E747261637420616C726561647920706175736564000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x149B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DA PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x159C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x161E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x162F PUSH2 0x1629 PUSH2 0x1B6D JUMP JUMPDEST DUP4 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16FB PUSH2 0x1645 PUSH2 0x1B6D JUMP JUMPDEST DUP5 PUSH2 0x16F6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x294F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x166F PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x220C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1719 PUSH2 0x1712 PUSH2 0x1B6D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x17C9 JUMPI POP PUSH2 0x17C8 PUSH2 0x26C5 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x17E0 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x28D8 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x1885 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x18DC SWAP3 SWAP2 SWAP1 PUSH2 0x276C JUMP JUMPDEST POP DUP6 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x18F3 SWAP3 SWAP2 SWAP1 PUSH2 0x276C JUMP JUMPDEST POP DUP5 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1933 DUP3 DUP6 PUSH2 0x2508 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1954 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1965 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1AAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x285B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2837 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29B7 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x726563697069656E74206973206261636B6C6973746564000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1EEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73656E646572206973206261636B6C6973746564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1F52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2881 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2812 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x205E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x292C PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20CA DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2906 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x220C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x215F DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x22C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x22B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x227E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2263 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x22AB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2974 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2440 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2995 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x220C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2498 DUP2 PUSH1 0x3 SLOAD PUSH2 0x26D6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x25AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C0 DUP2 PUSH1 0x3 SLOAD PUSH2 0x22C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x2618 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x22C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D0 ADDRESS PUSH2 0x2759 JUMP JUMPDEST ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x274E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x27AD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x27DB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x27DB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x27DA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x27BF JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x27E8 SWAP2 SWAP1 PUSH2 0x27EC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x280E SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x280A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x27F2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373746F6B656E206F7065726174696F6E73 KECCAK256 PUSH17 0x61757365642064756520746F2073656375 PUSH19 0x69747920726561736F6E7342455032303A2074 PUSH19 0x616E7366657220616D6F756E74206578636565 PUSH5 0x7320616C6C PUSH16 0x77616E6365496E697469616C697A6162 PUSH13 0x653A20636F6E74726163742069 PUSH20 0x20616C726561647920696E697469616C697A6564 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A26469706673582212207775A1CA1AA4 PUSH17 0x2C5E14E2086883F0BD819419E983D770B5 PUSH7 0xFA85B885453087 PUSH5 0x736F6C6343 STOP MOD SUB STOP CALLER ",
							"sourceMap": "233:11029:0:-:0;;;759:28;5:9:-1;2:2;;;27:1;24;17:12;2:2;759:28:0;233:11029;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063a0712d681161007c578063a0712d6814610591578063a457c2d7146105d7578063a9059cbb1461063d578063dd62ed3e146106a3578063ef3ebcb81461071b578063f2fde38b146108b057610142565b806370a0823114610458578063715018a6146104b05780638456cb59146104ba578063893d20e8146104c457806395d89b411461050e57610142565b8063395093511161010a57806339509351146102f85780633f4ba83a1461035e57806342966c68146103685780634838d165146103ae5780634bf365df146103f2578063537df3b61461041457610142565b806306fdde0314610147578063095ea7b3146101ca57806318160ddd1461023057806323b872dd1461024e578063313ce567146102d4575b600080fd5b61014f6108f4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018f578082015181840152602081019050610174565b50505050905090810190601f1680156101bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610216600480360360408110156101e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610996565b604051808215151515815260200191505060405180910390f35b6102386109b4565b6040518082815260200191505060405180910390f35b6102ba6004803603606081101561026457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109be565b604051808215151515815260200191505060405180910390f35b6102dc610a97565b604051808260ff1660ff16815260200191505060405180910390f35b6103446004803603604081101561030e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aae565b604051808215151515815260200191505060405180910390f35b610366610b61565b005b6103946004803603602081101561037e57600080fd5b8101908080359060200190929190505050610cca565b604051808215151515815260200191505060405180910390f35b6103f0600480360360208110156103c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ce6565b005b6103fa610ecb565b604051808215151515815260200191505060405180910390f35b6104566004803603602081101561042a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ee2565b005b61049a6004803603602081101561046e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110c6565b6040518082815260200191505060405180910390f35b6104b861110f565b005b6104c261129a565b005b6104cc611404565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61051661142e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561055657808201518184015260208101905061053b565b50505050905090810190601f1680156105835780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105bd600480360360208110156105a757600080fd5b81019080803590602001909291905050506114d0565b604051808215151515815260200191505060405180910390f35b610623600480360360408110156105ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611638565b604051808215151515815260200191505060405180910390f35b6106896004803603604081101561065357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611705565b604051808215151515815260200191505060405180910390f35b610705600480360360408110156106b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611723565b6040518082815260200191505060405180910390f35b6108ae600480360360c081101561073157600080fd5b810190808035906020019064010000000081111561074e57600080fd5b82018360208201111561076057600080fd5b8035906020019184600183028401116401000000008311171561078257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156107e557600080fd5b8201836020820111156107f757600080fd5b8035906020019184600183028401116401000000008311171561081957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff16906020019092919080359060200190929190803515159060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117aa565b005b6108f2600480360360208110156108c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061195d565b005b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561098c5780601f106109615761010080835404028352916020019161098c565b820191906000526020600020905b81548152906001019060200180831161096f57829003601f168201915b5050505050905090565b60006109aa6109a3611b6d565b8484611b75565b6001905092915050565b6000600354905090565b60006109cb848484611d6c565b610a8c846109d7611b6d565b610a87856040518060600160405280602881526020016128b060289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610a3d611b6d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461220c9092919063ffffffff16565b611b75565b600190509392505050565b6000600660009054906101000a900460ff16905090565b6000610b57610abb611b6d565b84610b528560026000610acc611b6d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122c690919063ffffffff16565b611b75565b6001905092915050565b610b69611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c2b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600660169054906101000a900460ff16610cad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f636f6e747261637420616c72656164792070617573656400000000000000000081525060200191505060405180910390fd5b6000600660166101000a81548160ff021916908315150217905550565b6000610cdd610cd7611b6d565b8361234e565b60019050919050565b610cee611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610db0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610e70576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f7573657220616c726561647920626c61636b6c6973746564000000000000000081525060200191505060405180910390fd5b6001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600660159054906101000a900460ff16905090565b610eea611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661106b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f7573657220616c72656164792077686974656c6973746564000000000000000081525060200191505060405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611117611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6112a2611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611364576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600660169054906101000a900460ff16156113e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f636f6e747261637420616c72656164792070617573656400000000000000000081525060200191505060405180910390fd5b6001600660166101000a81548160ff021916908315150217905550565b6000600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114c65780601f1061149b576101008083540402835291602001916114c6565b820191906000526020600020905b8154815290600101906020018083116114a957829003601f168201915b5050505050905090565b60006114da611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461159c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600660159054906101000a900460ff1661161e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f7468697320746f6b656e206973206e6f74206d696e7461626c6500000000000081525060200191505060405180910390fd5b61162f611629611b6d565b83612508565b60019050919050565b60006116fb611645611b6d565b846116f68560405180606001604052806025815260200161294f602591396002600061166f611b6d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461220c9092919063ffffffff16565b611b75565b6001905092915050565b6000611719611712611b6d565b8484611d6c565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060019054906101000a900460ff16806117c957506117c86126c5565b5b806117e057506000809054906101000a900460ff16155b611835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806128d8602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611885576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600490805190602001906118dc92919061276c565b5085600590805190602001906118f392919061276c565b5084600660006101000a81548160ff021916908360ff16021790555082600660156101000a81548160ff0219169083151502179055506119338285612508565b80156119545760008060016101000a81548160ff0219169083151502179055505b50505050505050565b611965611b6d565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611aad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061285b6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611bfb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806128376024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c81576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806129b76022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611e2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f726563697069656e74206973206261636b6c697374656400000000000000000081525060200191505060405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611eec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f73656e646572206973206261636b6c697374656400000000000000000000000081525060200191505060405180910390fd5b600660169054906101000a900460ff1615611f52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612881602f913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611fd8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806128126025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561205e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061292c6023913960400191505060405180910390fd5b6120ca8160405180606001604052806026815260200161290660269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461220c9092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061215f81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122c690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906122b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561227e578082015181840152602081019050612263565b50505050905090810190601f1680156122ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015612344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806129746021913960400191505060405180910390fd5b6124408160405180606001604052806022815260200161299560229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461220c9092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612498816003546126d690919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156125ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6125c0816003546122c690919063ffffffff16565b60038190555061261881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122c690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60006126d030612759565b15905090565b60008282111561274e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600080823b905060008111915050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106127ad57805160ff19168380011785556127db565b828001600101855582156127db579182015b828111156127da5782518255916020019190600101906127bf565b5b5090506127e891906127ec565b5090565b61280e91905b8082111561280a5760008160009055506001016127f2565b5090565b9056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373746f6b656e206f7065726174696f6e73207061757365642064756520746f20736563757269747920726561736f6e7342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656442455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a26469706673582212207775a1ca1aa4702c5e14e2086883f0bd819419e983d770b566fa85b88545308764736f6c63430006030033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xEF3EBCB8 EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8B0 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x50E JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x4838D165 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x4BF365DF EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x414 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x174 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH2 0xB61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FA PUSH2 0xECB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x456 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH2 0x110F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C2 PUSH2 0x129A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4CC PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x516 PUSH2 0x142E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x556 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x53B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x583 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x689 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x705 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x7E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x195D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x98C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x961 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x96F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AA PUSH2 0x9A3 PUSH2 0x1B6D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CB DUP5 DUP5 DUP5 PUSH2 0x1D6C JUMP JUMPDEST PUSH2 0xA8C DUP5 PUSH2 0x9D7 PUSH2 0x1B6D JUMP JUMPDEST PUSH2 0xA87 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28B0 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xA3D PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x220C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB57 PUSH2 0xABB PUSH2 0x1B6D JUMP JUMPDEST DUP5 PUSH2 0xB52 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0xACC PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x22C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB69 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E747261637420616C726561647920706175736564000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDD PUSH2 0xCD7 PUSH2 0x1B6D JUMP JUMPDEST DUP4 PUSH2 0x234E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEE PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7573657220616C726561647920626C61636B6C69737465640000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEEA PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x106B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7573657220616C72656164792077686974656C69737465640000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1117 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x12A2 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1364 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6E747261637420616C726561647920706175736564000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x149B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DA PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x159C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x161E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x162F PUSH2 0x1629 PUSH2 0x1B6D JUMP JUMPDEST DUP4 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16FB PUSH2 0x1645 PUSH2 0x1B6D JUMP JUMPDEST DUP5 PUSH2 0x16F6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x294F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x166F PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x220C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1719 PUSH2 0x1712 PUSH2 0x1B6D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x17C9 JUMPI POP PUSH2 0x17C8 PUSH2 0x26C5 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x17E0 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x28D8 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x1885 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x18DC SWAP3 SWAP2 SWAP1 PUSH2 0x276C JUMP JUMPDEST POP DUP6 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x18F3 SWAP3 SWAP2 SWAP1 PUSH2 0x276C JUMP JUMPDEST POP DUP5 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1933 DUP3 DUP6 PUSH2 0x2508 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1954 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1965 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1AAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x285B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2837 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29B7 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1E2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x726563697069656E74206973206261636B6C6973746564000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1EEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73656E646572206973206261636B6C6973746564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1F52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2881 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2812 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x205E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x292C PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20CA DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2906 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x220C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x215F DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x22C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x22B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x227E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2263 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x22AB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2974 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2440 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2995 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x220C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2498 DUP2 PUSH1 0x3 SLOAD PUSH2 0x26D6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x25AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C0 DUP2 PUSH1 0x3 SLOAD PUSH2 0x22C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x2618 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x22C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D0 ADDRESS PUSH2 0x2759 JUMP JUMPDEST ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x274E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x27AD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x27DB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x27DB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x27DA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x27BF JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x27E8 SWAP2 SWAP1 PUSH2 0x27EC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x280E SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x280A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x27F2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373746F6B656E206F7065726174696F6E73 KECCAK256 PUSH17 0x61757365642064756520746F2073656375 PUSH19 0x69747920726561736F6E7342455032303A2074 PUSH19 0x616E7366657220616D6F756E74206578636565 PUSH5 0x7320616C6C PUSH16 0x77616E6365496E697469616C697A6162 PUSH13 0x653A20636F6E74726163742069 PUSH20 0x20616C726561647920696E697469616C697A6564 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A26469706673582212207775A1CA1AA4 PUSH17 0x2C5E14E2086883F0BD819419E983D770B5 PUSH7 0xFA85B885453087 PUSH5 0x736F6C6343 STOP MOD SUB STOP CALLER ",
							"sourceMap": "233:11029:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;233:11029:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2945:92:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2945:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4077:160;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4077:160:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3096:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4694:311;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4694:311:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2641:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5399:207;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5399:207:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11106:154;;;:::i;:::-;;6861:117;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6861:117:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10534:194;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;10534:194:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;2343:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10738:204;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;10738:204:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;3253:119;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3253:119:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1751:137;;;:::i;:::-;;10948:152;;;:::i;:::-;;2488:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2793:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2793:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6592:185;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6592:185:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6092:258;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6092:258:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3574:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3574:166:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3797:143;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3797:143:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1103:312;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;1103:312:0;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;1103:312:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1103:312:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1103:312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1103:312:0;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;1103:312:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1103:312:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1103:312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1103:312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2037:232;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2037:232:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;2945:92;2993:13;3025:5;3018:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2945:92;:::o;4077:160::-;4154:4;4170:39;4179:12;:10;:12::i;:::-;4193:7;4202:6;4170:8;:39::i;:::-;4226:4;4219:11;;4077:160;;;;:::o;3096:100::-;3151:7;3177:12;;3170:19;;3096:100;:::o;4694:311::-;4794:4;4810:36;4820:6;4828:9;4839:6;4810:9;:36::i;:::-;4856:121;4865:6;4873:12;:10;:12::i;:::-;4887:89;4925:6;4887:89;;;;;;;;;;;;;;;;;:11;:19;4899:6;4887:19;;;;;;;;;;;;;;;:33;4907:12;:10;:12::i;:::-;4887:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;4856:8;:121::i;:::-;4994:4;4987:11;;4694:311;;;;;:::o;2641:92::-;2693:5;2717:9;;;;;;;;;;;2710:16;;2641:92;:::o;5399:207::-;5479:4;5495:83;5504:12;:10;:12::i;:::-;5518:7;5527:50;5566:10;5527:11;:25;5539:12;:10;:12::i;:::-;5527:25;;;;;;;;;;;;;;;:34;5553:7;5527:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5495:8;:83::i;:::-;5595:4;5588:11;;5399:207;;;;:::o;11106:154::-;967:12;:10;:12::i;:::-;957:22;;:6;;;;;;;;;;;:22;;;949:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11160:8:::1;;;;;;;;;;;11152:44;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11217:5;11206:8;;:16;;;;;;;;;;;;;;;;;;11106:154::o:0;6861:117::-;6907:4;6923:27;6929:12;:10;:12::i;:::-;6943:6;6923:5;:27::i;:::-;6967:4;6960:11;;6861:117;;;:::o;10534:194::-;967:12;:10;:12::i;:::-;957:22;;:6;;;;;;;;;;;:22;;;949:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10604:13:::1;:20;10618:5;10604:20;;;;;;;;;;;;;;;;;;;;;;;;;10603:21;10595:58;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;10686:4;10663:13;:20;10677:5;10663:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;10534:194:::0;:::o;2343:82::-;2386:4;2409:9;;;;;;;;;;;2402:16;;2343:82;:::o;10738:204::-;967:12;:10;:12::i;:::-;957:22;;:6;;;;;;;;;;;:22;;;949:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10817:13:::1;:20;10831:5;10817:20;;;;;;;;;;;;;;;;;;;;;;;;;10809:57;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;10899:5;10876:13;:20;10890:5;10876:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;10738:204:::0;:::o;3253:119::-;3321:7;3347:9;:18;3357:7;3347:18;;;;;;;;;;;;;;;;3340:25;;3253:119;;;:::o;1751:137::-;967:12;:10;:12::i;:::-;957:22;;:6;;;;;;;;;;;:22;;;949:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1849:1:::1;1812:40;;1833:6;;;;;;;;;;;1812:40;;;;;;;;;;;;1879:1;1862:6;;:19;;;;;;;;;;;;;;;;;;1751:137::o:0;10948:152::-;967:12;:10;:12::i;:::-;957:22;;:6;;;;;;;;;;;:22;;;949:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11001:8:::1;;;;;;;;;;;11000:9;10992:45;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11058:4;11047:8;;:15;;;;;;;;;;;;;;;;;;10948:152::o:0;2488:91::-;2540:7;2566:6;;;;;;;;;;;2559:13;;2488:91;:::o;2793:96::-;2843:13;2875:7;2868:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2793:96;:::o;6592:185::-;6648:4;967:12;:10;:12::i;:::-;957:22;;:6;;;;;;;;;;;:22;;;949:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6672:9:::1;;;;;;;;;;;6664:48;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;6722:27;6728:12;:10;:12::i;:::-;6742:6;6722:5;:27::i;:::-;6766:4;6759:11;;6592:185:::0;;;:::o;6092:258::-;6177:4;6193:129;6202:12;:10;:12::i;:::-;6216:7;6225:96;6264:15;6225:96;;;;;;;;;;;;;;;;;:11;:25;6237:12;:10;:12::i;:::-;6225:25;;;;;;;;;;;;;;;:34;6251:7;6225:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6193:8;:129::i;:::-;6339:4;6332:11;;6092:258;;;;:::o;3574:166::-;3654:4;3670:42;3680:12;:10;:12::i;:::-;3694:9;3705:6;3670:9;:42::i;:::-;3729:4;3722:11;;3574:166;;;;:::o;3797:143::-;3880:7;3906:11;:18;3918:5;3906:18;;;;;;;;;;;;;;;:27;3925:7;3906:27;;;;;;;;;;;;;;;;3899:34;;3797:143;;;;:::o;1103:312::-;1501:13:4;;;;;;;;;;;:33;;;;1518:16;:14;:16::i;:::-;1501:33;:50;;;;1539:12;;;;;;;;;;;1538:13;1501:50;1493:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:19;1636:13;;;;;;;;;;;1635:14;1613:36;;1663:14;1659:98;;;1709:4;1693:13;;:20;;;;;;;;;;;;;;;;;;1742:4;1727:12;;:19;;;;;;;;;;;;;;;;;;1659:98;1265:5:0::1;1256:6;;:14;;;;;;;;;;;;;;;;;;1288:4;1280:5;:12;;;;;;;;;;;;:::i;:::-;;1312:6;1302:7;:16;;;;;;;;;;;;:::i;:::-;;1340:8;1328:9;;:20;;;;;;;;;;;;;;;;;;1370:8;1358:9;;:20;;;;;;;;;;;;;;;;;;1388;1394:5;1401:6;1388:5;:20::i;:::-;1783:14:4::0;1779:66;;;1829:5;1813:13;;:21;;;;;;;;;;;;;;;;;;1779:66;1103:312:0;;;;;;;:::o;2037:232::-;967:12;:10;:12::i;:::-;957:22;;:6;;;;;;;;;;;:22;;;949:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:1:::1;2117:22;;:8;:22;;;;2109:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2226:8;2197:38;;2218:6;;;;;;;;;;;2197:38;;;;;;;;;;;;2254:8;2245:6;;:17;;;;;;;;;;;;;;;;;;2037:232:::0;:::o;598:104:6:-;651:15;685:10;678:17;;598:104;:::o;9789:332:0:-;9899:1;9882:19;;:5;:19;;;;9874:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9979:1;9960:21;;:7;:21;;;;9952:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10061:6;10031:11;:18;10043:5;10031:18;;;;;;;;;;;;;;;:27;10050:7;10031:27;;;;;;;;;;;;;;;:36;;;;10098:7;10082:32;;10091:5;10082:32;;;10107:6;10082:32;;;;;;;;;;;;;;;;;;9789:332;;;:::o;7452:679::-;7550:13;:24;7564:9;7550:24;;;;;;;;;;;;;;;;;;;;;;;;;7549:25;7541:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7621:13;:21;7635:6;7621:21;;;;;;;;;;;;;;;;;;;;;;;;;7620:22;7612:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7686:8;;;;;;;;;;;7685:9;7677:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7782:1;7764:20;;:6;:20;;;;7756:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7865:1;7844:23;;:9;:23;;;;7836:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7938;7960:6;7938:71;;;;;;;;;;;;;;;;;:9;:17;7948:6;7938:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7918:9;:17;7928:6;7918:17;;;;;;;;;;;;;;;:91;;;;8042:32;8067:6;8042:9;:20;8052:9;8042:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;8019:9;:20;8029:9;8019:20;;;;;;;;;;;;;;;:55;;;;8106:9;8089:35;;8098:6;8089:35;;;8117:6;8089:35;;;;;;;;;;;;;;;;;;7452:679;;;:::o;5432:163:3:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5537:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;9022:342:0:-;9116:1;9097:21;;:7;:21;;;;9089:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9188:68;9211:6;9188:68;;;;;;;;;;;;;;;;;:9;:18;9198:7;9188:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;9167:9;:18;9177:7;9167:18;;;;;;;;;;;;;;;:89;;;;9281:24;9298:6;9281:12;;:16;;:24;;;;:::i;:::-;9266:12;:39;;;;9346:1;9320:37;;9329:7;9320:37;;;9350:6;9320:37;;;;;;;;;;;;;;;;;;9022:342;;:::o;8401:302::-;8495:1;8476:21;;:7;:21;;;;8468:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8559:24;8576:6;8559:12;;:16;;:24;;;;:::i;:::-;8544:12;:39;;;;8614:30;8637:6;8614:9;:18;8624:7;8614:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8593:9;:18;8603:7;8593:18;;;;;;;;;;;;;;;:51;;;;8680:7;8659:37;;8676:1;8659:37;;;8689:6;8659:37;;;;;;;;;;;;;;;;;;8401:302;;:::o;1941:112:4:-;1989:4;2013:33;2040:4;2013:18;:33::i;:::-;2012:34;2005:41;;1941:112;:::o;3136:155:3:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;726:413:5:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;233:11029:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2153200",
								"executionCost": "2294",
								"totalCost": "2155494"
							},
							"external": {
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1219",
								"blackList(address)": "23181",
								"burn(uint256)": "infinite",
								"decimals()": "1173",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1200",
								"increaseAllowance(address,uint256)": "infinite",
								"initialize(string,string,uint8,uint256,bool,address)": "infinite",
								"mint(uint256)": "infinite",
								"mintable()": "1222",
								"name()": "infinite",
								"pause()": "22989",
								"removeFromBlacklist(address)": "23222",
								"renounceOwnership()": "24492",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "22964"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 11262,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 233,
									"end": 11262,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 233,
									"end": 11262,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 759,
									"end": 787,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 759,
									"end": 787,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 233,
									"end": 11262,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 11262,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 233,
									"end": 11262,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 11262,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 11262,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 233,
									"end": 11262,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 11262,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207775a1ca1aa4702c5e14e2086883f0bd819419e983d770b566fa85b88545308764736f6c63430006030033",
									".code": [
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "EF3EBCB8"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "4838D165"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "4BF365DF"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "537DF3B6"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11260,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11106,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11106,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 11106,
											"end": 11260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11106,
											"end": 11260,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11106,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11260,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1888,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1751,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1751,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1751,
											"end": 1888,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1751,
											"end": 1888,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1751,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1888,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10948,
											"end": 11100,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 10948,
											"end": 11100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10948,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10948,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10948,
											"end": 11100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10948,
											"end": 11100,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10948,
											"end": 11100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10948,
											"end": 11100,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "73"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "73"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "76"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "76"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "85"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "85"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 18,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 19,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "88"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 32,
											"end": 33,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 34,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "88"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "89"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "89"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "90"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "90"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "91"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "91"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "92"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "92"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "93"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "93"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "94"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "94"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "97"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "97"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2993,
											"end": 3006,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3025,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 3037,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4179,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4179,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4179,
											"end": 4191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4191,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4179,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4193,
											"end": 4200,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4208,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4170,
											"end": 4209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4170,
											"end": 4209,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4170,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4219,
											"end": 4230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3189,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3177,
											"end": 3189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3196,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4810,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4820,
											"end": 4826,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4810,
											"end": 4846,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4810,
											"end": 4846,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4810,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4856,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4873,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4925,
											"end": 4931,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4898,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4899,
											"end": 4905,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4907,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4907,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4907,
											"end": 4919,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4907,
											"end": 4919,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4907,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4887,
											"end": 4924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4887,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4856,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4856,
											"end": 4977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4856,
											"end": 4977,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4856,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 4998,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4987,
											"end": 4998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 4998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 5005,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2733,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5479,
											"end": 5483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5504,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5504,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5504,
											"end": 5516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5504,
											"end": 5516,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5504,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5566,
											"end": 5576,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5538,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5539,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5539,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5539,
											"end": 5551,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5539,
											"end": 5551,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5539,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5552,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5560,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5527,
											"end": 5577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5527,
											"end": 5577,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5527,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5495,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5495,
											"end": 5578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5495,
											"end": 5578,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5495,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5595,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5588,
											"end": 5599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5588,
											"end": 5599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5606,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11106,
											"end": 11260,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 11106,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 967,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11168,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11160,
											"end": 11168,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11160,
											"end": 11168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11168,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11168,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11160,
											"end": 11168,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11168,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11168,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11160,
											"end": 11168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "636F6E747261637420616C726561647920706175736564000000000000000000"
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 11152,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11217,
											"end": 11222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11206,
											"end": 11214,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11206,
											"end": 11214,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11260,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6923,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6929,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6949,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6923,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6923,
											"end": 6950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6923,
											"end": 6950,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6923,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6967,
											"end": 6971,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6960,
											"end": 6971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6960,
											"end": 6971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 967,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10617,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10618,
											"end": 10623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10604,
											"end": 10624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "PUSH",
											"source": 0,
											"value": "7573657220616C726561647920626C61636B6C69737465640000000000000000"
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 10595,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10686,
											"end": 10690,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10663,
											"end": 10676,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10677,
											"end": 10682,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10728,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2425,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 967,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10830,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10831,
											"end": 10836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "PUSH",
											"source": 0,
											"value": "7573657220616C72656164792077686974656C69737465640000000000000000"
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 10809,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10899,
											"end": 10904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10889,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10890,
											"end": 10895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10942,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3340,
											"end": 3365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3340,
											"end": 3365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1751,
											"end": 1888,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1751,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 967,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1852,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1888,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10948,
											"end": 11100,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10948,
											"end": 11100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 967,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11001,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11001,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11001,
											"end": 11009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11001,
											"end": 11009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11001,
											"end": 11009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11001,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11001,
											"end": 11009,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11001,
											"end": 11009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11001,
											"end": 11009,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11001,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11001,
											"end": 11009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "636F6E747261637420616C726561647920706175736564000000000000000000"
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 10992,
											"end": 11037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11062,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11047,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11047,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 11062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10948,
											"end": 11100,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2579,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2843,
											"end": 2856,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2875,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2889,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 967,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000"
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6664,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6728,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6728,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6728,
											"end": 6740,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6728,
											"end": 6740,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6728,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6742,
											"end": 6748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6722,
											"end": 6749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6722,
											"end": 6749,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6722,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6766,
											"end": 6770,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6759,
											"end": 6770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6759,
											"end": 6770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6777,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6177,
											"end": 6181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6193,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6202,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6202,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6202,
											"end": 6214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6202,
											"end": 6214,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6202,
											"end": 6214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6216,
											"end": 6223,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6264,
											"end": 6279,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6237,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6237,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6237,
											"end": 6249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6237,
											"end": 6249,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6237,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6251,
											"end": 6258,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6259,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6225,
											"end": 6263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6225,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6193,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6193,
											"end": 6322,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6193,
											"end": 6322,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6193,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6339,
											"end": 6343,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6332,
											"end": 6343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6332,
											"end": 6343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6350,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3680,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3680,
											"end": 3692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3692,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3680,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3694,
											"end": 3703,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3705,
											"end": 3711,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3733,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3722,
											"end": 3733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3740,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 3887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3917,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 3923,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3932,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3899,
											"end": 3933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3899,
											"end": 3933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3940,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1501,
											"end": 1534,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1534,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1518,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1518,
											"end": 1534,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1534,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1518,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1534,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1501,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1501,
											"end": 1551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1551,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1551,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1551,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1539,
											"end": 1551,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1551,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1551,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1539,
											"end": 1551,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1551,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1551,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1501,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "PUSH",
											"source": 4,
											"value": "2E"
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "PUSH data",
											"source": 4,
											"value": "7A2A4E26842155EA933FE6EB6E3137EB5A296DCDF55721C552BE7B4C3CC23759"
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "PUSH",
											"source": 4,
											"value": "2E"
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1493,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 1632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1649,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 1649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 1649,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1659,
											"end": 1757,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1659,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1659,
											"end": 1757,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1693,
											"end": 1706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1706,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1746,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1659,
											"end": 1757,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1659,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1292,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1348,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1337,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1328,
											"end": 1337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1394,
											"end": 1399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1388,
											"end": 1408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1388,
											"end": 1408,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1388,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1797,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1845,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 1779,
											"end": 1845,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1834,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1826,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1826,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1845,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 1779,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1415,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 967,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 949,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2117,
											"end": 2139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2117,
											"end": 2139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2139,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2109,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2226,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2269,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9789,
											"end": 10121,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9789,
											"end": 10121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 9900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9882,
											"end": 9901,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9882,
											"end": 9901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9882,
											"end": 9887,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9882,
											"end": 9901,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9882,
											"end": 9901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9882,
											"end": 9901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9882,
											"end": 9901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "PUSH data",
											"source": 0,
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 9874,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9979,
											"end": 9980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9960,
											"end": 9981,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9960,
											"end": 9981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9960,
											"end": 9981,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9960,
											"end": 9981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9960,
											"end": 9981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9960,
											"end": 9981,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "PUSH data",
											"source": 0,
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 9952,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10042,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10043,
											"end": 10048,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10050,
											"end": 10057,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10031,
											"end": 10058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10067,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10031,
											"end": 10067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10107,
											"end": 10113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10114,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9789,
											"end": 10121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9789,
											"end": 10121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9789,
											"end": 10121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9789,
											"end": 10121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7452,
											"end": 8131,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7452,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7563,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7550,
											"end": 7574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7574,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "726563697069656E74206973206261636B6C6973746564000000000000000000"
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 7541,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7635,
											"end": 7641,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7621,
											"end": 7642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "73656E646572206973206261636B6C6973746564000000000000000000000000"
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 7612,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7686,
											"end": 7694,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7686,
											"end": 7694,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7686,
											"end": 7694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7686,
											"end": 7694,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7686,
											"end": 7694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7686,
											"end": 7694,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7686,
											"end": 7694,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7686,
											"end": 7694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7686,
											"end": 7694,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7686,
											"end": 7694,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7686,
											"end": 7694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7694,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "PUSH data",
											"source": 0,
											"value": "28DC9A1D7FB79E3F8D5F513EFC3842FEBBEDA11BF422847CF16844AD128530AF"
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7677,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7782,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7764,
											"end": 7784,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7764,
											"end": 7784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7784,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7764,
											"end": 7784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7784,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "PUSH data",
											"source": 0,
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 7756,
											"end": 7826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 7866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7844,
											"end": 7867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7844,
											"end": 7867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7867,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "PUSH data",
											"source": 0,
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 7836,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 7960,
											"end": 7966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7947,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7954,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7938,
											"end": 7959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 7938,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 7927,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7928,
											"end": 7934,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 8009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 8009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 8009,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 8009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8067,
											"end": 8073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8052,
											"end": 8061,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 8042,
											"end": 8066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8029,
											"end": 8038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8074,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8117,
											"end": 8123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8124,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7452,
											"end": 8131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7452,
											"end": 8131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7452,
											"end": 8131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7452,
											"end": 8131,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "208"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "210"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "208"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "210"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9022,
											"end": 9364,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9022,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9118,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9097,
											"end": 9118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9118,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9097,
											"end": 9118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9118,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9118,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "PUSH data",
											"source": 0,
											"value": "B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855"
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 9089,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 9211,
											"end": 9217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "PUSH data",
											"source": 0,
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9197,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9198,
											"end": 9205,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 9188,
											"end": 9210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 9188,
											"end": 9256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9177,
											"end": 9184,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9256,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 9298,
											"end": 9304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9293,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9281,
											"end": 9293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 9281,
											"end": 9297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9281,
											"end": 9305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9281,
											"end": 9305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9281,
											"end": 9305,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 9281,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9266,
											"end": 9278,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9266,
											"end": 9305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9266,
											"end": 9305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9266,
											"end": 9305,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9266,
											"end": 9305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9329,
											"end": 9336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9350,
											"end": 9356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9320,
											"end": 9357,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9022,
											"end": 9364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9022,
											"end": 9364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9022,
											"end": 9364,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8401,
											"end": 8703,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8401,
											"end": 8703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8476,
											"end": 8497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8476,
											"end": 8497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8483,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8476,
											"end": 8497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8476,
											"end": 8497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 8468,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8559,
											"end": 8571,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8559,
											"end": 8571,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8559,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 8559,
											"end": 8575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8544,
											"end": 8556,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8544,
											"end": 8583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8544,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8544,
											"end": 8583,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8544,
											"end": 8583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 8637,
											"end": 8643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8624,
											"end": 8631,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 8614,
											"end": 8636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8614,
											"end": 8644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8614,
											"end": 8644,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 8614,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8602,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8603,
											"end": 8610,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8593,
											"end": 8611,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8644,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8593,
											"end": 8644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8680,
											"end": 8687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8676,
											"end": 8677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8689,
											"end": 8695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8696,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8703,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1941,
											"end": 2053,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1941,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 1993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2040,
											"end": 2044,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2046,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2046,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 2053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 2053,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 11262,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"28DC9A1D7FB79E3F8D5F513EFC3842FEBBEDA11BF422847CF16844AD128530AF": "746f6b656e206f7065726174696f6e73207061757365642064756520746f20736563757269747920726561736f6e73",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"7A2A4E26842155EA933FE6EB6E3137EB5A296DCDF55721C552BE7B4C3CC23759": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blackList(address)": "4838d165",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize(string,string,uint8,uint256,bool,address)": "ef3ebcb8",
							"mint(uint256)": "a0712d68",
							"mintable()": "4bf365df",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"removeFromBlacklist(address)": "537df3b6",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"blackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"mintable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"initialize(string,string,uint8,uint256,bool,address)\":{\"details\":\"sets initials supply and the owner\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.     * Requirements     * - `msg.sender` must be the token owner - `_mintable` must be true\"},\"mintable()\":{\"details\":\"Returns if the token is mintable or not\"},\"name()\":{\"details\":\"Returns the token name.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":\"BEP20TokenImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol\":{\"keccak256\":\"0x9d2fbdfa6a2cb9dfcab9acd18949d6a8f45dd8cf8a46ebfa926ec3cf9d6f578d\",\"urls\":[\"bzz-raw://a54147120dca8094731fbe2f1aa0044396ee9cdbbdf358d0246ac8c94d1ce833\",\"dweb:/ipfs/QmX2YQkupLGvrq1YVaPQaZoAYnFb5cFa6GRQdtizruDJgt\"]},\"github/bnb-chain/canonical-upgradeable-bep20/contracts/IBEP20.sol\":{\"keccak256\":\"0x7f12fc7a817a665780954de5c41ee069b7e8872a6c11ae27d75924537223b08f\",\"urls\":[\"bzz-raw://dde33c487f02c2302e110017bccc6599c1f6d94fee58e22388a83f98c09004bd\",\"dweb:/ipfs/QmY7hCR7uwft1MZG24DWqju7Rk5qnJby7WVyU2bpaDXutL\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x9486045e189facd2e868ece35249872598ef03f1087fb6fa4d1161842daa2287\",\"urls\":[\"bzz-raw://77c3a04ef8453788b14b1ebbc24dd3f0a18ceb2615cd156aac949a611e552af8\",\"dweb:/ipfs/QmcmqWGguRM3iLuF57tcyrN3F6EA63kzeNkDfQuteBnurr\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"openzeppelin-solidity/contracts/proxy/Initializable.sol\":{\"keccak256\":\"0x9abeffe138f098b16557187383ba0f9e8503602fa95cd668132986ee115237ed\",\"urls\":[\"bzz-raw://fb863d688f8bf04b846369451afba15e8129b2ee16bd1631c12138c262d1bf68\",\"dweb:/ipfs/QmRE3EmJ1T4Hg5HjGHVupP2a3Vrnd8jRY8GtB6J52QNX9z\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1218,
								"contract": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1220,
								"contract": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 18,
								"contract": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 24,
								"contract": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 26,
								"contract": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 28,
								"contract": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 30,
								"contract": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 32,
								"contract": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							},
							{
								"astId": 34,
								"contract": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_owner",
								"offset": 1,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 42,
								"contract": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_mintable",
								"offset": 21,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 44,
								"contract": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "isPaused",
								"offset": 22,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 52,
								"contract": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "isBlacklisted",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github/bnb-chain/canonical-upgradeable-bep20/contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github/bnb-chain/canonical-upgradeable-bep20/contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github/bnb-chain/canonical-upgradeable-bep20/contracts/IBEP20.sol\":{\"keccak256\":\"0x7f12fc7a817a665780954de5c41ee069b7e8872a6c11ae27d75924537223b08f\",\"urls\":[\"bzz-raw://dde33c487f02c2302e110017bccc6599c1f6d94fee58e22388a83f98c09004bd\",\"dweb:/ipfs/QmY7hCR7uwft1MZG24DWqju7Rk5qnJby7WVyU2bpaDXutL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-solidity/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa264697066735822122018cfcabe6ecebffb70bb757e29b34b97366a638f67ba8818e572ecb1ddfa493164736f6c63430006030033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018cfcabe6ecebffb70bb757e29b34b97366a638f67ba8818e572ecb1ddfa493164736f6c63430006030033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xCF 0xCA 0xBE PUSH15 0xCEBFFB70BB757E29B34B97366A638F PUSH8 0xBA8818E572ECB1DD STATICCALL 0x49 BALANCE PUSH5 0x736F6C6343 STOP MOD SUB STOP CALLER ",
							"sourceMap": "630:6594:3:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018cfcabe6ecebffb70bb757e29b34b97366a638f67ba8818e572ecb1ddfa493164736f6c63430006030033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xCF 0xCA 0xBE PUSH15 0xCEBFFB70BB757E29B34B97366A638F PUSH8 0xBA8818E572ECB1DD STATICCALL 0x49 BALANCE PUSH5 0x736F6C6343 STOP MOD SUB STOP CALLER ",
							"sourceMap": "630:6594:3:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122018cfcabe6ecebffb70bb757e29b34b97366a638f67ba8818e572ecb1ddfa493164736f6c63430006030033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity/contracts/proxy/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}. * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.",
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}. * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/proxy/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/proxy/Initializable.sol\":{\"keccak256\":\"0x9abeffe138f098b16557187383ba0f9e8503602fa95cd668132986ee115237ed\",\"urls\":[\"bzz-raw://fb863d688f8bf04b846369451afba15e8129b2ee16bd1631c12138c262d1bf68\",\"dweb:/ipfs/QmRE3EmJ1T4Hg5HjGHVupP2a3Vrnd8jRY8GtB6J52QNX9z\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1218,
								"contract": "openzeppelin-solidity/contracts/proxy/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1220,
								"contract": "openzeppelin-solidity/contracts/proxy/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220763d945e2c3898ce027a320e0cc6e9063e333de85024d370761d4082e60f1a7964736f6c63430006030033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220763d945e2c3898ce027a320e0cc6e9063e333de85024d370761d4082e60f1a7964736f6c63430006030033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x3D945E2C3898CE027A320E0CC6E9063E333DE85024D370 PUSH23 0x1D4082E60F1A7964736F6C634300060300330000000000 ",
							"sourceMap": "134:7684:5:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220763d945e2c3898ce027a320e0cc6e9063e333de85024d370761d4082e60f1a7964736f6c63430006030033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x3D945E2C3898CE027A320E0CC6E9063E333DE85024D370 PUSH23 0x1D4082E60F1A7964736F6C634300060300330000000000 ",
							"sourceMap": "134:7684:5:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220763d945e2c3898ce027a320e0cc6e9063e333de85024d370761d4082e60f1a7964736f6c63430006030033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol": {
				"ast": {
					"absolutePath": "github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20TokenImplementation.sol",
					"exportedSymbols": {
						"BEP20TokenImplementation": [
							753
						]
					},
					"id": 754,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "github/bnb-chain/canonical-upgradeable-bep20/contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 855,
							"src": "25:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/GSN/Context.sol",
							"file": "openzeppelin-solidity/contracts/GSN/Context.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 858,
							"src": "48:57:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
							"file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 1213,
							"src": "106:59:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/proxy/Initializable.sol",
							"file": "openzeppelin-solidity/contracts/proxy/Initializable.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 1277,
							"src": "166:65:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 6,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1595,
										"src": "270:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1595",
											"typeString": "contract Context"
										}
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "270:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 8,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 854,
										"src": "279:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$854",
											"typeString": "contract IBEP20"
										}
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "279:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 10,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1276,
										"src": "287:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$1276",
											"typeString": "contract Initializable"
										}
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "287:13:0"
								}
							],
							"contractDependencies": [
								854,
								1276,
								1595
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 753,
							"linearizedBaseContracts": [
								753,
								1276,
								854,
								1595
							],
							"name": "BEP20TokenImplementation",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 14,
									"libraryName": {
										"contractScope": null,
										"id": 12,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1212,
										"src": "313:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1212",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "307:27:0",
									"typeName": {
										"id": 13,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "326:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 18,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 753,
									"src": "340:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 15,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "349:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "340:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 16,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "360:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 24,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 753,
									"src": "392:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "401:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "392:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 22,
											"keyType": {
												"id": 20,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "421:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "412:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 21,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "432:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 26,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 753,
									"src": "467:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "467:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 753,
									"src": "501:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 27,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "501:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 30,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 753,
									"src": "527:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 29,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "527:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 32,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 753,
									"src": "555:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 31,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "555:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 34,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 753,
									"src": "585:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 33,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "585:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 40,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 40,
												"src": "640:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 40,
												"src": "671:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "639:57:0"
									},
									"src": "613:84:0"
								},
								{
									"constant": false,
									"id": 42,
									"name": "_mintable",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 753,
									"src": "703:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 41,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "703:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 44,
									"name": "isPaused",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 753,
									"src": "731:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 43,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "731:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "780:7:0",
										"statements": []
									},
									"documentation": null,
									"id": 48,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:0:0"
									},
									"scope": 753,
									"src": "759:28:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 52,
									"name": "isBlacklisted",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 753,
									"src": "793:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 51,
										"keyType": {
											"id": 49,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "801:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "793:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 50,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "810:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "939:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 56,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "957:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 57,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "967:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "967:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "957:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "981:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "949:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "949:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "949:67:0"
											},
											{
												"id": 63,
												"nodeType": "PlaceholderStatement",
												"src": "1026:1:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "836:77:0",
										"text": "@dev Throws if called by any account other than the owner."
									},
									"id": 65,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "936:2:0"
									},
									"src": "918:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1246:169:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 83,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1256:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 84,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "1265:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1256:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "1256:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 87,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1280:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 88,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1288:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1280:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1280:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 91,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 92,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1312:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1302:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1302:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 95,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1328:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 96,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1340:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1328:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1328:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 99,
														"name": "_mintable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1358:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 100,
														"name": "mintable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "1370:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1358:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1358:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 104,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "1394:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 105,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "1401:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 103,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "1388:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1388:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1388:20:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "1040:58:0",
										"text": "@dev sets initials supply and the owner"
									},
									"functionSelector": "ef3ebcb8",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 81,
											"modifierName": {
												"argumentTypes": null,
												"id": 80,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1259,
												"src": "1234:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1234:11:0"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "1123:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 67,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1123:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "1143:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 69,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1143:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "1165:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 71,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1165:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "1181:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"name": "mintable",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "1197:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1197:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "1212:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1122:104:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:0"
									},
									"scope": 753,
									"src": "1103:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1797:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 116,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "1833:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1849:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1841:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 117,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1841:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1841:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 115,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1812:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1812:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "EmitStatement",
												"src": "1807:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 123,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1862:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1879:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1871:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 124,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1871:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1871:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1862:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1862:19:0"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1421:325:0",
										"text": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n    * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 113,
											"modifierName": {
												"argumentTypes": null,
												"id": 112,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 65,
												"src": "1787:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1787:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1777:2:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1797:0:0"
									},
									"scope": 753,
									"src": "1751:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "2099:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 140,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "2117:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2137:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2129:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 141,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2129:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2129:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2117:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2141:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2109:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2109:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 150,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "2218:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 151,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "2226:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 149,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "2197:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2197:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "EmitStatement",
												"src": "2192:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 154,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2245:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 155,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2254:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2245:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "2245:17:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1894:138:0",
										"text": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 137,
											"modifierName": {
												"argumentTypes": null,
												"id": 136,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 65,
												"src": "2089:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2089:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 159,
												"src": "2064:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2063:18:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2099:0:0"
									},
									"scope": 753,
									"src": "2037:232:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "2392:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 165,
													"name": "_mintable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 42,
													"src": "2409:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 164,
												"id": 166,
												"nodeType": "Return",
												"src": "2402:16:0"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "2275:63:0",
										"text": "@dev Returns if the token is mintable or not"
									},
									"functionSelector": "4bf365df",
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintable",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:2:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 168,
												"src": "2386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2385:6:0"
									},
									"scope": 753,
									"src": "2343:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										785
									],
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "2549:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 175,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "2566:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 174,
												"id": 176,
												"nodeType": "Return",
												"src": "2559:13:0"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2431:52:0",
										"text": "@dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 171,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2517:8:0"
									},
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2505:2:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 178,
												"src": "2540:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2539:9:0"
									},
									"scope": 753,
									"src": "2488:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										767
									],
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "2700:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 185,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 32,
													"src": "2717:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 184,
												"id": 186,
												"nodeType": "Return",
												"src": "2710:16:0"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "2585:51:0",
										"text": "@dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2670:8:0"
									},
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2658:2:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 188,
												"src": "2693:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 182,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2693:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2692:7:0"
									},
									"scope": 753,
									"src": "2641:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										773
									],
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "2858:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 195,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "2875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 194,
												"id": 196,
												"nodeType": "Return",
												"src": "2868:14:0"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2739:49:0",
										"text": "@dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 191,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2820:8:0"
									},
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2808:2:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 198,
												"src": "2843:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 192,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2843:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2842:15:0"
									},
									"scope": 753,
									"src": "2793:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										779
									],
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "3008:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 205,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "3025:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 204,
												"id": 206,
												"nodeType": "Return",
												"src": "3018:12:0"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "2895:45:0",
										"text": "@dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 201,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2970:8:0"
									},
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2958:2:0"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 208,
												"src": "2993:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 202,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2993:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2992:15:0"
									},
									"scope": 753,
									"src": "2945:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										761
									],
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "3160:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 215,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "3177:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 216,
												"nodeType": "Return",
												"src": "3170:19:0"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3043:48:0",
										"text": "@dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 211,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3128:8:0"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3116:2:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 218,
												"src": "3151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3150:9:0"
									},
									"scope": 753,
									"src": "3096:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										793
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "3330:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 227,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "3347:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 229,
													"indexExpression": {
														"argumentTypes": null,
														"id": 228,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "3357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3347:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "3340:25:0"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "3202:46:0",
										"text": "@dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:0"
									},
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 232,
												"src": "3272:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3271:17:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 232,
												"src": "3321:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3320:9:0"
									},
									"scope": 753,
									"src": "3253:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										803
									],
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "3660:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 244,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "3680:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3680:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "3694:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 247,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3705:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 243,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "3670:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3670:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "3670:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3729:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 242,
												"id": 251,
												"nodeType": "Return",
												"src": "3722:11:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "3378:191:0",
										"text": "@dev See {BEP20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 239,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3636:8:0"
									},
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 253,
												"src": "3592:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 253,
												"src": "3611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3591:35:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 253,
												"src": "3654:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3654:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3653:6:0"
									},
									"scope": 753,
									"src": "3574:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										813
									],
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "3889:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 264,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "3906:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 266,
														"indexExpression": {
															"argumentTypes": null,
															"id": 265,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "3918:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3906:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 268,
													"indexExpression": {
														"argumentTypes": null,
														"id": 267,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3925:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3906:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 269,
												"nodeType": "Return",
												"src": "3899:34:0"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "3746:46:0",
										"text": "@dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 260,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3857:8:0"
									},
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 271,
												"src": "3816:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 271,
												"src": "3831:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3815:32:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 271,
												"src": "3880:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3879:9:0"
									},
									"scope": 753,
									"src": "3797:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										823
									],
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "4160:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 283,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "4179:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4179:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 285,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 286,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4202:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 282,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "4170:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4170:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "4170:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4226:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 281,
												"id": 290,
												"nodeType": "Return",
												"src": "4219:11:0"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "3946:126:0",
										"text": "@dev See {BEP20-approve}.\n     * Requirements:\n     * - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 278,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4136:8:0"
									},
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "4094:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "4111:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4093:33:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "4154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4153:6:0"
									},
									"scope": 753,
									"src": "4077:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										835
									],
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "4800:205:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 306,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "4820:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 307,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "4828:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 308,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "4839:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 305,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "4810:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4810:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "4810:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 312,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "4865:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 313,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "4873:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4873:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "4925:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4933:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 315,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "4887:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 317,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 316,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 295,
																			"src": "4899:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4887:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 320,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 318,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "4907:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4907:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4887:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1163,
																"src": "4887:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4887:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 311,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "4856:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4856:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "4856:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4994:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 304,
												"id": 328,
												"nodeType": "Return",
												"src": "4987:11:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "4243:446:0",
										"text": "@dev See {BEP20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`."
									},
									"functionSelector": "23b872dd",
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 301,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4776:8:0"
									},
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "4716:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "4732:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "4751:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4715:51:0"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "4794:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4794:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4793:6:0"
									},
									"scope": 753,
									"src": "4694:311:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5485:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 341,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "5504:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5504:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 343,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "5518:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 351,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "5566:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 344,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "5527:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 347,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 345,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "5539:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5539:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5527:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 349,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 348,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "5553:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5527:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1039,
																"src": "5527:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5527:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 340,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5495:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5495:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "5495:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5595:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 339,
												"id": 356,
												"nodeType": "Return",
												"src": "5588:11:0"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "5011:383:0",
										"text": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "5426:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "5443:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5425:37:0"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "5479:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5479:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5478:6:0"
									},
									"scope": 753,
									"src": "5399:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "6183:167:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 369,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "6202:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6202:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 371,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6216:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 379,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "6264:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6281:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 372,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "6225:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 375,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 373,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "6237:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6237:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6225:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 377,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 376,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "6251:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6225:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1163,
																"src": "6225:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6225:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "6193:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6193:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "6193:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6339:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 367,
												"id": 385,
												"nodeType": "Return",
												"src": "6332:11:0"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "5612:475:0",
										"text": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "6119:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "6136:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6118:42:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "6177:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 365,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6177:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6176:6:0"
									},
									"scope": 753,
									"src": "6092:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "6654:123:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 398,
															"name": "_mintable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "6672:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7468697320746f6b656e206973206e6f74206d696e7461626c65",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6683:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															},
															"value": "this token is not mintable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															}
														],
														"id": 397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6664:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6664:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "6664:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 403,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "6728:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6728:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 405,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "6742:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 402,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "6722:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6722:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "6722:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6766:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 396,
												"id": 409,
												"nodeType": "Return",
												"src": "6759:11:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "6356:231:0",
										"text": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n     * Requirements\n     * - `msg.sender` must be the token owner\n- `_mintable` must be true"
									},
									"functionSelector": "a0712d68",
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 393,
											"modifierName": {
												"argumentTypes": null,
												"id": 392,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 65,
												"src": "6629:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6629:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "6606:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6605:16:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "6648:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6648:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6647:6:0"
									},
									"scope": 753,
									"src": "6592:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "6913:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 420,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "6929:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6929:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 422,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "6943:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 419,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "6923:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6923:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "6923:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6967:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 418,
												"id": 426,
												"nodeType": "Return",
												"src": "6960:11:0"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "6783:73:0",
										"text": "@dev Burn `amount` tokens and decreasing the total supply."
									},
									"functionSelector": "42966c68",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "6875:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6874:16:0"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "6907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 416,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6906:6:0"
									},
									"scope": 753,
									"src": "6861:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "7531:600:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7549:25:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 439,
																	"name": "isBlacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "7550:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 440,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "7564:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7550:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "726563697069656e74206973206261636b6c6973746564",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7576:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25dde3d4848362175332bf7efa1c8ec2068da0e3dd64a496e5201a228c208d1b",
																"typeString": "literal_string \"recipient is backlisted\""
															},
															"value": "recipient is backlisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25dde3d4848362175332bf7efa1c8ec2068da0e3dd64a496e5201a228c208d1b",
																"typeString": "literal_string \"recipient is backlisted\""
															}
														],
														"id": 438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7541:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7541:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "7541:61:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7620:22:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 447,
																	"name": "isBlacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "7621:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 449,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 448,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "7635:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7621:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73656e646572206973206261636b6c6973746564",
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7644:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6539217ab81afaccc86cb47122805dfde4750aeef9f3593046b842bfc39a16be",
																"typeString": "literal_string \"sender is backlisted\""
															},
															"value": "sender is backlisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6539217ab81afaccc86cb47122805dfde4750aeef9f3593046b842bfc39a16be",
																"typeString": "literal_string \"sender is backlisted\""
															}
														],
														"id": 446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7612:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7612:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "7612:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7685:9:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 455,
																"name": "isPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "7686:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "746f6b656e206f7065726174696f6e73207061757365642064756520746f20736563757269747920726561736f6e73",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7696:49:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28dc9a1d7fb79e3f8d5f513efc3842febbeda11bf422847cf16844ad128530af",
																"typeString": "literal_string \"token operations paused due to security reasons\""
															},
															"value": "token operations paused due to security reasons"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28dc9a1d7fb79e3f8d5f513efc3842febbeda11bf422847cf16844ad128530af",
																"typeString": "literal_string \"token operations paused due to security reasons\""
															}
														],
														"id": 454,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7677:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7677:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "7677:69:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 461,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "7764:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7782:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7774:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 462,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7774:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7774:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7764:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7786:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7756:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7756:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "7756:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 471,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "7844:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7865:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7857:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 472,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7857:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7857:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7844:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7869:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7836:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7836:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "7836:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 480,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "7918:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 482,
														"indexExpression": {
															"argumentTypes": null,
															"id": 481,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "7928:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7918:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 487,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "7960:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7968:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 483,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "7938:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 485,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 484,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "7948:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7938:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1163,
															"src": "7938:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7938:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7918:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "7918:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 492,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "8019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 494,
														"indexExpression": {
															"argumentTypes": null,
															"id": 493,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "8029:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8019:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 499,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "8067:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 495,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "8042:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 497,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 496,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "8052:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8042:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1039,
															"src": "8042:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8042:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8019:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "8019:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 504,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "8098:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 505,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "8106:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 506,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "8117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 503,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "8089:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8089:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "EmitStatement",
												"src": "8084:40:0"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "6984:463:0",
										"text": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 510,
												"src": "7471:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 510,
												"src": "7487:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 510,
												"src": "7506:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7470:51:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7531:0:0"
									},
									"scope": 753,
									"src": "7452:679:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "8458:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 519,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "8476:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8495:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8487:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 520,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8487:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8487:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8476:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8499:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8468:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "8468:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 528,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "8544:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 531,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "8576:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 529,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "8559:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1039,
															"src": "8559:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8559:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8544:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "8544:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 535,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "8593:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 537,
														"indexExpression": {
															"argumentTypes": null,
															"id": 536,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "8603:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8593:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 542,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "8637:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 538,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "8614:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 540,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 539,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "8624:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8614:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1039,
															"src": "8614:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8614:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8593:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "8593:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8676:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8668:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 547,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8668:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8668:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 551,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "8680:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 552,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "8689:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 546,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "8659:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8659:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "EmitStatement",
												"src": "8654:42:0"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "8137:259:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address."
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "8416:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "8433:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8415:33:0"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8458:0:0"
									},
									"scope": 753,
									"src": "8401:302:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "9079:285:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 565,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "9097:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9116:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9108:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 566,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9108:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9108:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9097:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9120:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 564,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9089:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9089:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "9089:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 574,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "9167:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 576,
														"indexExpression": {
															"argumentTypes": null,
															"id": 575,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "9177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9167:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 581,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "9211:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9219:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 577,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "9188:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 579,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 578,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "9198:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9188:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1163,
															"src": "9188:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9188:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9167:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "9167:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 586,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "9266:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 589,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "9298:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 587,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "9281:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1061,
															"src": "9281:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9281:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9266:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "9266:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 594,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "9329:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9346:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9338:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 595,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9338:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9338:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 599,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "9350:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 593,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "9320:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9320:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "EmitStatement",
												"src": "9315:42:0"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "8709:308:0",
										"text": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a {Transfer} event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens."
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 603,
												"src": "9037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 603,
												"src": "9054:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9036:33:0"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9079:0:0"
									},
									"scope": 753,
									"src": "9022:342:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "9864:257:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 614,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "9882:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9899:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9891:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9891:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9891:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9882:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9903:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9874:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9874:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "9874:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 624,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "9960:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9979:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9971:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 625,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9971:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9971:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9960:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9983:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9952:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9952:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "9952:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 633,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "10031:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 636,
															"indexExpression": {
																"argumentTypes": null,
																"id": 634,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "10043:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10031:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 637,
														"indexExpression": {
															"argumentTypes": null,
															"id": 635,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "10050:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10031:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 638,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "10061:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10031:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "10031:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 642,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "10091:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 643,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "10098:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 644,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "10107:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 641,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "10082:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10082:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "EmitStatement",
												"src": "10077:37:0"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "9370:414:0",
										"text": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an {Approval} event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "9807:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "9822:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "9839:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9806:48:0"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9864:0:0"
									},
									"scope": 753,
									"src": "9789:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "10360:168:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 657,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "10376:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 658,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "10385:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 656,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "10370:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10370:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "10370:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 662,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "10411:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 663,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "10420:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10420:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 672,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "10473:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10481:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 665,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "10434:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 667,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 666,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "10446:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10434:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 670,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 668,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "10455:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10455:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10434:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1163,
																"src": "10434:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10434:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 661,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "10402:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10402:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "10402:119:0"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "10127:167:0",
										"text": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n     * See {_burn} and {_approve}."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "10318:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "10335:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10317:33:0"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10360:0:0"
									},
									"scope": 753,
									"src": "10299:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "10585:143:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10603:21:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 686,
																	"name": "isBlacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "10604:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 688,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 687,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "10618:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10604:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7573657220616c726561647920626c61636b6c6973746564",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10626:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72b96573b0647e90a5abdd60b347d3325449dda002fbee2f5c4e29e25f0e5528",
																"typeString": "literal_string \"user already blacklisted\""
															},
															"value": "user already blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72b96573b0647e90a5abdd60b347d3325449dda002fbee2f5c4e29e25f0e5528",
																"typeString": "literal_string \"user already blacklisted\""
															}
														],
														"id": 685,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10595:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10595:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "10595:58:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 693,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "10663:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 695,
														"indexExpression": {
															"argumentTypes": null,
															"id": 694,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "10677:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10663:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10686:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10663:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "10663:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4838d165",
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 683,
											"modifierName": {
												"argumentTypes": null,
												"id": 682,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 65,
												"src": "10575:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10575:9:0"
										}
									],
									"name": "blackList",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "10553:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10552:15:0"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10585:0:0"
									},
									"scope": 753,
									"src": "10534:194:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "10799:143:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 708,
																"name": "isBlacklisted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "10817:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 710,
															"indexExpression": {
																"argumentTypes": null,
																"id": 709,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "10831:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10817:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7573657220616c72656164792077686974656c6973746564",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10839:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74a80b889ef1caacac95d210c4448e6c283fba38bbf809d63630c320cf8cf9f5",
																"typeString": "literal_string \"user already whitelisted\""
															},
															"value": "user already whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74a80b889ef1caacac95d210c4448e6c283fba38bbf809d63630c320cf8cf9f5",
																"typeString": "literal_string \"user already whitelisted\""
															}
														],
														"id": 707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10809:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "10809:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 714,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "10876:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 716,
														"indexExpression": {
															"argumentTypes": null,
															"id": 715,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "10890:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10876:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10899:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10876:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "10876:28:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "537df3b6",
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 705,
											"modifierName": {
												"argumentTypes": null,
												"id": 704,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 65,
												"src": "10789:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10789:9:0"
										}
									],
									"name": "removeFromBlacklist",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 721,
												"src": "10767:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10766:15:0"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10799:0:0"
									},
									"scope": 753,
									"src": "10738:204:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "10982:118:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11000:9:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 727,
																"name": "isPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "11001:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "636f6e747261637420616c726561647920706175736564",
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11011:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e63e9cbad15421439a2bf4e029ce7b305588e23cc13f0dfad09e261ffabbeeb",
																"typeString": "literal_string \"contract already paused\""
															},
															"value": "contract already paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e63e9cbad15421439a2bf4e029ce7b305588e23cc13f0dfad09e261ffabbeeb",
																"typeString": "literal_string \"contract already paused\""
															}
														],
														"id": 726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10992:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10992:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "10992:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 732,
														"name": "isPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "11047:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11058:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11047:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "11047:15:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8456cb59",
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 724,
											"modifierName": {
												"argumentTypes": null,
												"id": 723,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 65,
												"src": "10972:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10972:9:0"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10962:2:0"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10982:0:0"
									},
									"scope": 753,
									"src": "10948:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "11142:118:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 743,
															"name": "isPaused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "11160:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "636f6e747261637420616c726561647920706175736564",
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11170:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e63e9cbad15421439a2bf4e029ce7b305588e23cc13f0dfad09e261ffabbeeb",
																"typeString": "literal_string \"contract already paused\""
															},
															"value": "contract already paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e63e9cbad15421439a2bf4e029ce7b305588e23cc13f0dfad09e261ffabbeeb",
																"typeString": "literal_string \"contract already paused\""
															}
														],
														"id": 742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11152:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11152:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "11152:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 747,
														"name": "isPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "11206:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11217:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "11206:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "11206:16:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3f4ba83a",
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 740,
											"modifierName": {
												"argumentTypes": null,
												"id": 739,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 65,
												"src": "11132:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11132:9:0"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11122:2:0"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11142:0:0"
									},
									"scope": 753,
									"src": "11106:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 754,
							"src": "233:11029:0"
						}
					],
					"src": "0:11262:0"
				},
				"id": 0
			},
			"github/bnb-chain/canonical-upgradeable-bep20/contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "github/bnb-chain/canonical-upgradeable-bep20/contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							854
						]
					},
					"id": 855,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 755,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 854,
							"linearizedBaseContracts": [
								854
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "48:66:1",
										"text": "@dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "139:2:1"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 761,
												"src": "165:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "164:9:1"
									},
									"scope": 854,
									"src": "119:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "180:51:1",
										"text": "@dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "253:2:1"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 767,
												"src": "279:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 764,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "279:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "278:7:1"
									},
									"scope": 854,
									"src": "236:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "292:49:1",
										"text": "@dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:2:1"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "387:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 770,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "387:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "386:15:1"
									},
									"scope": 854,
									"src": "346:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "408:45:1",
										"text": "@dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 779,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "471:2:1"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 779,
												"src": "497:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 776,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "497:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "496:15:1"
									},
									"scope": 854,
									"src": "458:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "518:52:1",
										"text": "@dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:2:1"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 785,
												"src": "618:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "617:9:1"
									},
									"scope": 854,
									"src": "575:52:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "633:72:1",
										"text": "@dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 793,
												"src": "729:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "728:17:1"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 793,
												"src": "769:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "768:9:1"
									},
									"scope": 854,
									"src": "710:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "784:209:1",
										"text": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 803,
												"src": "1016:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 803,
												"src": "1035:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1015:35:1"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 803,
												"src": "1069:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1069:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1068:6:1"
									},
									"scope": 854,
									"src": "998:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "1081:264:1",
										"text": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 813,
												"src": "1369:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 813,
												"src": "1385:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1368:33:1"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 813,
												"src": "1425:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1424:9:1"
									},
									"scope": 854,
									"src": "1350:84:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "1440:642:1",
										"text": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "2104:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "2121:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2103:33:1"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "2155:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 820,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2155:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2154:6:1"
									},
									"scope": 854,
									"src": "2087:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "2167:296:1",
										"text": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 835,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 835,
												"src": "2490:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 835,
												"src": "2506:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 835,
												"src": "2525:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2489:51:1"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 835,
												"src": "2559:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 832,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2559:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2558:6:1"
									},
									"scope": 854,
									"src": "2468:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "2571:158:1",
										"text": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero."
									},
									"id": 844,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 844,
												"src": "2749:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 844,
												"src": "2771:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 844,
												"src": "2791:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2748:57:1"
									},
									"src": "2734:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "2812:148:1",
										"text": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance."
									},
									"id": 853,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 853,
												"src": "2980:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 853,
												"src": "3003:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 853,
												"src": "3028:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2979:63:1"
									},
									"src": "2965:78:1"
								}
							],
							"scope": 855,
							"src": "25:3020:1"
						}
					],
					"src": "0:3046:1"
				},
				"id": 1
			},
			"openzeppelin-solidity/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/GSN/Context.sol",
					"exportedSymbols": {},
					"id": 858,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 856,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 857,
							"nodeType": "ImportDirective",
							"scope": 858,
							"sourceUnit": 1596,
							"src": "66:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "33:64:2"
				},
				"id": 2
			},
			"openzeppelin-solidity/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1212
						]
					},
					"id": 1213,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 859,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 860,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:3",
								"text": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1212,
							"linearizedBaseContracts": [
								1212
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "865:98:3",
										"statements": [
											{
												"assignments": [
													873
												],
												"declarations": [
													{
														"constant": false,
														"id": 873,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 890,
														"src": "875:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 872,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 877,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 874,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "887:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 875,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "891:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 878,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "906:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 879,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "910:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 885,
												"nodeType": "IfStatement",
												"src": "902:28:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 883,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 871,
													"id": 884,
													"nodeType": "Return",
													"src": "913:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 887,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "954:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 888,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 871,
												"id": 889,
												"nodeType": "Return",
												"src": "940:16:3"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:3",
										"text": "@dev Returns the addition of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._"
									},
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 891,
												"src": "805:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 891,
												"src": "816:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:3"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 891,
												"src": "850:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 891,
												"src": "856:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:3"
									},
									"scope": 1212,
									"src": "789:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "1185:75:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 903,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "1199:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 904,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "1203:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 910,
												"nodeType": "IfStatement",
												"src": "1195:28:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 908,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 902,
													"id": 909,
													"nodeType": "Return",
													"src": "1206:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 912,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "1247:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 913,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "1251:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 915,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 902,
												"id": 916,
												"nodeType": "Return",
												"src": "1233:20:3"
											}
										]
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:3",
										"text": "@dev Returns the substraction of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._"
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "1125:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "1136:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:3"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "1170:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 898,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "1176:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:3"
									},
									"scope": 1212,
									"src": "1109:151:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 958,
										"nodeType": "Block",
										"src": "1484:359:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 930,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "1716:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 937,
												"nodeType": "IfStatement",
												"src": "1712:28:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 935,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 929,
													"id": 936,
													"nodeType": "Return",
													"src": "1724:16:3"
												}
											},
											{
												"assignments": [
													939
												],
												"declarations": [
													{
														"constant": false,
														"id": 939,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 958,
														"src": "1750:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 938,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 943,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 940,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "1762:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 941,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "1766:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 944,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "1781:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 945,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "1785:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 947,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "1790:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 953,
												"nodeType": "IfStatement",
												"src": "1777:33:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 951,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 929,
													"id": 952,
													"nodeType": "Return",
													"src": "1793:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 955,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "1834:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 956,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 929,
												"id": 957,
												"nodeType": "Return",
												"src": "1820:16:3"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:3",
										"text": "@dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._"
									},
									"id": 959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 959,
												"src": "1424:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 959,
												"src": "1435:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:3"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 959,
												"src": "1469:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 959,
												"src": "1475:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:3"
									},
									"scope": 1212,
									"src": "1408:435:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "2068:76:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 971,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "2082:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 978,
												"nodeType": "IfStatement",
												"src": "2078:29:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 976,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 970,
													"id": 977,
													"nodeType": "Return",
													"src": "2090:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 980,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "2131:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 981,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "2135:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 983,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 970,
												"id": 984,
												"nodeType": "Return",
												"src": "2117:20:3"
											}
										]
									},
									"documentation": {
										"id": 960,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:3",
										"text": "@dev Returns the division of two unsigned integers, with a division by zero flag.\n     * _Available since v3.4._"
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "2008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "2019:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:3"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "2053:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "2059:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:3"
									},
									"scope": 1212,
									"src": "1992:152:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "2379:76:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 998,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "2393:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "2389:29:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1003,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 997,
													"id": 1004,
													"nodeType": "Return",
													"src": "2401:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1007,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "2442:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1008,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 991,
																"src": "2446:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1010,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 997,
												"id": 1011,
												"nodeType": "Return",
												"src": "2428:20:3"
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:3",
										"text": "@dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     * _Available since v3.4._"
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1013,
												"src": "2319:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1013,
												"src": "2330:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:3"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1013,
												"src": "2364:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 993,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1013,
												"src": "2370:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:3"
									},
									"scope": 1212,
									"src": "2303:152:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "2757:108:3",
										"statements": [
											{
												"assignments": [
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1024,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1038,
														"src": "2767:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1028,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1025,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "2779:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1026,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "2783:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1030,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "2802:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1031,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "2807:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1029,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1036,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1024,
													"src": "2857:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1022,
												"id": 1037,
												"nodeType": "Return",
												"src": "2850:8:3"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:3",
										"text": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n     * - Addition cannot overflow."
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1039,
												"src": "2703:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1039,
												"src": "2714:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:3"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1039,
												"src": "2748:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:3"
									},
									"scope": 1212,
									"src": "2690:175:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "3203:88:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1050,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "3221:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1051,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "3226:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1049,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1056,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "3279:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1057,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "3283:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1048,
												"id": 1059,
												"nodeType": "Return",
												"src": "3272:12:3"
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:3",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow."
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1061,
												"src": "3149:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1061,
												"src": "3160:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:3"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1061,
												"src": "3194:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:3"
									},
									"scope": 1212,
									"src": "3136:155:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "3605:148:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1071,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "3619:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "3615:20:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1070,
													"id": 1075,
													"nodeType": "Return",
													"src": "3627:8:3"
												}
											},
											{
												"assignments": [
													1078
												],
												"declarations": [
													{
														"constant": false,
														"id": 1078,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1094,
														"src": "3645:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1077,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1082,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1079,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "3657:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1080,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "3661:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1084,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "3680:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1085,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "3684:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1087,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "3689:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1083,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1092,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1078,
													"src": "3745:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1070,
												"id": 1093,
												"nodeType": "Return",
												"src": "3738:8:3"
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:3",
										"text": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n     * - Multiplication cannot overflow."
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1095,
												"src": "3551:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1095,
												"src": "3562:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:3"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1095,
												"src": "3596:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:3"
									},
									"scope": 1212,
									"src": "3538:215:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "4284:83:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1106,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "4302:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1112,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "4355:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1113,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "4359:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1104,
												"id": 1115,
												"nodeType": "Return",
												"src": "4348:12:3"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:3",
										"text": "@dev Returns the integer division of two unsigned integers, reverting on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero."
									},
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1117,
												"src": "4230:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1117,
												"src": "4241:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:3"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1117,
												"src": "4275:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:3"
									},
									"scope": 1212,
									"src": "4217:150:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "4887:81:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1128,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "4905:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1134,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "4956:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1135,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "4960:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1126,
												"id": 1137,
												"nodeType": "Return",
												"src": "4949:12:3"
											}
										]
									},
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:3",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nreverting when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1139,
												"src": "4833:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1139,
												"src": "4844:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:3"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1139,
												"src": "4878:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:3"
									},
									"scope": 1212,
									"src": "4820:148:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "5527:68:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1152,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "5545:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1153,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "5550:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1155,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "5553:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1158,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "5583:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1159,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "5587:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1161,
												"nodeType": "Return",
												"src": "5576:12:3"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:3",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {trySub}.\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow."
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "5445:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "5456:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "5467:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1145,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:3"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "5518:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:3"
									},
									"scope": 1212,
									"src": "5432:163:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "6347:67:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1176,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "6365:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1179,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "6372:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1182,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "6402:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1183,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "6406:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1174,
												"id": 1185,
												"nodeType": "Return",
												"src": "6395:12:3"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:3",
										"text": "@dev Returns the integer division of two unsigned integers, reverting with custom message on\ndivision by zero. The result is rounded towards zero.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryDiv}.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero."
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1187,
												"src": "6265:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1187,
												"src": "6276:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1187,
												"src": "6287:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1169,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:3"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1187,
												"src": "6338:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:3"
									},
									"scope": 1212,
									"src": "6252:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "7155:67:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1200,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "7173:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1203,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "7180:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1206,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "7210:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1207,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "7214:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1198,
												"id": 1209,
												"nodeType": "Return",
												"src": "7203:12:3"
											}
										]
									},
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:3",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nreverting with custom message when dividing by zero.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryMod}.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero."
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1211,
												"src": "7073:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1211,
												"src": "7084:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1211,
												"src": "7095:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:3"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1211,
												"src": "7146:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:3"
									},
									"scope": 1212,
									"src": "7060:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1213,
							"src": "630:6594:3"
						}
					],
					"src": "33:7192:3"
				},
				"id": 3
			},
			"openzeppelin-solidity/contracts/proxy/Initializable.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/proxy/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							1276
						]
					},
					"id": 1277,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1214,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "79:32:4"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/utils/Address.sol",
							"file": "../utils/Address.sol",
							"id": 1215,
							"nodeType": "ImportDirective",
							"scope": 1277,
							"sourceUnit": 1573,
							"src": "113:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1216,
								"nodeType": "StructuredDocumentation",
								"src": "145:938:4",
								"text": "@dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\nbehind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\nexternal initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\nfunction so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\npossible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\nthat all initializers are idempotent. This is not verified automatically as constructors are by Solidity."
							},
							"fullyImplemented": true,
							"id": 1276,
							"linearizedBaseContracts": [
								1276
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1218,
									"name": "_initialized",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1276,
									"src": "1201:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1217,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1201:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1220,
									"name": "_initializing",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1276,
									"src": "1329:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1219,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1329:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "1483:368:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1224,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "1501:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1225,
																		"name": "_isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1275,
																		"src": "1518:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1518:16:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1501:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1538:13:4",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1228,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "1539:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1501:50:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1553:48:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 1223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1493:109:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "1493:109:4"
											},
											{
												"assignments": [
													1235
												],
												"declarations": [
													{
														"constant": false,
														"id": 1235,
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1258,
														"src": "1613:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1234,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1613:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1238,
												"initialValue": {
													"argumentTypes": null,
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1635:14:4",
													"subExpression": {
														"argumentTypes": null,
														"id": 1236,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "1636:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:36:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1239,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1235,
													"src": "1663:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1249,
												"nodeType": "IfStatement",
												"src": "1659:98:4",
												"trueBody": {
													"id": 1248,
													"nodeType": "Block",
													"src": "1679:78:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1240,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "1693:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1709:4:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1693:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1243,
															"nodeType": "ExpressionStatement",
															"src": "1693:20:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1244,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "1727:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1742:4:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1727:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1247,
															"nodeType": "ExpressionStatement",
															"src": "1727:19:4"
														}
													]
												}
											},
											{
												"id": 1250,
												"nodeType": "PlaceholderStatement",
												"src": "1767:1:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1251,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1235,
													"src": "1783:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1257,
												"nodeType": "IfStatement",
												"src": "1779:66:4",
												"trueBody": {
													"id": 1256,
													"nodeType": "Block",
													"src": "1799:46:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1252,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "1813:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1829:5:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1813:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1255,
															"nodeType": "ExpressionStatement",
															"src": "1813:21:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "1362:93:4",
										"text": "@dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 1259,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1480:2:4"
									},
									"src": "1460:391:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "1995:58:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2012:34:4",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1269,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "2040:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Initializable_$1276",
																			"typeString": "contract Initializable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Initializable_$1276",
																			"typeString": "contract Initializable"
																		}
																	],
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2032:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1267,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2032:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2032:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1265,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "2013:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$1572_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1296,
															"src": "2013:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2013:33:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1264,
												"id": 1273,
												"nodeType": "Return",
												"src": "2005:41:4"
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "1857:79:4",
										"text": "@dev Returns true if and only if the function is running in the constructor"
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isConstructor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1964:2:4"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1275,
												"src": "1989:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1989:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1988:6:4"
									},
									"scope": 1276,
									"src": "1941:112:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1277,
							"src": "1084:971:4"
						}
					],
					"src": "79:1977:4"
				},
				"id": 4
			},
			"openzeppelin-solidity/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1572
						]
					},
					"id": 1573,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1278,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1279,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:5",
								"text": "@dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1572,
							"linearizedBaseContracts": [
								1572
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "792:347:5",
										"statements": [
											{
												"assignments": [
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1288,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1295,
														"src": "989:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1289,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1282,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:5",
														"valueSize": 1
													},
													{
														"declaration": 1288,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:5",
														"valueSize": 1
													}
												],
												"id": 1290,
												"nodeType": "InlineAssembly",
												"src": "1067:41:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1291,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "1124:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1286,
												"id": 1294,
												"nodeType": "Return",
												"src": "1117:15:5"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:5",
										"text": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following\ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n===="
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1296,
												"src": "746:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:17:5"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1296,
												"src": "786:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:6:5"
									},
									"scope": 1572,
									"src": "726:413:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "2127:320:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1307,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1572",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1572",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1305,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2145:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1310,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1301,
																"src": "2170:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:5"
											},
											{
												"assignments": [
													1316,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1316,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1329,
														"src": "2299:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1315,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1323,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1317,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "2317:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2317:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1319,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1301,
																"src": "2340:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1325,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "2370:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:5"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:5",
										"text": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1330,
												"src": "2075:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1330,
												"src": "2102:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2074:43:5"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:5"
									},
									"scope": 1572,
									"src": "2056:391:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "3277:82:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1341,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "3305:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1342,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "3313:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1340,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1347,
															1367
														],
														"referencedDeclaration": 1367,
														"src": "3292:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1339,
												"id": 1345,
												"nodeType": "Return",
												"src": "3285:67:5"
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:5",
										"text": "@dev Performs a Solidity function call using a low level `call`. A\nplain`call` is an unsafe replacement for a function call: use this\nfunction instead.\n     * If `target` reverts with a revert reason, it is bubbled up by this\nfunction (like regular Solidity function calls).\n     * Returns the raw returned data. To convert to the expected return value,\nuse https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     * Requirements:\n     * - `target` must be a contract.\n- calling `target` with `data` must not revert.\n     * _Available since v3.1._"
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1347,
												"src": "3210:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1347,
												"src": "3226:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3209:35:5"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1347,
												"src": "3263:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1337,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3262:14:5"
									},
									"scope": 1572,
									"src": "3188:171:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "3698:76:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1360,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "3737:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1361,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "3745:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1363,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "3754:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1359,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1387,
															1437
														],
														"referencedDeclaration": 1437,
														"src": "3715:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1358,
												"id": 1365,
												"nodeType": "Return",
												"src": "3708:59:5"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:5",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n`errorMessage` as a fallback revert reason when `target` reverts.\n     * _Available since v3.1._"
									},
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1367,
												"src": "3603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1367,
												"src": "3619:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1367,
												"src": "3638:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1353,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:63:5"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1367,
												"src": "3684:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3683:14:5"
									},
									"scope": 1572,
									"src": "3581:193:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "4249:111:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1380,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4288:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1381,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "4296:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1382,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "4302:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1379,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1387,
															1437
														],
														"referencedDeclaration": 1437,
														"src": "4266:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1378,
												"id": 1385,
												"nodeType": "Return",
												"src": "4259:94:5"
											}
										]
									},
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:5",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\nbut also transferring `value` wei to `target`.\n     * Requirements:\n     * - the calling contract must have an ETH balance of at least `value`.\n- the called Solidity function must be `payable`.\n     * _Available since v3.1._"
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1387,
												"src": "4167:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1387,
												"src": "4183:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1387,
												"src": "4202:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4166:50:5"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1387,
												"src": "4235:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4234:14:5"
									},
									"scope": 1572,
									"src": "4136:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "4749:382:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1404,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1572",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1572",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1402,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4767:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1407,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "4792:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1414,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "4869:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1413,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "4858:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:5"
											},
											{
												"assignments": [
													1420,
													1422
												],
												"declarations": [
													{
														"constant": false,
														"id": 1420,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1436,
														"src": "4981:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1419,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1422,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1436,
														"src": "4995:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1421,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1429,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1427,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "5050:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1423,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "5022:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5022:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1425,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "5042:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1431,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "5090:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1432,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "5099:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1433,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "5111:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1430,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "5072:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1400,
												"id": 1435,
												"nodeType": "Return",
												"src": "5065:59:5"
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:5",
										"text": "@dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\nwith `errorMessage` as a fallback revert reason when `target` reverts.\n     * _Available since v3.1._"
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1437,
												"src": "4639:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1437,
												"src": "4655:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1437,
												"src": "4674:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1437,
												"src": "4689:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1395,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4638:78:5"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1437,
												"src": "4735:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4734:14:5"
									},
									"scope": 1572,
									"src": "4608:523:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "5408:97:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1448,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "5444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1449,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "5452:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1447,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1454,
															1489
														],
														"referencedDeclaration": 1489,
														"src": "5425:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1446,
												"id": 1452,
												"nodeType": "Return",
												"src": "5418:80:5"
											}
										]
									},
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:5",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\nbut performing a static call.\n     * _Available since v3.3._"
									},
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1454,
												"src": "5336:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1454,
												"src": "5352:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5335:35:5"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1454,
												"src": "5394:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1444,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5393:14:5"
									},
									"scope": 1572,
									"src": "5308:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "5817:288:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1468,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "5846:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1467,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "5835:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:5"
											},
											{
												"assignments": [
													1474,
													1476
												],
												"declarations": [
													{
														"constant": false,
														"id": 1474,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1488,
														"src": "5965:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1473,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1476,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1488,
														"src": "5979:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1475,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1481,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1479,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "6024:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1477,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "6006:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6006:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1483,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "6064:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1484,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "6073:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1485,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "6085:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1482,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "6046:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1465,
												"id": 1487,
												"nodeType": "Return",
												"src": "6039:59:5"
											}
										]
									},
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:5",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\nbut performing a static call.\n     * _Available since v3.3._"
									},
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1489,
												"src": "5717:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1489,
												"src": "5733:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1489,
												"src": "5752:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5716:63:5"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1489,
												"src": "5803:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5802:14:5"
									},
									"scope": 1572,
									"src": "5689:416:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "6381:101:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1500,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "6419:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1501,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "6427:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1499,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1506,
															1541
														],
														"referencedDeclaration": 1541,
														"src": "6398:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1504,
												"nodeType": "Return",
												"src": "6391:84:5"
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:5",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\nbut performing a delegate call.\n     * _Available since v3.4._"
									},
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1506,
												"src": "6314:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1506,
												"src": "6330:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6313:35:5"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1506,
												"src": "6367:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6366:14:5"
									},
									"scope": 1572,
									"src": "6284:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "6793:292:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1520,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "6822:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1519,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "6811:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6803:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:5"
											},
											{
												"assignments": [
													1526,
													1528
												],
												"declarations": [
													{
														"constant": false,
														"id": 1526,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1540,
														"src": "6943:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1525,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1528,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1540,
														"src": "6957:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1533,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "7004:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1529,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "6984:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6984:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1535,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "7044:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1536,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "7053:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1537,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "7065:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1534,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "7026:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1517,
												"id": 1539,
												"nodeType": "Return",
												"src": "7019:59:5"
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:5",
										"text": "@dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\nbut performing a delegate call.\n     * _Available since v3.4._"
									},
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1541,
												"src": "6698:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1541,
												"src": "6714:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1541,
												"src": "6733:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6697:63:5"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1541,
												"src": "6779:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6778:14:5"
									},
									"scope": 1572,
									"src": "6668:417:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "7220:596:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1552,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1543,
													"src": "7234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1568,
													"nodeType": "Block",
													"src": "7291:519:5",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1556,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "7375:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7375:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1566,
																"nodeType": "Block",
																"src": "7747:53:5",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1563,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1547,
																					"src": "7772:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1562,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7765:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1565,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:5"
																	}
																]
															},
															"id": 1567,
															"nodeType": "IfStatement",
															"src": "7371:429:5",
															"trueBody": {
																"id": 1561,
																"nodeType": "Block",
																"src": "7398:343:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:5"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1545,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1545,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1560,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1569,
												"nodeType": "IfStatement",
												"src": "7230:580:5",
												"trueBody": {
													"id": 1555,
													"nodeType": "Block",
													"src": "7243:42:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1553,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "7264:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1551,
															"id": 1554,
															"nodeType": "Return",
															"src": "7257:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1571,
												"src": "7118:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1571,
												"src": "7132:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1544,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1571,
												"src": "7157:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1546,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7117:67:5"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1571,
												"src": "7206:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1549,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7205:14:5"
									},
									"scope": 1572,
									"src": "7091:725:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1573,
							"src": "134:7684:5"
						}
					],
					"src": "33:7786:5"
				},
				"id": 5
			},
			"openzeppelin-solidity/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1595
						]
					},
					"id": 1596,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1574,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1595,
							"linearizedBaseContracts": [
								1595
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "668:34:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1579,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1578,
												"id": 1581,
												"nodeType": "Return",
												"src": "678:17:6"
											}
										]
									},
									"documentation": null,
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:6"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1583,
												"src": "651:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:6"
									},
									"scope": 1595,
									"src": "598:104:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "773:165:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1588,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1595",
														"typeString": "contract Context"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "783:4:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1590,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1587,
												"id": 1592,
												"nodeType": "Return",
												"src": "916:15:6"
											}
										]
									},
									"documentation": null,
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:6"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1594,
												"src": "759:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:6"
									},
									"scope": 1595,
									"src": "708:230:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1596,
							"src": "566:374:6"
						}
					],
					"src": "33:908:6"
				},
				"id": 6
			}
		}
	}
}