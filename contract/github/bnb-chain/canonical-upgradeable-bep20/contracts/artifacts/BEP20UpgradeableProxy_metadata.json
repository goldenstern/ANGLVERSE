{
	"compiler": {
		"version": "0.6.3+commit.8dda9521"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "logic",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "admin",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "previousAdmin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "AdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "Upgraded",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address",
						"name": "admin_",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "changeAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "implementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "implementation_",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					}
				],
				"name": "upgradeTo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "upgradeToAndCall",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"methods": {
				"admin()": {
					"details": "Returns the current admin.     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
				},
				"changeAdmin(address)": {
					"details": "Changes the admin of the proxy.     * Emits an {AdminChanged} event.     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
				},
				"implementation()": {
					"details": "Returns the current implementation.     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
				},
				"upgradeTo(address)": {
					"details": "Upgrade the implementation of the proxy.     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
				},
				"upgradeToAndCall(address,bytes)": {
					"details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract.     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol": "BEP20UpgradeableProxy"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"github/bnb-chain/canonical-upgradeable-bep20/contracts/BEP20UpgradeableProxy.sol": {
			"keccak256": "0x901008bb0c78c6b835d1f802f9a244acadd435980d4908b02b8671283cd99dcd",
			"urls": [
				"bzz-raw://8cc5d02c5341885c99aea6c0e43ea16352f3002e3f74a71d988c941e61e73324",
				"dweb:/ipfs/QmUkgLpzNt3bmnPXCxXzwGp1y5mmsown7eLMiLQxafuCjm"
			]
		},
		"openzeppelin-solidity/contracts/proxy/Proxy.sol": {
			"keccak256": "0x0414d54056b3d8f9102ae1142264e9361408397878148203ab7a25cbf6248f08",
			"urls": [
				"bzz-raw://ebdc01639f69030c754dc3462d5f437c4644164465066187e320f524579fbede",
				"dweb:/ipfs/QmZZhoPYagwu4MoJMAg26Y6Nfj4d9HJzUnvrMNsbo9ZorM"
			]
		},
		"openzeppelin-solidity/contracts/proxy/TransparentUpgradeableProxy.sol": {
			"keccak256": "0xf852214ea286716082f3ba480ff70bda2cbe2d11238091d2a440767d0ed49e61",
			"urls": [
				"bzz-raw://9381d4856e04635fcd426b0ef39a1b5aa56764170f23823daa91905a06751531",
				"dweb:/ipfs/QmZ7vo8xo9GUrcxutmQnCYy9NpvjsxHWfqQCpFzYtHNu7A"
			]
		},
		"openzeppelin-solidity/contracts/proxy/UpgradeableProxy.sol": {
			"keccak256": "0x81af1059a5bd5fb25cb0351499e1d4110416f5b0000ffad6427cbf6088b193a4",
			"urls": [
				"bzz-raw://621f2fedaeeacf70ff1554748f63356555f591cdcf29c74e3d23a83720a078a2",
				"dweb:/ipfs/QmYGnscyZgJGYgXKcoYhNX2M6uoJiHS1zTsQnu5NsJxPGG"
			]
		},
		"openzeppelin-solidity/contracts/utils/Address.sol": {
			"keccak256": "0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea",
			"urls": [
				"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c",
				"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN"
			]
		}
	},
	"version": 1
}